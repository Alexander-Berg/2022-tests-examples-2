CREATE DATABASE IF NOT EXISTS mobile;

CREATE TABLE mobile.client_events
(
    `APIKey` UInt32,
    `APIKey128` FixedString(36),
    `StartDate` Date,
    `UUID` String,
    `AttributionID` UInt32 DEFAULT CAST(0, 'UInt32'),
    `AttributionIDUUIDHash` UInt64 DEFAULT sipHash64(UUID),
    `DeviceID` String,
    `OriginalDeviceID` String,
    `UUIDHash` UInt64,
    `DeviceIDHash` UInt64,
    `IFV` String,
    `AppPlatform` String,
    `OperatingSystem` Enum8('unknown' = 0, 'android' = 1, 'ios' = 2, 'windows' = 3, 'macos' = 4, 'linux' = 5) DEFAULT CAST(multiIf(AppPlatform = 'android', 1, AppPlatform = 'iOS', 2, AppPlatform = 'WindowsPhone', 3, 0), 'Enum8(\'unknown\' = 0, \'android\' = 1, \'ios\' = 2, \'windows\' = 3, \'macos\' = 4, \'linux\' = 5)'),
    `AppFramework` UInt8,
    `AppVersionName` String,
    `AppBuildNumber` UInt32,
    `KitVersion` UInt32,
    `Manufacturer` String DEFAULT '',
    `Model` String DEFAULT '',
    `OriginalManufacturer` String DEFAULT Manufacturer,
    `OriginalModel` String DEFAULT Model,
    `OSVersion` String,
    `OSApiLevel` UInt32,
    `ScreenWidth` UInt32,
    `ScreenHeight` UInt32,
    `ScreenDPI` UInt32,
    `ScaleFactor` Float64,
    `Imei` Array(String),
    `AndroidID` String,
    `ADVID` String,
    `WindowsAID` String,
    `OAID` String,
    `YandexAdvertisementId` String,
    `LimitYandexAdvertisementId` Enum8('undefined' = -1, 'false' = 0, 'true' = 1),
    `LimitAdTracking` Enum8('undefined' = -1, 'false' = 0, 'true' = 1),
    `ClientKitVersion` UInt32,
    `KitBuildType` UInt16,
    `KitBuildNumber` UInt32,
    `SendTimestamp` UInt64,
    `SendTimeZone` Int32,
    `ReceiveDate` Date,
    `ReceiveTimestamp` UInt64,
    `SessionID` UInt64,
    `SessionType` UInt8,
    `DeviceIDSessionIDHash` UInt64,
    `StartTime` DateTime,
    `StartTimestamp` UInt64,
    `StartTimeZone` Int32,
    `RegionTimeZone` Int32 DEFAULT StartTimeZone,
    `Locale` String DEFAULT '',
    `LocaleLanguage` String DEFAULT extract(Locale, '^([a-z][a-z][a-z]?)'),
    `LocaleScript` String DEFAULT extract(Locale, '-([^_-]+)'),
    `LocaleRegion` String DEFAULT extract(Locale, '([A-Z][A-Z])$'),
    `LocationSource` UInt8,
    `Latitude` Float64,
    `Longitude` Float64,
    `LocationTimestamp` UInt64,
    `LocationPrecision` UInt32,
    `LocationDirection` UInt32,
    `LocationSpeed` UInt32,
    `LocationAltitude` Int32,
    `WifiAccessPointSsid` String,
    `WifiAccessPointState` UInt8,
    `ConnectionType` UInt8,
    `NetworkType` String,
    `CountryCode` UInt32,
    `OperatorID` UInt32,
    `OperatorName` String,
    `SimCards.CountriesCodes` Array(UInt32),
    `SimCards.OperatorsIDs` Array(UInt32),
    `SimCards.OperatorsNames` Array(String),
    `SimCards.AreRoaming` Array(UInt8),
    `SimCards.IccIDs` Array(String),
    `DeviceType` UInt8,
    `IsRooted` UInt8,
    `EventID` UInt64 DEFAULT cityHash64(SessionType, SessionID, UUIDHash, APIKey, EventNumber),
    `EventNumber` UInt64,
    `EventGlobalNumber` UInt64,
    `EventNumberOfType` UInt64,
    `EventTimeOffset` UInt64,
    `EventType` UInt8,
    `EventName` String,
    `EventIsTruncated` UInt8,
    `EventBytesTruncated` UInt64,
    `EventSource` Enum8('sdk' = 0, 'import_api' = 1) DEFAULT CAST(0, 'Enum8(\'sdk\' = 0, \'import_api\' = 1)'),
    `EventFirstOccurrence` Enum8('undefined' = -1, 'false' = 0, 'true' = 1) DEFAULT CAST('undefined', 'Enum8(\'undefined\' = -1, \'false\' = 0, \'true\' = 1)'),
    `EventValue` String,
    `EventValueJsonReference` String,
    `EventValueCrash` String DEFAULT EventValue,
    `EventValueReferrer` String DEFAULT EventValue,
    `EventValueError` String DEFAULT EventValue,
    `CrashID` UInt64 DEFAULT sipHash64(EventValueCrash),
    `CrashGroupID` UInt64,
    `ErrorID` UInt64 DEFAULT sipHash64(EventValueError),
    `ErrorGroupID` UInt64 DEFAULT ErrorID,
    `EventEnvironment` String,
    `EventEnvironmentParsedParams.Key1` Array(String),
    `EventEnvironmentParsedParams.Key2` Array(String),
    `ReportEnvironment.Keys` Array(String),
    `ReportEnvironment.Values` Array(String),
    `ParsedParams.Key1` Array(String),
    `ParsedParams.Key2` Array(String),
    `ParsedParams.Key3` Array(String),
    `ParsedParams.Key4` Array(String),
    `ParsedParams.Key5` Array(String),
    `ParsedParams.Key6` Array(String),
    `ParsedParams.Key7` Array(String),
    `ParsedParams.Key8` Array(String),
    `ParsedParams.Key9` Array(String),
    `ParsedParams.Key10` Array(String),
    `ParsedParams.Quantity` Array(UInt32),
    `UrlParameters.Keys` Array(String),
    `UrlParameters.Values` Array(String),
    `AttributionWindow` Int64,
    `AttributionMethod` String,
    `TrackingID` UInt64,
    `PublisherID` UInt64,
    `YMTrackingID` UInt64,
    `RegionID` UInt32,
    `AppID` String,
    `ClientIP` FixedString(16),
    `ClientIPHash` UInt64,
    `ClientPort` UInt16,
    `ClickID` String,
    `AFPubID` String,
    `UserAgent` String,
    `Sex` UInt8,
    `Age` UInt8,
    `ProfileID` String,
    `ProfileIDHash` UInt64 DEFAULT if(empty(ProfileID), 0, sipHash64(ProfileID)),
    `AccountID` String,
    `AccountIDHash` UInt64 DEFAULT sipHash64(AccountID),
    `AccountType` String,
    `AccountOptions.Keys` Array(String),
    `AccountOptions.Values` Array(String),
    `Clids.Names` Array(String),
    `Clids.Values` Array(UInt64),
    `InvalidationReasons` Array(String),
    `Sign` Int8,
    `HasAttributes` UInt8 DEFAULT arrayExists(x -> (x != ''), `ParsedParams.Key1`),
    `IsForPostback` UInt8,
    `EventValueForPostback` String,
    `EventDate` Date DEFAULT toDate(EventDateTime),
    `EventDateTime` DateTime DEFAULT toDateTime(StartTime + EventTimeOffset),
    `EventTimestamp` UInt64 DEFAULT StartTimestamp + EventTimeOffset,
    `EventTimeZone` Int32 DEFAULT StartTimeZone,
    `RequestID` UInt64 DEFAULT toUInt64(0),
    `AppDebuggable` Enum8('undefined' = -1, 'false' = 0, 'true' = 1) DEFAULT CAST('undefined', 'Enum8(\'undefined\' = -1, \'false\' = 0, \'true\' = 1)'),
    `LocationEnabled` Enum8('undefined' = -1, 'false' = 0, 'true' = 1) DEFAULT CAST('undefined', 'Enum8(\'undefined\' = -1, \'false\' = 0, \'true\' = 1)'),
    `StartTimeCorrected` UInt8 DEFAULT 0,
    `StartTimeObtainedBeforeSynchronization` UInt8 DEFAULT 0,
    `PushActionType` UInt8 MATERIALIZED 0,
    `PushCampaignID` UInt64 MATERIALIZED 0,
    `PushHypothesisID` UInt64 MATERIALIZED 0,
    `PushGroupID` UInt64 MATERIALIZED 0,
    `PushTag` String MATERIALIZED '',
    `SupPushID` String MATERIALIZED '',
    `SupPushType` String MATERIALIZED '',
    `XivaEvent` String MATERIALIZED '',
    `XivaTransitID` String MATERIALIZED '',
    `IsRevenueVerified` Enum8('undefined' = -1, 'false' = 0, 'true' = 1) MATERIALIZED 'undefined'
)
ENGINE = MergeTree()
PARTITION BY toMonday(EventDate)
ORDER BY (APIKey, EventDate, EventName, DeviceIDHash)
SAMPLE BY DeviceIDHash
SETTINGS index_granularity = 8192;

CREATE TABLE IF NOT EXISTS mobile.client_events_layer AS mobile.client_events
ENGINE = Distributed('test_shard_localhost', 'mobile', 'client_events');

CREATE TABLE IF NOT EXISTS mobile.client_events_all AS mobile.client_events
ENGINE = Distributed('test_shard_localhost', 'mobile', 'client_events');

CREATE TABLE IF NOT EXISTS mobile.devices_client_events_v2
(
    `FakeDate` Date,
    `APIKey` UInt32,
    `DeviceIDHash` UInt64,
    `UUIDHash` UInt64,
    `AttributionIDUUIDHash` UInt64,
    `EventTimestamp` UInt64,
    `EventLabel` String,
    `EventCount` AggregateFunction(count)
)
ENGINE = AggregatingMergeTree()
PARTITION BY FakeDate
ORDER BY (APIKey, EventLabel, DeviceIDHash, UUIDHash, AttributionIDUUIDHash)
SAMPLE BY DeviceIDHash
SETTINGS index_granularity = 8192;

CREATE MATERIALIZED VIEW IF NOT EXISTS mobile.devices_client_events_v2_view TO mobile.devices_client_events_v2
(
    `FakeDate` Date,
    `APIKey` UInt32,
    `DeviceIDHash` UInt64,
    `UUIDHash` UInt64,
    `AttributionIDUUIDHash` UInt64,
    `EventTimestamp` UInt64,
    `EventLabel` String,
    `EventCount` AggregateFunction(count)
) AS
SELECT
    toStartOfQuarter(EventDate) AS FakeDate,
    APIKey,
    DeviceIDHash,
    UUIDHash,
    AttributionIDUUIDHash,
    max(EventTimestamp) AS EventTimestamp,
    min(EventName) AS EventLabel,
    countState() AS EventCount
FROM mobile.client_events
WHERE EventType = 4
GROUP BY
    FakeDate,
    APIKey,
    DeviceIDHash,
    UUIDHash,
    AttributionIDUUIDHash,
    sipHash64(EventName);

CREATE TABLE IF NOT EXISTS mobile.devices_client_events
(
    `FakeDate` Date,
    `APIKey` UInt32,
    `DeviceIDHash` UInt64,
    `UUIDHash` UInt64,
    `AttributionIDUUIDHash` UInt64,
    `EventTimestamp` UInt64,
    `EventLabel` String,
    `EventCount` AggregateFunction(count)
)
ENGINE = Merge('mobile', '^devices_client_events_v\\d+$');

CREATE TABLE IF NOT EXISTS mobile.devices_client_events_layer AS mobile.devices_client_events
ENGINE = Distributed('test_shard_localhost', 'mobile', 'devices_client_events');

CREATE TABLE IF NOT EXISTS mobile.devices_client_events_all AS mobile.devices_client_events
ENGINE = Distributed('test_shard_localhost', 'mobile', 'devices_client_events');

CREATE TABLE IF NOT EXISTS mobile.push_token_events_v2
(
    `APIKey` UInt32,
    `APIKey128` FixedString(36),
    `StartDate` Date,
    `UUID` String,
    `AttributionID` UInt32 DEFAULT CAST(0, 'UInt32'),
    `AttributionIDUUIDHash` UInt64 DEFAULT sipHash64(UUID),
    `DeviceID` String,
    `OriginalDeviceID` String,
    `DeviceIDHash` UInt64,
    `IFV` String,
    `AppPlatform` String,
    `OperatingSystem` Enum8('unknown' = 0, 'android' = 1, 'ios' = 2, 'windows' = 3, 'macos' = 4, 'linux' = 5) DEFAULT CAST(multiIf(AppPlatform = 'android', 1, AppPlatform = 'iOS', 2, AppPlatform = 'WindowsPhone', 3, 0), 'Enum8(\'unknown\' = 0, \'android\' = 1, \'ios\' = 2, \'windows\' = 3, \'macos\' = 4, \'linux\' = 5)'),
    `PushTokenType` UInt8 DEFAULT CAST(multiIf(OperatingSystem = 'android', 1, OperatingSystem = 'ios', 2, OperatingSystem = 'windows', 3, OperatingSystem = 'macos', 2, 0), 'UInt8'),
    `AppFramework` UInt8,
    `AppVersionName` String,
    `AppBuildNumber` UInt32,
    `KitVersion` UInt32,
    `Manufacturer` String DEFAULT '',
    `Model` String DEFAULT '',
    `OriginalManufacturer` String DEFAULT Manufacturer,
    `OriginalModel` String DEFAULT Model,
    `OSVersion` String,
    `OSApiLevel` UInt32,
    `ScreenWidth` UInt32,
    `ScreenHeight` UInt32,
    `ScreenDPI` UInt32,
    `ScaleFactor` Float64,
    `Imei` Array(String),
    `AndroidID` String,
    `ADVID` String,
    `WindowsAID` String,
    `OAID` String,
    `YandexAdvertisementId` String,
    `LimitYandexAdvertisementId` Enum8('undefined' = -1, 'false' = 0, 'true' = 1),
    `LimitAdTracking` Enum8('undefined' = -1, 'false' = 0, 'true' = 1),
    `ClientKitVersion` UInt32,
    `KitBuildType` UInt16,
    `KitBuildNumber` UInt32,
    `SendTimestamp` UInt64,
    `SendTimeZone` Int32,
    `ReceiveDate` Date,
    `ReceiveTimestamp` UInt64,
    `SessionID` UInt64,
    `SessionType` UInt8,
    `StartTime` DateTime,
    `StartTimestamp` UInt64,
    `StartTimeZone` Int32,
    `StartTimeCorrected` UInt8,
    `StartTimeObtainedBeforeSynchronization` UInt8,
    `RegionTimeZone` Int32 DEFAULT StartTimeZone,
    `Locale` String DEFAULT '',
    `LocaleLanguage` String DEFAULT extract(Locale, '^([a-z][a-z][a-z]?)'),
    `LocaleScript` String DEFAULT extract(Locale, '-([^_-]+)'),
    `LocaleRegion` String DEFAULT extract(Locale, '([A-Z][A-Z])$'),
    `LocationSource` UInt8,
    `Latitude` Float64,
    `Longitude` Float64,
    `LocationTimestamp` UInt64,
    `LocationPrecision` UInt32,
    `LocationDirection` UInt32,
    `LocationSpeed` UInt32,
    `LocationAltitude` Int32,
    `LocationEnabled` Enum8('undefined' = -1, 'false' = 0, 'true' = 1),
    `Wifi.Macs` Array(String),
    `Wifi.SignalsStrengths` Array(Int32),
    `Wifi.Ssids` Array(String),
    `Wifi.AreConnected` Array(UInt8),
    `Wifi.LastVisibleTimeOffset` Array(UInt64) DEFAULT arrayResize(emptyArrayUInt64(), length(Wifi.Macs)),
    `ConnectionType` UInt8,
    `NetworkType` String,
    `CountryCode` UInt32,
    `OperatorID` UInt32,
    `OperatorName` String,
    `Cells.CellsIDs` Array(UInt32),
    `Cells.SignalsStrengths` Array(Int32),
    `Cells.Lacs` Array(UInt32),
    `Cells.CountriesCodes` Array(UInt32),
    `Cells.OperatorsIDs` Array(UInt32),
    `Cells.OperatorsNames` Array(String),
    `Cells.AreConnected` Array(UInt8),
    `Cells.Types` Array(UInt8),
    `Cells.PhysicalsCellsIDs` Array(UInt32),
    `Cells.LastVisibleTimeOffset` Array(UInt64) DEFAULT arrayResize(emptyArrayUInt64(), length(Cells.CellsIDs)),
    `SimCards.CountriesCodes` Array(UInt32),
    `SimCards.OperatorsIDs` Array(UInt32),
    `SimCards.OperatorsNames` Array(String),
    `SimCards.AreRoaming` Array(UInt8),
    `SimCards.IccIDs` Array(String),
    `NetworksInterfaces.Names` Array(String),
    `NetworksInterfaces.Macs` Array(String),
    `DeviceType` UInt8,
    `IsRooted` UInt8,
    `EventID` UInt64,
    `EventNumber` UInt64,
    `EventGlobalNumber` UInt64,
    `EventNumberOfType` UInt64,
    `EventDate` Date,
    `EventDateTime` DateTime,
    `EventTimestamp` UInt64,
    `EventTimeZone` Int32,
    `EventTimeOffset` UInt64,
    `EventType` UInt8,
    `EventName` String,
    `EventIsTruncated` UInt8,
    `EventBytesTruncated` UInt64,
    `EventValue` String,
    `EventEnvironmentParsedParams.Key1` Array(String),
    `EventEnvironmentParsedParams.Key2` Array(String),
    `ReportEnvironment.Keys` Array(String),
    `ReportEnvironment.Values` Array(String),
    `RegionID` UInt32,
    `AppID` String,
    `ClientIP` FixedString(16),
    `ClientIPHash` UInt64,
    `ClientPort` UInt16,
    `Sex` UInt8,
    `Age` UInt8,
    `ProfileID` String,
    `ProfileIDHash` UInt64 DEFAULT if(empty(ProfileID), 0, sipHash64(ProfileID)),
    `AccountID` String,
    `AccountType` String,
    `AccountOptions.Keys` Array(String),
    `AccountOptions.Values` Array(String),
    `Clids.Names` Array(String),
    `Clids.Values` Array(UInt64),
    `Version` UInt64,
    `IsForPostback` UInt8,
    `EventValueForPostback` String,
    `FakeDate` Date MATERIALIZED toDate('0000-00-00'),
    `PushTokenIsEmpty` UInt8 MATERIALIZED empty(EventValue),
    `TokenEnvironment` Enum8('test' = 0, 'production' = 1) MATERIALIZED CAST(if(has(EventEnvironmentParsedParams.Key1, 'ios_aps_environment'), (EventEnvironmentParsedParams.Key2[indexOf(EventEnvironmentParsedParams.Key1, 'ios_aps_environment')]) = 'production', 1), 'Enum8(\'test\' = 0, \'production\' = 1)')
)
ENGINE = MergeTree()
PARTITION BY toStartOfInterval(EventDate, toIntervalMonth(6))
ORDER BY (APIKey, toStartOfInterval(EventDate, toIntervalMonth(6)), PushTokenType, DeviceIDHash)
SAMPLE BY DeviceIDHash
SETTINGS index_granularity = 8192;

CREATE TABLE IF NOT EXISTS mobile.total_push_token_events
(
    `APIKey` UInt32,
    `APIKey128` FixedString(36),
    `StartDate` Date,
    `UUID` String,
    `AttributionID` UInt32 DEFAULT CAST(0, 'UInt32'),
    `AttributionIDUUIDHash` UInt64 DEFAULT sipHash64(UUID),
    `DeviceID` String,
    `OriginalDeviceID` String,
    `DeviceIDHash` UInt64,
    `IFV` String,
    `AppPlatform` String,
    `OperatingSystem` Enum8('unknown' = 0, 'android' = 1, 'ios' = 2, 'windows' = 3, 'macos' = 4, 'linux' = 5) DEFAULT CAST(multiIf(AppPlatform = 'android', 1, AppPlatform = 'iOS', 2, AppPlatform = 'WindowsPhone', 3, 0), 'Enum8(\'unknown\' = 0, \'android\' = 1, \'ios\' = 2, \'windows\' = 3, \'macos\' = 4, \'linux\' = 5)'),
    `PushTokenType` UInt8 DEFAULT CAST(multiIf(OperatingSystem = 'android', 1, OperatingSystem = 'ios', 2, OperatingSystem = 'windows', 3, OperatingSystem = 'macos', 2, 0), 'UInt8'),
    `AppFramework` UInt8,
    `AppVersionName` String,
    `AppBuildNumber` UInt32,
    `KitVersion` UInt32,
    `Manufacturer` String DEFAULT '',
    `Model` String DEFAULT '',
    `OriginalManufacturer` String DEFAULT Manufacturer,
    `OriginalModel` String DEFAULT Model,
    `OSVersion` String,
    `OSApiLevel` UInt32,
    `ScreenWidth` UInt32,
    `ScreenHeight` UInt32,
    `ScreenDPI` UInt32,
    `ScaleFactor` Float64,
    `Imei` Array(String),
    `AndroidID` String,
    `ADVID` String,
    `WindowsAID` String,
    `OAID` String,
    `YandexAdvertisementId` String,
    `LimitYandexAdvertisementId` Enum8('undefined' = -1, 'false' = 0, 'true' = 1),
    `LimitAdTracking` Enum8('undefined' = -1, 'false' = 0, 'true' = 1),
    `ClientKitVersion` UInt32,
    `KitBuildType` UInt16,
    `KitBuildNumber` UInt32,
    `SendTimestamp` UInt64,
    `SendTimeZone` Int32,
    `ReceiveDate` Date,
    `ReceiveTimestamp` UInt64,
    `SessionID` UInt64,
    `SessionType` UInt8,
    `StartTime` DateTime,
    `StartTimestamp` UInt64,
    `StartTimeZone` Int32,
    `StartTimeCorrected` UInt8,
    `StartTimeObtainedBeforeSynchronization` UInt8,
    `RegionTimeZone` Int32 DEFAULT StartTimeZone,
    `Locale` String DEFAULT '',
    `LocaleLanguage` String DEFAULT extract(Locale, '^([a-z][a-z])'),
    `LocaleScript` String DEFAULT extract(Locale, '-([^_-]+)'),
    `LocaleRegion` String DEFAULT extract(Locale, '([A-Z][A-Z])$'),
    `LocationSource` UInt8,
    `Latitude` Float64,
    `Longitude` Float64,
    `LocationTimestamp` UInt64,
    `LocationPrecision` UInt32,
    `LocationDirection` UInt32,
    `LocationSpeed` UInt32,
    `LocationAltitude` Int32,
    `LocationEnabled` Enum8('undefined' = -1, 'false' = 0, 'true' = 1),
    `Wifi.Macs` Array(String),
    `Wifi.SignalsStrengths` Array(Int32),
    `Wifi.Ssids` Array(String),
    `Wifi.AreConnected` Array(UInt8),
    `Wifi.LastVisibleTimeOffset` Array(UInt64) DEFAULT arrayResize(emptyArrayUInt64(), length(Wifi.Macs)),
    `ConnectionType` UInt8,
    `NetworkType` String,
    `CountryCode` UInt32,
    `OperatorID` UInt32,
    `OperatorName` String,
    `Cells.CellsIDs` Array(UInt32),
    `Cells.SignalsStrengths` Array(Int32),
    `Cells.Lacs` Array(UInt32),
    `Cells.CountriesCodes` Array(UInt32),
    `Cells.OperatorsIDs` Array(UInt32),
    `Cells.OperatorsNames` Array(String),
    `Cells.AreConnected` Array(UInt8),
    `Cells.Types` Array(UInt8),
    `Cells.PhysicalsCellsIDs` Array(UInt32),
    `Cells.LastVisibleTimeOffset` Array(UInt64) DEFAULT arrayResize(emptyArrayUInt64(), length(Cells.CellsIDs)),
    `SimCards.CountriesCodes` Array(UInt32),
    `SimCards.OperatorsIDs` Array(UInt32),
    `SimCards.OperatorsNames` Array(String),
    `SimCards.AreRoaming` Array(UInt8),
    `SimCards.IccIDs` Array(String),
    `NetworksInterfaces.Names` Array(String),
    `NetworksInterfaces.Macs` Array(String),
    `DeviceType` UInt8,
    `IsRooted` UInt8,
    `EventID` UInt64,
    `EventNumber` UInt64,
    `EventGlobalNumber` UInt64,
    `EventNumberOfType` UInt64,
    `EventDate` Date,
    `EventDateTime` DateTime,
    `EventTimestamp` UInt64,
    `EventTimeZone` Int32,
    `EventTimeOffset` UInt64,
    `EventType` UInt8,
    `EventName` String,
    `EventIsTruncated` UInt8,
    `EventBytesTruncated` UInt64,
    `EventValue` String,
    `EventEnvironmentParsedParams.Key1` Array(String),
    `EventEnvironmentParsedParams.Key2` Array(String),
    `ReportEnvironment.Keys` Array(String),
    `ReportEnvironment.Values` Array(String),
    `RegionID` UInt32,
    `AppID` String,
    `ClientIP` FixedString(16),
    `ClientIPHash` UInt64,
    `ClientPort` UInt16,
    `Sex` UInt8,
    `Age` UInt8,
    `ProfileID` String,
    `ProfileIDHash` UInt64 DEFAULT if(empty(ProfileID), 0, sipHash64(ProfileID)),
    `AccountID` String,
    `AccountType` String,
    `AccountOptions.Keys` Array(String),
    `AccountOptions.Values` Array(String),
    `Clids.Names` Array(String),
    `Clids.Values` Array(UInt64),
    `Version` UInt64,
    `IsForPostback` UInt8,
    `EventValueForPostback` String,
    `FakeDate` Date DEFAULT toDate('0000-00-00'),
    `PushTokenIsEmpty` UInt8 DEFAULT empty(EventValue),
    `TokenEnvironment` Enum8('test' = 0, 'production' = 1) DEFAULT CAST(if(has(EventEnvironmentParsedParams.Key1, 'ios_aps_environment'), (EventEnvironmentParsedParams.Key2[indexOf(EventEnvironmentParsedParams.Key1, 'ios_aps_environment')]) = 'production', 1), 'Enum8(\'test\' = 0, \'production\' = 1)')
)
ENGINE = Merge('mobile', '^(push_token_events_v[0-9]+|invalid_push_tokens)$');

CREATE TABLE IF NOT EXISTS mobile.total_push_token_events_layer
(
    `APIKey` UInt32,
    `APIKey128` FixedString(36),
    `StartDate` Date,
    `UUID` String,
    `AttributionID` UInt32 DEFAULT CAST(0, 'UInt32'),
    `AttributionIDUUIDHash` UInt64 DEFAULT sipHash64(UUID),
    `DeviceID` String,
    `OriginalDeviceID` String,
    `DeviceIDHash` UInt64,
    `IFV` String,
    `AppPlatform` String,
    `OperatingSystem` Enum8('unknown' = 0, 'android' = 1, 'ios' = 2, 'windows' = 3, 'macos' = 4, 'linux' = 5) DEFAULT CAST(multiIf(AppPlatform = 'android', 1, AppPlatform = 'iOS', 2, AppPlatform = 'WindowsPhone', 3, 0), 'Enum8(\'unknown\' = 0, \'android\' = 1, \'ios\' = 2, \'windows\' = 3, \'macos\' = 4, \'linux\' = 5)'),
    `PushTokenType` UInt8 DEFAULT CAST(multiIf(OperatingSystem = 'android', 1, OperatingSystem = 'ios', 2, OperatingSystem = 'windows', 3, OperatingSystem = 'macos', 2, 0), 'UInt8'),
    `AppFramework` UInt8,
    `AppVersionName` String,
    `AppBuildNumber` UInt32,
    `KitVersion` UInt32,
    `Manufacturer` String DEFAULT '',
    `Model` String DEFAULT '',
    `OriginalManufacturer` String DEFAULT Manufacturer,
    `OriginalModel` String DEFAULT Model,
    `OSVersion` String,
    `OSApiLevel` UInt32,
    `ScreenWidth` UInt32,
    `ScreenHeight` UInt32,
    `ScreenDPI` UInt32,
    `ScaleFactor` Float64,
    `Imei` Array(String),
    `AndroidID` String,
    `ADVID` String,
    `WindowsAID` String,
    `OAID` String,
    `YandexAdvertisementId` String,
    `LimitYandexAdvertisementId` Enum8('undefined' = -1, 'false' = 0, 'true' = 1),
    `LimitAdTracking` Enum8('undefined' = -1, 'false' = 0, 'true' = 1),
    `ClientKitVersion` UInt32,
    `KitBuildType` UInt16,
    `KitBuildNumber` UInt32,
    `SendTimestamp` UInt64,
    `SendTimeZone` Int32,
    `ReceiveDate` Date,
    `ReceiveTimestamp` UInt64,
    `SessionID` UInt64,
    `SessionType` UInt8,
    `StartTime` DateTime,
    `StartTimestamp` UInt64,
    `StartTimeZone` Int32,
    `StartTimeCorrected` UInt8,
    `StartTimeObtainedBeforeSynchronization` UInt8,
    `RegionTimeZone` Int32 DEFAULT StartTimeZone,
    `Locale` String DEFAULT '',
    `LocaleLanguage` String DEFAULT extract(Locale, '^([a-z][a-z])'),
    `LocaleScript` String DEFAULT extract(Locale, '-([^_-]+)'),
    `LocaleRegion` String DEFAULT extract(Locale, '([A-Z][A-Z])$'),
    `LocationSource` UInt8,
    `Latitude` Float64,
    `Longitude` Float64,
    `LocationTimestamp` UInt64,
    `LocationPrecision` UInt32,
    `LocationDirection` UInt32,
    `LocationSpeed` UInt32,
    `LocationAltitude` Int32,
    `LocationEnabled` Enum8('undefined' = -1, 'false' = 0, 'true' = 1),
    `Wifi.Macs` Array(String),
    `Wifi.SignalsStrengths` Array(Int32),
    `Wifi.Ssids` Array(String),
    `Wifi.AreConnected` Array(UInt8),
    `Wifi.LastVisibleTimeOffset` Array(UInt64) DEFAULT arrayResize(emptyArrayUInt64(), length(Wifi.Macs)),
    `ConnectionType` UInt8,
    `NetworkType` String,
    `CountryCode` UInt32,
    `OperatorID` UInt32,
    `OperatorName` String,
    `Cells.CellsIDs` Array(UInt32),
    `Cells.SignalsStrengths` Array(Int32),
    `Cells.Lacs` Array(UInt32),
    `Cells.CountriesCodes` Array(UInt32),
    `Cells.OperatorsIDs` Array(UInt32),
    `Cells.OperatorsNames` Array(String),
    `Cells.AreConnected` Array(UInt8),
    `Cells.Types` Array(UInt8),
    `Cells.PhysicalsCellsIDs` Array(UInt32),
    `Cells.LastVisibleTimeOffset` Array(UInt64) DEFAULT arrayResize(emptyArrayUInt64(), length(Cells.CellsIDs)),
    `SimCards.CountriesCodes` Array(UInt32),
    `SimCards.OperatorsIDs` Array(UInt32),
    `SimCards.OperatorsNames` Array(String),
    `SimCards.AreRoaming` Array(UInt8),
    `SimCards.IccIDs` Array(String),
    `NetworksInterfaces.Names` Array(String),
    `NetworksInterfaces.Macs` Array(String),
    `DeviceType` UInt8,
    `IsRooted` UInt8,
    `EventID` UInt64,
    `EventNumber` UInt64,
    `EventGlobalNumber` UInt64,
    `EventNumberOfType` UInt64,
    `EventDate` Date,
    `EventDateTime` DateTime,
    `EventTimestamp` UInt64,
    `EventTimeZone` Int32,
    `EventTimeOffset` UInt64,
    `EventType` UInt8,
    `EventName` String,
    `EventIsTruncated` UInt8,
    `EventBytesTruncated` UInt64,
    `EventValue` String,
    `EventEnvironmentParsedParams.Key1` Array(String),
    `EventEnvironmentParsedParams.Key2` Array(String),
    `ReportEnvironment.Keys` Array(String),
    `ReportEnvironment.Values` Array(String),
    `RegionID` UInt32,
    `AppID` String,
    `ClientIP` FixedString(16),
    `ClientIPHash` UInt64,
    `ClientPort` UInt16,
    `Sex` UInt8,
    `Age` UInt8,
    `ProfileID` String,
    `ProfileIDHash` UInt64 DEFAULT if(empty(ProfileID), 0, sipHash64(ProfileID)),
    `AccountID` String,
    `AccountType` String,
    `AccountOptions.Keys` Array(String),
    `AccountOptions.Values` Array(String),
    `Clids.Names` Array(String),
    `Clids.Values` Array(UInt64),
    `Version` UInt64,
    `IsForPostback` UInt8,
    `EventValueForPostback` String,
    `FakeDate` Date DEFAULT toDate('0000-00-00'),
    `PushTokenIsEmpty` UInt8 DEFAULT empty(EventValue),
    `TokenEnvironment` Enum8('test' = 0, 'production' = 1) DEFAULT CAST(if(has(EventEnvironmentParsedParams.Key1, 'ios_aps_environment'), (EventEnvironmentParsedParams.Key2[indexOf(EventEnvironmentParsedParams.Key1, 'ios_aps_environment')]) = 'production', 1), 'Enum8(\'test\' = 0, \'production\' = 1)')
)
ENGINE = Distributed('test_shard_localhost', 'mobile', 'total_push_token_events');
