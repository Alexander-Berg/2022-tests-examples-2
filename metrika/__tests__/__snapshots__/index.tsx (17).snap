// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FilterConditionToggler renders exclude 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-iQNlJl",
        "isStatic": true,
        "rules": Array [
          "
    .FilterConditionToggler__radioBox {
        line-height: normal;
    }

    .radiobox__radio {
        margin-left: 10px;

        &:first-child {
            margin-left: 0;
        }
    }
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-iQNlJl",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
>
  <radiobox
    mix={
      Object {
        "block": "FilterConditionToggler",
        "elem": "radioBox",
      }
    }
    size="s"
    theme="normal"
    tone="default"
    view="classic"
  >
    <radiobox__radio
      checked={false}
      controlAttrs={
        Object {
          "onChange": [Function],
        }
      }
    >
      Включить
    </radiobox__radio>
    <radiobox__radio
      checked={true}
      controlAttrs={
        Object {
          "onChange": [Function],
        }
      }
    >
      Исключить
    </radiobox__radio>
  </radiobox>
</StyledComponent>
`;

exports[`FilterConditionToggler renders include 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-iQNlJl",
        "isStatic": true,
        "rules": Array [
          "
    .FilterConditionToggler__radioBox {
        line-height: normal;
    }

    .radiobox__radio {
        margin-left: 10px;

        &:first-child {
            margin-left: 0;
        }
    }
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-iQNlJl",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
>
  <radiobox
    mix={
      Object {
        "block": "FilterConditionToggler",
        "elem": "radioBox",
      }
    }
    size="s"
    theme="normal"
    tone="default"
    view="classic"
  >
    <radiobox__radio
      checked={true}
      controlAttrs={
        Object {
          "onChange": [Function],
        }
      }
    >
      Включить
    </radiobox__radio>
    <radiobox__radio
      checked={false}
      controlAttrs={
        Object {
          "onChange": [Function],
        }
      }
    >
      Исключить
    </radiobox__radio>
  </radiobox>
</StyledComponent>
`;
