// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TreeMultiselectLabel renders checked="indeterminate" 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-hXRMBi",
        "isStatic": true,
        "rules": Array [
          "
    position: relative;

    display: inline-block;
    overflow: hidden;

    width: 100%;

    /* fix for lego checkbox crop */
    margin-top: -4px;
    padding-top: 4px;

    vertical-align: middle;

    white-space: nowrap;

    font-size: 13px;
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-hXRMBi",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
>
  <styled.div>
    <PlusExpander
      onClick={[MockFunction]}
      size="s"
      state="opened"
    />
  </styled.div>
  <styled.div
    onClick={[Function]}
  >
    <TristateCheckBox
      checked="indeterminate"
      lines="one"
      size="s"
      theme="normal"
    >
      Россия
    </TristateCheckBox>
  </styled.div>
</StyledComponent>
`;

exports[`TreeMultiselectLabel renders checked="no" 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-hXRMBi",
        "isStatic": true,
        "rules": Array [
          "
    position: relative;

    display: inline-block;
    overflow: hidden;

    width: 100%;

    /* fix for lego checkbox crop */
    margin-top: -4px;
    padding-top: 4px;

    vertical-align: middle;

    white-space: nowrap;

    font-size: 13px;
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-hXRMBi",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
>
  <styled.div>
    <PlusExpander
      onClick={[MockFunction]}
      size="s"
      state="opened"
    />
  </styled.div>
  <styled.div
    onClick={[Function]}
  >
    <TristateCheckBox
      checked="no"
      lines="one"
      size="s"
      theme="normal"
    >
      Россия
    </TristateCheckBox>
  </styled.div>
</StyledComponent>
`;

exports[`TreeMultiselectLabel renders checked="yes" 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-hXRMBi",
        "isStatic": true,
        "rules": Array [
          "
    position: relative;

    display: inline-block;
    overflow: hidden;

    width: 100%;

    /* fix for lego checkbox crop */
    margin-top: -4px;
    padding-top: 4px;

    vertical-align: middle;

    white-space: nowrap;

    font-size: 13px;
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-hXRMBi",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
>
  <styled.div>
    <PlusExpander
      onClick={[MockFunction]}
      size="s"
      state="opened"
    />
  </styled.div>
  <styled.div
    onClick={[Function]}
  >
    <TristateCheckBox
      checked="yes"
      lines="one"
      size="s"
      theme="normal"
    >
      Россия
    </TristateCheckBox>
  </styled.div>
</StyledComponent>
`;

exports[`TreeMultiselectLabel renders collapsed 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-hXRMBi",
        "isStatic": true,
        "rules": Array [
          "
    position: relative;

    display: inline-block;
    overflow: hidden;

    width: 100%;

    /* fix for lego checkbox crop */
    margin-top: -4px;
    padding-top: 4px;

    vertical-align: middle;

    white-space: nowrap;

    font-size: 13px;
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-hXRMBi",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
>
  <styled.div>
    <PlusExpander
      onClick={[MockFunction]}
      size="s"
      state="closed"
    />
  </styled.div>
  <styled.div
    onClick={[Function]}
  >
    <TristateCheckBox
      checked="no"
      lines="one"
      size="s"
      theme="normal"
    >
      Россия
    </TristateCheckBox>
  </styled.div>
</StyledComponent>
`;

exports[`TreeMultiselectLabel renders disableExpand 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-hXRMBi",
        "isStatic": true,
        "rules": Array [
          "
    position: relative;

    display: inline-block;
    overflow: hidden;

    width: 100%;

    /* fix for lego checkbox crop */
    margin-top: -4px;
    padding-top: 4px;

    vertical-align: middle;

    white-space: nowrap;

    font-size: 13px;
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-hXRMBi",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
>
  <styled.div />
  <styled.div
    onClick={[Function]}
  >
    <TristateCheckBox
      checked="no"
      lines="one"
      size="s"
      theme="normal"
    >
      Россия
    </TristateCheckBox>
  </styled.div>
</StyledComponent>
`;

exports[`TreeMultiselectLabel renders loading 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-hXRMBi",
        "isStatic": true,
        "rules": Array [
          "
    position: relative;

    display: inline-block;
    overflow: hidden;

    width: 100%;

    /* fix for lego checkbox crop */
    margin-top: -4px;
    padding-top: 4px;

    vertical-align: middle;

    white-space: nowrap;

    font-size: 13px;
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-hXRMBi",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
>
  <styled.div>
    <spin2
      mix={
        Object {
          "block": "TreeMultiselectLabel",
          "elem": "loader",
        }
      }
      progress={true}
      size="xxs"
      tone="default"
      view="default"
    />
  </styled.div>
  <styled.div
    onClick={[Function]}
  >
    <TristateCheckBox
      checked="no"
      lines="one"
      size="s"
      theme="normal"
    >
      Россия
    </TristateCheckBox>
  </styled.div>
</StyledComponent>
`;
