// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`with label 1`] = `
.c2 .checkbox__box:before {
  background-color: transparent !important;
  border-color: black !important;
}

.c2 .checkbox__box {
  background-color: black;
}

.c2 .checkbox__box {
  border-radius: 3px;
  background-clip: padding-box;
  vertical-align: top;
}

.c2 .checkbox__tick {
  bottom: 0 !important;
  left: 0 !important;
  width: 100% !important;
  height: 100% !important;
  background-size: 100%;
  background-image: url("tick.svg") !important;
}

.c2.checkbox_size_s .checkbox__label {
  line-height: 15px;
}

.c2.checkbox_size_m .checkbox__label {
  line-height: 17px;
}

.c1 {
  max-width: 100%;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  line-height: 16px;
}

.c0 > *:not(:first-child) {
  margin-left: 10px;
}

<div
  class="c0"
>
  <div
    class="c1"
  >
    <span
      class="control checkbox checkbox_view_classic checkbox_theme_normal checkbox_size_s checkbox_lines_multi checkbox_checked_yes c2"
      data-lego="react"
    >
      <span
        class="checkbox__box"
        data-lego="react"
      >
        <input
          aria-labelledby="labeltest"
          autocomplete="off"
          checked=""
          class="checkbox__control"
          data-lego="react"
          id="test"
          type="checkbox"
          value=""
        />
        <i
          class="checkbox__tick"
          data-lego="react"
        />
      </span>
    </span>
  </div>
  <label
    for="test"
  />
</div>
`;

exports[`without checkbox 1`] = `
.c0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  line-height: 16px;
}

.c0 > *:not(:first-child) {
  margin-left: 10px;
}

<div
  class="c0"
>
  <label
    for="test"
  />
</div>
`;

exports[`without label 1`] = `
.c2 .checkbox__box:before {
  background-color: transparent !important;
  border-color: black !important;
}

.c2 .checkbox__box {
  background-color: black;
}

.c2 .checkbox__box {
  border-radius: 3px;
  background-clip: padding-box;
  vertical-align: top;
}

.c2 .checkbox__tick {
  bottom: 0 !important;
  left: 0 !important;
  width: 100% !important;
  height: 100% !important;
  background-size: 100%;
  background-image: url("tick.svg") !important;
}

.c2.checkbox_size_s .checkbox__label {
  line-height: 15px;
}

.c2.checkbox_size_m .checkbox__label {
  line-height: 17px;
}

.c1 {
  max-width: 100%;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  line-height: 16px;
}

.c0 > *:not(:first-child) {
  margin-left: 10px;
}

<div
  class="c0"
>
  <div
    class="c1"
  >
    <span
      class="control checkbox checkbox_view_classic checkbox_theme_normal checkbox_size_s checkbox_lines_multi checkbox_checked_yes c2"
      data-lego="react"
    >
      <span
        class="checkbox__box"
        data-lego="react"
      >
        <input
          aria-labelledby="labeltest"
          autocomplete="off"
          checked=""
          class="checkbox__control"
          data-lego="react"
          id="test"
          type="checkbox"
          value=""
        />
        <i
          class="checkbox__tick"
          data-lego="react"
        />
      </span>
    </span>
  </div>
  <span />
</div>
`;
