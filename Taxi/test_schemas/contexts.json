{
  "candidate_context": {
    "description": "Данные, относящиеся к кандидатам.",
    "properties": {
      "allowed_classes": {
        "description": "Активные классы кандидата, по которым он может выполнять заказ. Подмножество active_classes. То же, что и classes кандидата в запросе.",
        "schema": "Classes",
        "x-taxi-clickable": true
      },
      "autoaccept": {
        "description": "Информация по autoaccept",
        "schema": "Autoaccept",
        "x-taxi-clickable": true
      },
      "bonus_cap": {
        "description": "Нижнее и верхнее ограничение суммы бонусов для кандидата.",
        "schema": "BonusCap",
        "x-taxi-clickable": true
      },
      "candidate_from_request": {
        "description": "Данные кандидата из запроса API as-is.",
        "schema": "Candidate",
        "x-taxi-clickable": true
      },
      "cashback_penalty": {
        "description": "Штраф за условия, необходимые при оплате заказа кешбеком.",
        "type": "number"
      },
      "dbid": {
        "description": "ID парка.",
        "type": "string"
      },
      "driver_priority": {
        "description": "Приоритеты водителя",
        "schema": "Priorities",
        "x-taxi-clickable": true
      },
      "driver_priority_coefficient": {
        "description": "Коэффициент, с которым надо учитывать приоритет водителя",
        "type": "number"
      },
      "driver_surge_by_classes": {
        "description": "Значения суржа кандидата по классам в точке B текущего заказа (если есть) и в точке самого кандидата.",
        "schema": "DriverSurge",
        "x-taxi-clickable": true
      },
      "eats_pricing_coefficients": {
        "description": "Настройки прайсинга для Еды",
        "schema": "EatsPricingCoefficients",
        "x-taxi-clickable": true
      },
      "matched_experiments": {
        "description": "Эксперименты консьюмера driver-scoring/candidate-logic, сматченные для кандидата.",
        "schema": "MappedExperiments",
        "x-taxi-clickable": true
      },
      "ml_bonuses": {
        "description": "Бонусы, рассчитанные ML-ем в /umlaas-dispatch/v1/candidates-bonuses.",
        "schema": "MlBonuses",
        "x-taxi-clickable": true
      },
      "profile": {
        "description": "Данные кандидата из ответа из candidates/profiles",
        "schema": "CandidateProfile",
        "x-taxi-clickable": true
      },
      "reposition_check_result": {
        "description": "Ответ ручки reposition-matcher/v1/service/match_orders_drivers: - режим репозишна кандидата; - подходит ли кандидат заказу; - насколько хорошо кандидат подходит к заказу;",
        "schema": "RepositionCheckResult",
        "x-taxi-clickable": true
      },
      "tag_score_coeff": {
        "description": "Коэффициент при time и distance при расчете скора кандидата в зависимости от тегов.",
        "type": "number"
      },
      "tags": {
        "description": "Теги кандидата вперемешку по car_number, udid, dbid_uuid, park, park_car_id.",
        "schema": "Tags",
        "x-taxi-clickable": true
      },
      "tariff_zone": {
        "description": "Тарифная зона, соответствующая позиции водителя",
        "type": "string"
      },
      "time_dist_weights": {
        "description": "Веса ALPHA и BETA расстояния и eta кандидата в формуле рассчета скора.",
        "schema": "TimeDistWeights",
        "x-taxi-clickable": true
      },
      "uuid": {
        "description": "ID кандидата в парке.",
        "type": "string"
      }
    },
    "required": [
      "candidate_from_request",
      "dbid",
      "uuid",
      "allowed_classes",
      "driver_surge_by_classes",
      "tags",
      "tag_score_coeff",
      "time_dist_weights"
    ],
    "type": "object"
  },
  "common_context": {
    "description": "Общие данные, не относящиеся ни к заказу, ни к кандидатам. (Например, данные конфигов).",
    "properties": {
      "bonus_for_class_max_surge": {
        "description": "Максимальный сурж в ордере, выше которого (включительно) не считается бонус за класс.",
        "type": "number"
      },
      "classes_priority_order": {
        "description": "Порядок классов по убыванию приоритета.",
        "schema": "Classes",
        "x-taxi-clickable": true
      },
      "eats_logistics_settings": {
        "description": "Логистические настройки Яндекс.Еды",
        "schema": "EatsLogisticsSettings",
        "x-taxi-clickable": true
      },
      "now_timestamp_s": {
        "description": "Техническая замена для Date.now() в javascript (в частности, его можно мокнуть в тестах), равно числу секунд с 1 января 1970 года",
        "type": "number"
      },
      "penalty_for_approximate_position": {
        "description": "Значение штрафа за неточную позицию кандидата.",
        "type": "integer"
      },
      "queue_filtered_penalty": {
        "description": "Штраф при нахождении в отфильтрованном состоянии в аэропортовой очереди",
        "schema": "QueueFilteredPenalty",
        "x-taxi-clickable": true
      }
    },
    "required": [
      "classes_priority_order",
      "penalty_for_approximate_position",
      "bonus_for_class_max_surge",
      "queue_filtered_penalty",
      "now_timestamp_s"
    ],
    "type": "object"
  },
  "order_context": {
    "description": "Данные, относящиеся к ордеру, общие для кандидатов.",
    "properties": {
      "airport_queue_weights": {
        "description": "Веса бонусов за позицию и время ожидания в очереди.",
        "schema": "AirportQueueWeights",
        "x-taxi-clickable": true
      },
      "batch_properties_surge_values": {
        "description": "Сурдж для точек из batch_properties по классам из кэша карты сурджа",
        "schema": "BatchPropertiesSurgeValues",
        "x-taxi-clickable": true
      },
      "dispatch_configs": {
        "description": "Конфиги 3.0 для диспатча.",
        "schema": "MappedExperiments",
        "x-taxi-clickable": true
      },
      "dispatch_experiments": {
        "description": "Эксперименты для диспатча.",
        "schema": "MappedExperiments",
        "x-taxi-clickable": true
      },
      "dispatch_settings": {
        "description": "Настройки диспатча (ex SEARCH_SETTINGS_CLASSES).",
        "schema": "DispatchSettings",
        "x-taxi-clickable": true
      },
      "eats_is_collected": {
        "description": "Собран ли заказ",
        "type": "boolean"
      },
      "eats_place_tags": {
        "description": "Теги заведения в Яндекс.Еде по place_id.",
        "schema": "Tags",
        "x-taxi-clickable": true
      },
      "eats_user_tags": {
        "description": "Теги пользователя в Яндекс.Еде по user_id и/или personal_phone_id.",
        "schema": "Tags",
        "x-taxi-clickable": true
      },
      "experiments_names": {
        "description": "Имена экспериментов из metadata.experiments, если есть, иначе пустой набор.",
        "schema": "ExperimentsNames",
        "x-taxi-clickable": true
      },
      "geonodes": {
        "description": "Список геонод, которым принадлежит заказ",
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "is_cashback_order": {
        "description": "Оплачивается ли заказ кешбеком.",
        "type": "boolean"
      },
      "is_dispatch_airport": {
        "description": "Является ли зона заказа аэропортовой (точка А)",
        "type": "boolean"
      },
      "pin_surge_by_classes": {
        "description": "Значение суржа в точке A по классам из кеша карты суржа.",
        "schema": "SurgeValues",
        "x-taxi-clickable": true
      },
      "road_accidents": {
        "description": "Ранги опасности ребер (дорожного графа), по которым проходит маршрут поездки.",
        "items": {
          "type": "number"
        },
        "type": "array"
      },
      "route_point_info": {
        "description": "Информация о точках по порядку, установленном маршрутом (первая - точка A, последняя - точка назначения, между ними - промежуточные точки)",
        "schema": "RoutePointInfo",
        "x-taxi-clickable": true
      },
      "search_from_request": {
        "description": "Данные ордера из запроса API as-is.",
        "schema": "Search",
        "x-taxi-clickable": true
      },
      "surge_value": {
        "description": "Наиболее подходящее (из доступных) значение суржа ордера. Равно значению: - order.request.surge_price, если есть, - иначе sv, если есть, - иначе svs[0], если есть, - иначе pin_surge_by_classes по первому из allowed_classes, если есть, - иначе значение суржа по-умолчанию (1.0).",
        "type": "number"
      },
      "user_tags": {
        "description": "Теги пользователя по user_id и/или user_phone_id.",
        "schema": "Tags",
        "x-taxi-clickable": true
      },
      "verybusy_bonus": {
        "description": "Бонус за verybusy.",
        "type": "integer"
      }
    },
    "required": [
      "search_from_request",
      "dispatch_experiments",
      "dispatch_configs",
      "dispatch_settings",
      "is_dispatch_airport",
      "route_point_info",
      "pin_surge_by_classes",
      "is_cashback_order",
      "surge_value",
      "experiments_names",
      "verybusy_bonus"
    ],
    "type": "object"
  },
  "scoring_results": {
    "description": "Описание аргумента scoring_results скрипта postprocess_results",
    "has_additional_properties": false,
    "properties": {
      "orders": {
        "items": {
          "schema": "ScoredOrder",
          "x-taxi-clickable": true
        },
        "type": "array"
      }
    },
    "required": [
      "orders"
    ],
    "type": "object"
  },
  "trace": {
    "has_additional_properties": false,
    "properties": {
      "text": {
        "description": "Read/write поле для записи лога",
        "type": "string"
      }
    },
    "type": "object"
  }
}
