description: unique (by license number) drivers
settings:
    collection: unique_drivers
    connection: taxi
    database: dbtaxi
indexes:
  - key: city
    sparse: true
  - key: created_ts
    unique: true
  - key: fraud
    sparse: true
  - key: is_blacklisted
    sparse: true
  - key: license_ids.id
    unique: true
  - key: licenses.license
    unique: true
  - key: online.e
    sparse: true
  - key: profiles.driver_id
  - key: uber_driver_id
    sparse: true
  - key: updated
  - key: updated_ts
    sparse: true
    unique: true
wiki_info: |
    ####dbtaxi.unique_drivers - идентифицированные водители

    ```python
    unique_driver = {
        # обязательные атрибуты
        '_id': ObjectId(),
        'licenses': [
            {'license': '66AP7723192'},   # номер водительского удостоверения
            ...
        ],
        'license_ids': [                  # ПД id водительского удостоверения
            {'id': 'aa9e6e74843a4910ac09270e9e6f9b6a'},
            ...
        ],
        'profiles': [
            {'driver_id': 'clid_uuid'},   # ссылки на профили водителей с данным ВУ
            ...
        ],
        'created': utcnow(),              # дата создания документа
        'created_ts': Timestamp(),        # уникальная временная метка создания документа
        'updated': utcnow(),              # дата последнего обновления документа
        'updated_ts': Timestamp(),        # уникальная временная метка последнего обновления документа

        # необязательные атрибуты
        'city': 'Москва'                  # город (согласно таксопарку при последнем импорте)
        'exam_score': 5,                  # оценка за экзамен, integer 1..5
        'exam_created': datetime          # дата получения оценки exam_score
        'exams': [{                       # список дополнительных экзаменов
            'cource': 'childchair',       # название курса
            'exam_date': datetime,        # дата сдачи
            'result': 5,                  # оценка
        }],
        'source_id': 'yandex',            # id источника, найминг
        'driver_points' : 95,             # баллы "активности" водителя, 0..100
        'new_score': {                    # структура, содержащая рейтинг
            'unified': {
                'total': float,                              # итоговый рейтинг по формуле (надо *4 + 1)

                # необязательные атрибуты
                'rating': float,                             # средняя оценка
                'rating_count': integer,                     # количество оценок
            },
        },
        'is_blacklisted': boolean,        # занесен ли этот водитель в чёрный список
        'blacklist_details': {
            'at': datetime,               # время внесения в черный список
            'login': 'operator',          # логин оператора
            'reason': 'faruder',          # причина блокировки
            'otrs_ticket': '123',         # номер тикета в OTRS
            'allow_subventions': True,    # выплачивать ли субсидии после блокировки
            'notes': 'Злоупотребление отменами', # опциональное поле, комментарий к блокировке
            'till': datetime,             # опциональное поле, срок окончания действия блокировки
            'messages': {                 # опциональное поле, сообщения для отправки в парк и чат
              'chat_message': 'тестовый текст в ленте таксометра о блокировке за фрод',
              'park_email': 'тестовый текст письма в парк о блокировке за фрод',
            },
        },
        'mqc_passed': datetime.utcnow(),  # время когда водитель проходил проверку МКК
        'fraud': boolean,                 # True, если водитель подозревается во фроде на субсидии (Спб & Екб)
        'pe': {                           # Значение параметра E по классам
            'econom': 3,
            'business': -4,
        },
        'pl': {
            'econom': 1,                  # значение параметра L в экономе
        },
        'gl': {
            'econom': u'Москва',          # статус голд получен в Москве
        },
        'cpl': {
            'econom': 13,                 # кол-во выполненных за сутки заказов (сбрасывается в 4 утра по мск)
        },
        'er': [                           # заработок водителя за последние заказы
            {
                'o': '(идентификатор заказа)',
                's': 1460069099,          #   - время начала выполнения заказа (UTC-таймстемп)
                'e': 1460069700,          #   - время окончания выполнения заказа (UTC-таймстемп)
                't': 'econom',            #   - категория тарифа, по которому выполнялся заказ
                'c': 540.00,              #   - стоимость заказа
            },
            ...
        ],
        'online': {},   # структура как в drivers
        'unioned_with': [
            ObjectId(),  # список документов, с которыми была произведена склейка
            ...
        ],
        'decoupled_from': ObjectId(),     # документ от которого была произведена отклейка

        'ma': {  # Признан ли водитель опытным. Используется для фильтрации новичков.
            # Название поля "ma" соответствует раннему варианту полного названия поля - "moscow acknowledged"

            'd': datetime.datetime(2016, 5, 23, 17, 18, 7, 645000)  # Дата, когда водитель был признан опытным.
        },
        'grade_experiment': {  # поле присутствует, если водитель участвовал в эксперименте с повышением грейда (TAXIBACKEND-6038)
            'start': datetime.utcnow(),  # время начала участия в эксперименте (т.е. выставления повышенного грейда)
            'end': datetime.utcnow()  # время окончания участия в эксперименте (выставляется в момент снятия повышенного грейда)
        },
        'last_order_complete': {  # Информация о последнем выполненном заказе
            'id': '48da966cfa824e96be6d1a5132c53eac',  # Идентификатор заказа
            'completed': datetime.datetime(2016, 5, 23, 17, 18, 7, 645000), # Время завершения заказа
        },
        'order_stats': ['u', 'd', 'c', 'a', 'r', 'w', 't'],   # статистика по предложениям заказов
        'c_order_stats': ['u', 'd', 'c', 'a', 'r', 'w', 't']  # cтатистика по завершённым заказам
        'osl': ['48da966cfa824e96be6d1a5132c53eac_123as'],    # ключ для идемпотентного подсчёта статистики по заказам
        'total_orders': 123,                                  # количество предложений заказов по прямому назначению
        'driver_info_stats': {                                # статистика по водителю из YT, см. TAXIBACKEND-20145, TAXIBACKEND-20336
            'total_travel_distance': 331.5881004333496,
            'total_orders_count': 8,
            'rating_reasons': {
                'comfort_ride': 3,
                'clean': 5
                }
            },
        }
    }
    ```
