settings:
    collection: users
    connection: corp
    database: dbcorp
indexes:
  - key: client_id
  - key:
      - name: client_id
        type: ascending
      - name: department_id
        type: ascending
  - key: email
  - key: email_id
  - key: fullname
  - key: nickname
  - key: personal_phone_id
  - key: phone
  - key:
      - name: phone_id
        type: ascending
      - name: client_id
        type: ascending
    unique: true
  - key: role.role_id
    sparse: true
  - key: updated
    sparse: true
wiki_info: |
    #### corp_users

    *Назначение:* содержит информацию о корпоративных пользователях.

    *Структура документа*:
    ```python
    {
        # id пользователя
        '_id': 'fe40e0327c6f4c32adad34cbc6329fa2',

        # id корп клиента из corp\_clients, обязательное поле
        'client_id': '7ff7900803534212a3a66f4d0e114fc2',

        # имя пользователя, обязательное поле
        'fullname': 'some role',

        # id пользователя в терминах компании корп-клиент, опциональное поле
        'nickname': 'employee #134',

        # номер телефона пользователя, обязательное поле -
        # при заказе с этого номера будет доступна корп-способ оплаты
        # (за исключением случая, когда пользователь относится к роли "заказ только из кабинета")
        'phone': '+79291234567',

        # id телефона из user_phones - резолвим при создании и храним, чтобы лишний раз запрос не делать
        'phone_id': ObjectId('1231242342'),

        # объект, хранящий данные о потраченных средствах
        'stat': {

            # в ключе хранится год и месяц, данные за который храняться в значении
            '2016-05': {

                # потраченные средства с учетом НДС - для конвертации в привычные единицы - taxi.internal.order_kit.payment_helpers.inner2cost
                'spent_with_vat': 12401800
            },
        },

        # email пользователя, опциональное поле
        'email': 'some@mail.com',

        # email_id пользователя из сервиса персональных данных
        'email_id': 'c5554724536844bba73622df18634c5',

        # кост-центр, который будет предложен по-умолчанию, опциональное поле
        'cost_center': 'some cost center',

        # объект с описанием роли - в объекте будет либо role_id поле, либо поля limit, classes.
        # Т. е. пользователь либо относится к определенное роли, либо имеет свои персональные настройки
        'role': {
            # id роли из corp\roles
            'role_id': 'c5554724536844bba73622df18634c5c'

            # лимит суммарной стоимости поездок в месяц, обязательное поле
            'limit': 6000,

            # разрешенные для заказа категории машин
            'classes': [
                'econom',
                'comfort'
            ]
        },

        # активен ли пользователь - определяет, может ли пользователь делать заказ
        'is_active': True,

        # id последних N (сейчас - 10) заказов этого пользователя
        # используется для определения - надо ли увеличивать счетчик потраченных средств для данного заказа
        'last_orders': [
            'fce6de0e9de54de4928202aecc67f3db',
            'ed304ba7b0de45f99edc4f68eaadcca0'
        ],

        # id департамента, к которому привязан пользователь, опциональное поле
        'department_id': 'e408b7e62a964cedb677952f600d5b08',

        # статусы сервисов Я.Драйв и Я.Еда для пользоваля
        "services": {
          "drive": {
            # статус Я.Драйва для пользоваля
            "is_active": true,
            # аккаунт Я.Драйва
            "account_id": 2484
          },
          "eats": {
            # статус Я.Еды
            "is_active": false,
            # нужно ли посылать sms при активации (флаг, чтобы не слать sms 2 раза)
            "send_activation_sms": true
          }
        },

        # время создания записи крон-задачи
        'created': datetime.datetime(2016, 6, 2, 21, 58),

        # время последнего обновления записи крон-задачи
        'updated': datetime.datetime(2016, 6, 2, 21, 58)

    }
    ```
