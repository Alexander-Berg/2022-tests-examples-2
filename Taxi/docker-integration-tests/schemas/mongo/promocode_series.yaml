description: promocode series (unique and non-unique)
settings:
    collection: promocode_series
    connection: taxi
    database: dbtaxi
indexes:
  - key: cities
    sparse: true
  - key: country
    sparse: true
  - key: finish
  - key:
      - name: for_support
        type: ascending
      - name: clear_text
        type: ascending
  - key: start
wiki_info: |
    ####dbtaxi.promocode_series - серии промокодов

    "Новая" промокодная коллекция, используется с версии 1.8.61. Заменяет dbtaxi.coupon_series из более ранних версий.

    ```python
    dbtaxi.promocode_series = {
        # Обязательные поля
        '_id': 'строка',         # Идентификатор серии, например: '04', 'karmsk' для уникальных или leto2015 для неуникальных. По соглашению, приводится в базе к нижнему регистру.
        'is_unique': True,       # Признак уникальности серии.
        'start': utcnow(),       # Дата начала действия (время игнорируется). Промокод начинает действовать в 00:00 местного времени в день, указанный в этом поле.
        'finish': utcnow(),      # Дата окончания действия (время игнорируется). Промокод заканчивает действовать в 00:00 местного времени в день, указанный в этом поле.
        'descr': 'строка',       # Человекочитаемое описание. Выводится в админке.
        'value': число,          # Сумма скидки в рублях.
        'cities': [u'Москва'],   # (depricated) Список городов, в которых действителен промокод. Если поле отсутствует - действителен во всех городах.
        'zones': ['moscow'],     # Список зон, в которых действителен промокод. Если поле отсутствует — действителен во всех зонах.
        'created': utcnow(),     # Время создания промокода.
        'creator': {             # Сведения о создателе серии:
             'uid': 1234567,     # UID оператора, создавшего промокод.
             'login': 'user1'    # Логин оператора, создавшего промокод. Необязателен, если есть uid.
        }
        'user_limit': 10,        # Максимальное число применений промокода серии на одного пользователя.
        'clear_text': True,      # Промокод хранится в чистом виде, все новые серии должны создаваться с этим флагом равным True
                                 # админка его выставляет безусловно при создании серии.
        'for_support': False,    # Флаг, означающий, что данная серия создана для нужд службы поддержки
        'currency': 'RUB',       # Валюта
        'country': 'rus',        # Страна, в которой действует промокод

        # Необязательные поля
        'first_limit': 3,        # Количество первых поездок, в течение которых действует промокод (не больше user_limit).
        'count': 100             # Ограничение на общее число применений всеми пользователями (имеет смысл только для неуникальных промокодов).
        'creditcard_only': True, # Признак, что промокод действителен только на заказ с оплатой кредитной картой.
        'applications': [        # Приложения, для которых действителен промокод. Если отсутствует, то действителен для всех приложений.
            'android', 'iphone',
            'web', 'mobileweb'
        ],
        'bin_ranges': [          # Диапазоны бинкодов, для которых действителен данный промокод. Может быть только у 'creditcard_only': True.
            ['123456', '123457'],
            ['555555', '555555'],
        ],
        'bank_name': {           # Название банка, чьи диапазоны бинов хранятся в bin_ranges. Падеж - как во фразе "при оплате картой Банка".
            'ru': 'Банка',
            'en': 'Bank'
        },

        '_race': {               # Признак гонки, т.е. неконсистентного использования промокода в данной серии. Временный документ, нужный
            'поле': значение,    # для ведения статистики до решения https://st.yandex-team.ru/TAXIBACKEND-2443. "Поле" - поле документа promocode_series,
            ...                  # где обнаружена гонка, "значение" - значение поля, которое привело к гонке.
        },
        'percent': 50,           # процент скидки для прокомода.
        'percent_limit_per_trip': true,                    # суммарный лимит процентного промокода применяется к каждой поездке независимо.

        'uniques_count': 50000,                            # Только для уникальных промокодов. Число сгенерированных промокодов в серии.
        'usage_per_promocode': True,                       # Только для уникальных промокодов. Если присутствует и равен True, учет поездок производится не в рамках всей серии,
                                                           # а в рамках конкретного промокода (см. TAXIBACKEND-3018)
        'used_count': 18,                                  # число использований промокода данной серии на основе данных из dbtaxi.promocode_usages. Обогащается раз в полчаса
        'classes': ['econom', 'comfort'],                  # Тарифы, для которых применяется промокод
        'requires_activation_after': datetime.datetime(),  # Дата ручной активации
        'first_usage_by_classes': True,                    # Только на первую поездку по тарифам
        'ticket': 'TAXIRATE-20',                           # Тикет TAXIRATE
    }
    ```
