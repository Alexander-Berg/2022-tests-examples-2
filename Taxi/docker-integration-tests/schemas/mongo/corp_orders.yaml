settings:
    collection: orders
    connection: corp
    database: dbcorp
indexes:
  - key:
      - name: client_id
        type: ascending
      - name: corp_user.user_id
        type: ascending
      - name: due_date
        type: descending
  - key:
      - name: client_id
        type: ascending
      - name: due_date
        type: descending
  - key:
      - name: client_id
        type: ascending
      - name: finished_date
        type: ascending
    sparse: true
  - key: finished_date
    sparse: true
wiki_info: |
    #### corp_orders

    *Назначение* содержит часть данных из соответствующей записи коллекции orders и чуть corp-specific данных.
    Записи сюда попадают через taxi.internal.corp_kit.corp_manager.sync_corp_order,
    которая вызывается на ряде шагов процессинга.
    Мотивация иметь отдельную коллекцию: записи хранятся без TTL.
    До завершения заказа можно было бы использовать запись из orders, но историчеси сложилось иначе.

    В описании документа - поля берем из соответствующей записи в orders, если не указано иное.
    Часть данных во время выполнения заказа может отсутствовать.
    К примеру, performer на этапе pending будет отсутствовать.

    *Структура документа*:
    ```python
    {
        # id заказа
        '_id': '6f3bca1fad234844800cea9c46eceecb',

        # время обновления документа в коллекции orders,
        # с которым была проведена синхронизация
        'order_updated': datetime.datetime(2016, 6, 2, 21, 58)

        # статус заказа
        'status': 'finished',

        # статус такси заказа
        'taxi_status': 'complete',

        # id корп клиента из corp\_clients
        'client_id': '7ff7900803534212a3a66f4d0e114fc2',

        # дата создания заказа
        'created_date': datetime.datetime(2016, 6, 2, 21, 58),

        # дата ожидаемого прибытия такси
        'due_date': datetime.datetime(2016, 6, 2, 21, 58),

        # дата начала выполнения заказа
        'started_date': datetime.datetime(2016, 6, 2, 21, 58),

        # дата завершения выполнения заказа
        'finished_date': datetime.datetime(2016, 6, 2, 21, 58),

        # объект с данными корпоративного пользователя, к которому относится заказ
        'corp_user': {
            # id корп пользоватлея из corp\_users
            'user_id': '88eaf8ef4d8b4d8384f6064da13a1680'
        },

        # город заказа
        'city': 'Москва',

        # объект с данными по стоимости заказа без НДС
        'without_vat_to_pay': {

            # стоимость поездки - для конвертации в привычные единицы - taxi.internal.order_kit.payment_helpers.inner2cost
            'ride': 5400000
        },
        # объект с данными по стоимости заказа, которая будет списана с пользователя
        'user_to_pay': {

            # стоимость поездки -  для конвертации в привычные единицы - taxi.internal.order_kit.payment_helpers.inner2cost
            'ride': 6372000
         },

        # категория/класс/тариф заказа
        'class': 'econom',

        # комментарий заказа
        'comment': 'corp order comment',

        # точка подачи такси
        'source': {

            # адрес ближайшего к точке объекта
            'fullname': 'Россия, Москва, улица Тимура Фрунзе, 11к8',

            # координата подачи такси
            'geopoint': [
                '37.5887876121',
                '55.734141752'
            ]
        },

        # точка завершения заказ
        'destination': {

            # адрес ближайшего к точке объекта - может отсутствовать для завершенных заказов
            'fullname': 'Россия, Москва, Большая Никитская улица, 13',

            # координаты подачи такси - если отсутствовала точка B в заказе,
            # будет использована координата, в который таксист перевел заказ в статус complete
            'geopoint': [
                '37.600296',
                '55.750379'
            ]
        },

        # объект с данными таксиста, который выполнял заказ
        'performer': {

            # описание машины
            'car': 'Volkswagen Caravelle коричневый КС67477',

            # имя водителя
            'fullname': 'Гарольд',

            # номер телефона водителя
            'phone': '+79291234567'
        },

        # кост центр заказа
        'cost_center': {
            # кост-центр указанный пользователем - выставляется либо из приложения, либо из корп-кабинета при создании
            'user': 'user defined cost center',

            # кост-центр указанный из корп-кабинете после создания - не копируется из orders записи, а меняется ручкой order_change api корп-кабинета
            'cabinet': 'cabinet defined cost center'
        },

        # объект с инфой о том, кем был создан заказ - выставляется при заказе из корп-кабинета
        'created_by': {

            # логин создателя заказа
            'login': 'some login'
        }

    }
    ```
