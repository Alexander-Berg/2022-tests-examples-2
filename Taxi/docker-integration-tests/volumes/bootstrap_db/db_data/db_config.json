[
  {
    "_id": "CHECK_FAKE_PHONES",
    "v": {
      "enabled": true,
      "fake_numbers": [
        "79006666621"
      ]
    }
  },
  {
    "_id": "ORDER_CORE_ENABLED_TRIGGERS",
    "v": [
      "updateordercost",
      "taximeter",
      "cargo_taximeter",
      "offertimeout",
      "seentimeout",
      "search_expire",
      "autoreordertimeout"
    ]
  },
  {
    "_id": "ORDER_CORE_UPDATE_ORDER_PROC_WHITELIST",
    "v": [
      "candidates",
      "changes",
      "dispatch_check_in",
      "lookup",
      "manual_dispatch",
      "order",
      "order_info",
      "payment_tech",
      "performer",
      "processing"
    ]
  },
  {
    "_id": "PROCESSING_BACKEND_CPP_SWITCH",
    "v": [
      "order-by-sms",
      "svo-cancel",
      "set-dont-sms",
      "set-dont-call",
      "change-porchnumber",
      "change-corp-cost-center",
      "change-comment",
      "change-clientgeosharing",
      "update-points",
      "changepayment",
      "changedestinations",
      "update-tips",
      "taxi-seen-reject",
      "pay-order",
      "requestconfirm",
      "reorder",
      "cancel-order-from-protocol"
    ]
  },
  {
    "_id": "PROCESSING_SCOPE_LOADING_ALLOWLIST",
    "v": {
      "docker": [],
      "dynamic": [],
      "enabled": true,
      "sandbox": [
        "taxi"
      ]
    }
  },
  {
    "_id": "PROCESSING_REQUIRED_SANDBOX_MODULES",
    "v": [
      "taxi"
    ]
  },
  {
    "_id": "DO_NOT_START_PROCESS_CHANGE_FROM_PY2",
    "v": true
  },
  {
    "_id": "API_OVER_DATA_ENABLE_SPECIFIC_CACHE",
    "v": {
      "__default__": {
        "__default__": false
      },
      "driver-protocol": {
        "__default__": true
      },
      "tags": {
        "__default__": true
      },
      "tracker": {
        "__default__": false,
        "mongo-pda-cars": true,
        "mongo-pda-drivers": true,
        "mongo-pda-parks": true
      }
    }
  },
  {
    "_id": "API_OVER_DATA_ENABLE_CACHES",
    "v": true
  },
  {
    "_id": "API_OVER_DATA_SCHEDULING_PERIOD_MS",
    "v": {
      "__default__": {
        "__default__": 10000
      }
    }
  },
  {
    "_id": "API_OVER_DATA_CONSUMERS_VERBOSITY",
    "v": {
      "__default__": {
        "__default__": {
          "cache_is_not_ready": "info",
          "cache_is_ready": "info",
          "checked_documents_count": "info",
          "driver_rating_inserted": "info",
          "lagging_cursor_mismatch": "error",
          "new_data_size": "debug",
          "new_increment_size": "debug",
          "performing_driver_ratings_query": "debug",
          "revise_ok": "debug",
          "start_checking_documents": "debug",
          "update_started": "info",
          "updated_documents_count": "info",
          "work_mode": "debug"
        }
      }
    }
  },
  {
    "_id": "API_OVER_DATA_WORK_MODE",
    "v": {
      "__default__": {
        "__default__": "oldway"
      },
      "driver-protocol": {
        "__default__": "newway"
      },
      "tracker": {
        "__default__": "newway"
      }
    }
  },
  {
    "_id": "API_OVER_DATA_REVISE_LOGS_RATE_LIMIT",
    "v": {
      "__default__": {
        "__default__": 1000
      }
    }
  },
  {
    "_id": "API_PROXY_ADMIN_EDIT_API",
    "v": {
      "endpoint_api_v": 2,
      "resources_api_v": 1
    }
  },
  {
    "_id": "UNIQUE_DRIVERS_IMPORTER_WORK_MODE",
    "v": {
      "chunk-size": 100000,
      "full-update-delay-ms": 60000,
      "interval-ms": 10000,
      "lagging-cursor-delay": 300,
      "license-source-pd-id": false,
      "mode": "enabled"
    }
  },
  {
    "_id": "UNIQUE_DRIVERS_EVENTS_WORKER_SETTINGS",
    "v": {
      "chunk-size": 100,
      "events": {
        "divide": false,
        "merge": false,
        "new": false
      },
      "lb-events": {
        "divide": false,
        "merge": false,
        "new": false
      },
      "mode": "disabled",
      "work-interval-ms": 5000
    }
  },
  {
    "_id": "DRIVERS_IMPORTER_WORK_MODE",
    "v": {
      "chunk-size": 100000,
      "full-update-delay-ms": 60000,
      "interval-ms": 10000,
      "lagging-cursor-delay": 300,
      "mode": "enabled",
      "pg-timeout-ms": 2000
    }
  },
  {
    "_id": "CARS_IMPORTER_WORK_MODE",
    "v": {
      "chunk-size": 100000,
      "full-update-delay-ms": 60000,
      "interval-ms": 10000,
      "lagging-cursor-delay": 300,
      "mode": "enabled",
      "pg-timeout-ms": 2000
    }
  },
  {
    "_id": "PARKS_IMPORTER_WORK_MODE",
    "v": {
      "chunk-size": 1000,
      "interval-ms": 10000,
      "mode": "enabled"
    }
  },
  {
    "_id": "PARKS_CONTACTS_FIELDS_LENGTH",
    "v": {
      "address": 1000,
      "description": 1000,
      "email": 50,
      "money_withdrawal_description": 1000,
      "schedule": 1000
    }
  },
  {
    "_id": "TAXIMETER_REMOVE_ORDER_ON_SEEN_410",
    "v": {
      "cities": [],
      "cities_disable": [],
      "countries": [],
      "countries_disable": [],
      "dbs": [],
      "dbs_disable": [],
      "enable": true
    }
  },
  {
    "_id": "USE_CONTROL_PLANE_MONGO_INTERNAL_HANDLE",
    "v": true
  },
  {
    "_id": "IMPORT_DRIVERS_PDA_ENABLES",
    "v": {
      "import-drivers-enabled": false,
      "parks-update": false,
      "unique-drivers-update": false
    }
  },
  {
    "_id": "LOOKUP_ORDER_PROC_CANDIDATE_MAPPING",
    "v": {
      "alias_id": "alias_id",
      "car_number": "car_number",
      "db_id": "db_id",
      "driver_id": "driver_id",
      "driver_license_personal_id": "license_id"
    }
  },
  {
    "_id": "LOOKUP_ORDER_PROC_MAPPING",
    "v": {
      "extra_data/code_dispatch/code": "extra_data/code_dispatch/code",
      "lookup/version": "temp/lookup/version",
      "order/fixed_price/paid_supply_info": "",
      "order/pricing_data/driver/price/components/boarding": "order/pricing_data_is_set",
      "order/request/cargo_ref_id": "order/cargo_ref_id",
      "order/request/class": "",
      "order/request/excluded_parks": "",
      "order/request/ignore_excluded_parks": "",
      "order/request/offer": "",
      "order/request/requirements": "",
      "order/surge_upgrade_classes": "",
      "order/user_phone_id": "",
      "order/virtual_tariffs": "order/virtual_tariffs",
      "order_info/source_point": "temp/order_info/source_point"
    }
  },
  {
    "_id": "API_OVER_DATA_SERVICES",
    "v": {
      "driver-profiles": {
        "deleted_documents_ttl_seconds": 100,
        "dump_ttl_days": 1,
        "incremental_merge_time_limit_ms": 1000,
        "is_dumper_enabled": false,
        "lagging_cursor_delay_seconds": 300,
        "max_answer_data_size_bytes": 100000,
        "max_x_polling_delay_ms": 1000,
        "min_x_polling_delay_ms": 0
      },
      "fleet-parks": {
        "deleted_documents_ttl_seconds": 100,
        "dump_ttl_days": 1,
        "incremental_merge_time_limit_ms": 1000,
        "is_dumper_enabled": false,
        "lagging_cursor_delay_seconds": 300,
        "max_answer_data_size_bytes": 100000,
        "max_x_polling_delay_ms": 1000,
        "min_x_polling_delay_ms": 0
      },
      "parks-replica": {
        "deleted_documents_ttl_seconds": 100,
        "dump_ttl_days": 1,
        "incremental_merge_time_limit_ms": 1000,
        "is_dumper_enabled": false,
        "lagging_cursor_delay_seconds": 300,
        "max_answer_data_size_bytes": 100000,
        "max_x_polling_delay_ms": 1000,
        "min_x_polling_delay_ms": 0
      },
      "unique-drivers": {
        "deleted_documents_ttl_seconds": 100,
        "dump_ttl_days": 1,
        "incremental_merge_time_limit_ms": 1000,
        "is_dumper_enabled": false,
        "lagging_cursor_delay_seconds": 300,
        "max_answer_data_size_bytes": 100000,
        "max_x_polling_delay_ms": 1000,
        "min_x_polling_delay_ms": 0
      }
    }
  },
  {
    "_id": "PASS_AUTH_ROUTER_RULES_2",
    "v": []
  },
  {
    "_id": "APPLICATION_TO_CORP_SOURCE_MAP",
    "v": {
      "iphone": "yataxi_application",
      "yango_iphone": "yataxi_application"
    }
  },
  {
    "_id": "BILLING_COOP_ACCOUNT_ENABLED",
    "v": true
  },
  {
    "_id": "PERSONAL_WALLET_ENABLED",
    "v": true
  },
  {
    "_id": "CARD_BINS_URL",
    "v": "card-bins-url"
  },
  {
    "_id": "PAYMENTMETHODS_IPHONE_MERCHANT_LIST",
    "v": [
      "merchant.ru.yandex.ytaxi",
      "merchant.ru.yandex.ytaxi.trust"
    ]
  },
  {
    "_id": "SURGE_ENABLED",
    "v": true
  },
  {
    "_id": "ENABLE_PAID_CANCEL",
    "v": true
  },
  {
    "_id": "ENABLE_PAID_CANCEL_PAYMENTS",
    "v": true
  },
  {
    "_id": "MAPS_DISABLED",
    "v": false
  },
  {
    "_id": "MAPS_API_HOST",
    "v": "http://addrs.yandex.net/search"
  },
  {
    "_id": "DA_USE_TRACKER_ACQUIRING",
    "v": true
  },
  {
    "_id": "DA_SEEN_TIMEOUT_DEFAULT",
    "v": 50
  },
  {
    "_id": "FETCH_DRIVER_TAGS_BY_LICENSES_FROM_SERVICE",
    "v": true
  },
  {
    "_id": "FETCH_DRIVER_TAGS_V2_FROM_SERVICE",
    "v": true
  },
  {
    "_id": "ROUTER_42GROUP_ENABLED",
    "v": false
  },
  {
    "_id": "ROUTER_PEDESTRIAN_42GROUP_ENABLED",
    "v": false
  },
  {
    "_id": "ROUTER_MAPS_ENABLED",
    "v": true
  },
  {
    "_id": "ROUTER_PEDESTRIAN_MAPS_ENABLED",
    "v": false
  },
  {
    "_id": "CHECK_DRIVER_SESSION_IN_REDIS",
    "v": true
  },
  {
    "_id": "REDIS_WAIT_CONNECTED",
    "v": {
      "mode": "master",
      "throw_on_fail": true,
      "timeout-ms": 42000
    }
  },
  {
    "_id": "TAXIMETER_DRIVER_LOGIN_RATE_LIMIT",
    "v": {
      "attempts": 10000,
      "seconds": 1
    }
  },
  {
    "_id": "TAXIMETER_SMS_RETRY_TIMEOUT",
    "v": 0
  },
  {
    "_id": "TAXIMETER_VERSION_SETTINGS_BY_BUILD",
    "v": {
      "__default__": {
        "current": "8.30",
        "disabled": [],
        "feature_support": {
          "gzip_push": "8.31",
          "json_geoareas": "8.30",
          "mode_type_orders": "8.30",
          "subvention": "8.32"
        },
        "min": "8.30"
      },
      "taximeter-az": {
        "current": "8.32",
        "min": "8.32"
      }
    }
  },
  {
    "_id": "PASSPORT_INTERNAL_BASE_URL",
    "v": "http://passport-internal.yandex.ru"
  },
  {
    "_id": "ROUTE_ADJUST_ENABLED",
    "v": false
  },
  {
    "_id": "PAYMENTMETHODS_BILLING_SVC_URL",
    "v": "http://balance-simple.yandex.net:8018/simple/xmlrpc"
  },
  {
    "_id": "IMPORT_DRIVERS_PDA_LEGACY_ALLOW_ONLY_FULL_IMPORTS",
    "v": true
  },
  {
    "_id": "FIXED_PRICE_MAX_CHANGE_DESTINATION_DISTANCE",
    "v": 500
  },
  {
    "_id": "ORDERLOCKS_LEGACY_BEHAVIOUR",
    "v": false
  },
  {
    "_id": "DEFAULT_ANTIFRAUD_CONFIG",
    "v": {
      "enabled": true,
      "personal": [
        {
          "config": {
            "hold_fix_price": true,
            "last_payment_delta": 500,
            "pause_before_hold": 30,
            "pause_before_hold_airport": 120,
            "pause_before_hold_fix_price": 5,
            "pause_before_hold_no_dest": 0,
            "payment_deltas": [
              500
            ]
          },
          "group_id": 2,
          "tariff_class": "econom"
        }
      ]
    }
  },
  {
    "_id": "FALLBACK_ANTIFRAUD_CONFIG",
    "v": {
      "hold_fix_price": true,
      "last_payment_delta": 500,
      "pause_before_hold": 30,
      "pause_before_hold_airport": 120,
      "pause_before_hold_fix_price": 5,
      "pause_before_hold_no_dest": 0,
      "payment_deltas": [
        500
      ]
    }
  },
  {
    "_id": "TVM_API_URL",
    "v": "http://tvm-api.yandex.net"
  },
  {
    "_id": "MAPS_RESPONSE_FORMAT",
    "v": "proto"
  },
  {
    "_id": "FEEDBACK_SAVE_WITH_SERVICE",
    "v": true
  },
  {
    "_id": "ETA_ML_PRELOAD",
    "v": [
      {
        "name": "matrixnet.info",
        "versions": [
          [
            1,
            0
          ]
        ]
      },
      {
        "name": "nz.json",
        "versions": [
          [
            1,
            0
          ]
        ]
      }
    ]
  },
  {
    "_id": "TAXIMETER_SURGE_CLIENT_PARAMS",
    "v": {
      "antisurge_detect_delay": 3600,
      "antisurge_max_speed": 0,
      "antisurge_show_in_busy": false,
      "surge_recalc_delay": 3600
    }
  },
  {
    "_id": "CORP_BILLING_PAYMENT_KINDS_BY_CATEGORIES",
    "v": {
      "logistic_cargo": {
        "client": "cargo_client_b2b_logistics_payment",
        "partner": "cargo_park_b2b_logistics_payment"
      },
      "logistic_courier": {
        "client": "delivery_client_b2b_logistics_payment",
        "partner": "delivery_park_b2b_logistics_payment"
      }
    }
  },
  {
    "_id": "COUNTRIES_DATA_SOURCE",
    "v": "api"
  },
  {
    "_id": "VGW_TOTW_DRIVER_VOICE_FORWARDING_DISABLE_THRESHOLD_BY_COUNTRY",
    "v": {
      "__default__": 0
    }
  },
  {
    "_id": "YT_REPLICATION_RUNTIME_CLUSTERS",
    "v": [
      "seneca-man",
      "seneca-sas",
      "seneca-vla"
    ]
  },
  {
    "_id": "ML_MDS_S3_DISABLED",
    "v": true
  },
  {
    "_id": "TAXI_TERRITORIES_TIMEOUT_MS",
    "v": 2000
  },
  {
    "_id": "PROCESSING_TRACE_ORDER_USAGE",
    "v": true
  },
  {
    "_id": "PROCESSING_SEND_TO_PROCESSING_20",
    "v": false
  },
  {
    "_id": "ORDER_SHARDS_ENABLED",
    "v": true
  },
  {
    "_id": "ORDER_SHARDS_SYNC_ENABLED",
    "v": true
  },
  {
    "_id": "ORDER_SHARDS",
    "v": [
      0
    ]
  },
  {
    "_id": "ORDER_SHARDS_THROW_QUERY_ERRORS",
    "v": true
  },
  {
    "_id": "ORDER_SHARDS_QUERY_MODIFY_ENABLED",
    "v": true
  },
  {
    "_id": "ORDERS_QUERY_MODIFY_ENABLED",
    "v": true
  },
  {
    "_id": "TRACKER_REQUEST_SETTINGS",
    "v": [
      {
        "handler": "__default__",
        "retries": 3,
        "timeout_ms": 500
      },
      {
        "handler": "/1.0/acquire",
        "retries": 1,
        "timeout_ms": 10000
      },
      {
        "handler": "/svo/profiles",
        "retries": 1,
        "timeout_ms": 10000
      }
    ]
  },
  {
    "_id": "TAXIROUTE_FALLBACK_TO_RAW_TRACK",
    "v": true
  },
  {
    "_id": "ADJUST_CONFIG",
    "v": {
      "__default__": false
    }
  },
  {
    "_id": "NO_CARS_ORDER_ML_PRELOAD",
    "v": [
      {
        "name": "matrixnet.info",
        "versions": [
          [
            1,
            0
          ]
        ]
      },
      {
        "name": "model_params.json",
        "versions": [
          [
            1,
            0
          ]
        ]
      }
    ]
  },
  {
    "_id": "STATISTICS_ENABLE_SEND",
    "v": false
  },
  {
    "_id": "USER_API_USE_USER_PHONES_CREATION",
    "v": true
  },
  {
    "_id": "USER_API_USE_USER_PHONES_BULK_CREATION",
    "v": true
  },
  {
    "_id": "USER_API_USE_PERSONAL_DATA_CLIENT",
    "v": true
  },
  {
    "_id": "USER_API_USE_USER_PHONES_CREATION_PY2",
    "v": true
  },
  {
    "_id": "USER_API_USE_USER_PHONES_CREATION_PY3",
    "v": true
  },
  {
    "_id": "DRIVER_SESSION_OLD_USES_SESSIONS_CHECK",
    "v": true
  },
  {
    "_id": "DRIVER_SESSION_EXPIRE_SECONDS",
    "v": 36000
  },
  {
    "_id": "DRIVER_SESSIONS_PROLONG_HALF_EXPIRED",
    "v": true
  },
  {
    "_id": "DRIVER_AUTHORIZER_REDIS_DEFAULT_CONTROL_COMMAND",
    "v": {
      "max_retries": 2,
      "timeout_all_ms": 1500,
      "timeout_single_ms": 500
    }
  },
  {
    "_id": "DRIVER_SESSION_CLIENT_STORAGE_SETTINGS",
    "v": {
      "__default__": {
        "read_from": "driver-authorizer",
        "write_to": [
          "driver-authorizer"
        ]
      }
    }
  },
  {
    "_id": "EDA_CORE_CHECKOUT_BUNDLE",
    "v": {
      "rover_additional_info": {
        "description_url": "https://yandex.ru/promo/eda/rover",
        "subtitle": "Подробности",
        "title": "Ровер приедет, если свободен"
      }
    }
  },
  {
    "_id": "EDA_CORE_MYSQL_TRANSACTION_STATS",
    "v": {
      "included": false,
      "percent": 100,
      "threshold_count": 100,
      "threshold_size": 1000
    }
  },
  {
    "_id": "EDA_CORE_SECURITY",
    "v": {
      "config": {
        "is_enabled": true
      },
      "rules": {}
    }
  },
  {
    "_id": "EDA_CORE_PAYMENT_SYSTEM_NAMES",
    "v": {
      "payment_system_names": [
        {
          "name": "MasterCard",
          "values": [
            "MasterCard"
          ]
        },
        {
          "name": "Maestro",
          "values": [
            "Maestro"
          ]
        },
        {
          "name": "MasterCard Elite",
          "values": [
            "MasterCard Elite"
          ]
        },
        {
          "name": "VISA",
          "values": [
            "VISA",
            "VISA_ELECTRON"
          ]
        },
        {
          "name": "Visa Infinite",
          "values": [
            "Visa Infinite"
          ]
        },
        {
          "name": "Discover",
          "values": [
            "Discover"
          ]
        },
        {
          "name": "JCB",
          "values": [
            "JCB"
          ]
        },
        {
          "name": "Diners Club",
          "values": [
            "Diners Club",
            "DinersClubCarteBlanche"
          ]
        },
        {
          "name": "UzCard",
          "values": [
            "UzCard"
          ]
        },
        {
          "name": "UnionPay",
          "values": [
            "UnionPay"
          ]
        },
        {
          "name": "American Express",
          "values": [
            "American Express",
            "AmericanExpress"
          ]
        },
        {
          "name": "MIR",
          "values": [
            "MIR"
          ]
        },
        {
          "name": "Bancontact",
          "values": [
            "MAESTRO/BANCONTACT"
          ]
        }
      ]
    }
  },
  {
    "_id": "EDA_CORE_FEATURE_FLAGS",
    "v": {
      "apns_message_payload": {
        "description": "Toggle of new format message for push notification",
        "enabled": true
      },
      "bk_checkout_strict_check_amount": {
        "description": "BK checkout. Enable strict check for cart amount",
        "enabled": false
      },
      "bk_new_session_auth": {
        "description": "New way login for burgerking",
        "enabled": true
      },
      "card_payment_on_delivery": {
        "description": "Turn on card payment on delivery",
        "enabled": false
      },
      "cargo_claim_courier_type_update_disable": {
        "description": "Disable updating courier's type from cargo claims",
        "enabled": false
      },
      "cart_promocode_field_null": {
        "description": "Do not write promocode_id on carts table",
        "enabled": false
      },
      "cashback_multiplication_promo": {
        "description": "Enables cashback multiplication promo. Relates: https://st.yandex-team.ru/EDAPRODUCT-980",
        "enabled": true
      },
      "client_categories_synchronizer_skip_duplicates": {
        "description": "Skip duplicated client categories",
        "enabled": true
      },
      "courier_admin_tariff_editor_link_enabled": {
        "description": "Show driver profile link in courier's admin",
        "enabled": true
      },
      "courier_selfemployed_inn_bind": {
        "description": "Use INN FNS bind if INN is set",
        "enabled": true
      },
      "courier_tip_finalize_stuck": {
        "description": "Enable stuck tips actualization",
        "enabled": true
      },
      "daily_reports_use_place_id_chunks": {
        "description": "Use chunks by place to fetch orders for daily reports",
        "enabled": true
      },
      "deactivate_bk_item_after_error": {
        "description": "Deactivate item after some errors in BK order sender",
        "enabled": true
      },
      "disable_save_orders_update_info": {
        "description": "Disablee order update info logs to postgres database",
        "enabled": false
      },
      "eats_cart_on_checkout_enabled": {
        "description": "using eats_cart on checkout",
        "enabled": true
      },
      "eats_order_send_events_enabled_send": {
        "description": "Enabling writing eats-order-send events from core",
        "enabled": true
      },
      "eats_payment_methods_availability": {
        "description": "Enable new payments methods availability",
        "enabled": true
      },
      "feedback_export_enabled": {
        "description": "Export feedback in eats-feedback",
        "enabled": true
      },
      "finance_eats_payments_tips": {
        "description": "Enables tips for eats-payments",
        "enabled": true
      },
      "finance_refund_products": {
        "description": "Enables new way for compensation through products refund",
        "enabled": true
      },
      "go_checkout_plus_cashback": {
        "description": "Enables plus cashback feature in go-checkout endpoint",
        "enabled": true
      },
      "go_checkout_rover": {
        "description": "Adds rover receiving type in go-checkout endpoint",
        "enabled": true
      },
      "integration_bk_check_places_status": {
        "description": "Auto check places status for burgerking",
        "enabled": true
      },
      "integration_bk_pars_with_place_id": {
        "description": "New way of parsing for burgerking",
        "enabled": true
      },
      "lavka_without_delivery_zone": {
        "description": "Disable place delivery zone resolving for Lavka",
        "enabled": true
      },
      "logging_context_db": {
        "description": "Logging useing context from db",
        "enabled": false
      },
      "magnit_order_sync_on_final_status": {
        "description": "Send order to Magnit only on final delivered status",
        "enabled": true
      },
      "magnit_wl_strategy_checker_available": {
        "description": "Is a strict availablity strategy checker available for Magnit App?",
        "enabled": true
      },
      "metrics_apcu_on": {
        "description": "Metrics gathered in APCu",
        "enabled": true
      },
      "metrics_separation_on": {
        "description": "Separetedmetrics is on",
        "enabled": true
      },
      "metrics_solomon_agent_ready": {
        "description": "Solomon agent for integration is ready",
        "enabled": true
      },
      "orders_retrieve_float_quantity": {
        "description": "Enable float quantities in orders retrieve endpoint",
        "enabled": false
      },
      "place_auto_stop_enabled": {
        "description": "Auto stop bad places",
        "enabled": true
      },
      "place_average_cheques_import_enabled": {
        "description": "Turn on place averge cheques import",
        "enabled": true
      },
      "place_rating_import_enabled": {
        "description": "Place rating. Enable rating import",
        "enabled": true
      },
      "place_updater_sync_mode_enabled": {
        "description": "Place updater. Enable sync places mode",
        "enabled": true
      },
      "place_updater_updating_enabled": {
        "description": "Place updater. Enable places updating",
        "enabled": true
      },
      "promo_export_feed_enabled": {
        "description": "Export active promos in feed",
        "enabled": true
      },
      "rabbitmq_waiting_for_pending_ack_enabled": {
        "description": "Waiting for ack for rabbitmq",
        "enabled": true
      },
      "salesforce_account_full_update_enabled": {
        "description": "Salesforce full account update",
        "enabled": true
      },
      "salesforce_integration_enabled": {
        "description": "Global Salesforce integration status",
        "enabled": true
      },
      "settings_cache_enabled": {
        "description": "Settings cache (from database to disk and apcu) feature flag",
        "enabled": true
      },
      "support_pricing_surge_fetching": {
        "description": "Support pricing surge fetching",
        "enabled": false
      },
      "support_pricing_thresholds_fetching": {
        "description": "Getting thresholds from pricing",
        "enabled": true
      },
      "tracking_courier_on_taxi_dispatching_push": {
        "description": "Toggle of pushing couriers on taxi dispatching in Tracking++ via STQ",
        "enabled": true
      },
      "tracking_courier_push": {
        "description": "Toggle of a couriers pushing in Tracking++ via STQ",
        "enabled": true
      },
      "tracking_eater_to_place_masking_link_to_order": {
        "description": "Masking of eater-to-place scenario linked to order_nr",
        "enabled": true
      },
      "tracking_eta_push_on_native_timings_update": {
        "description": "Toggle of pushing ETA on async action of actualization timings of native couriers",
        "enabled": true
      },
      "tracking_eta_push_on_taxi_dispatch_timings_update": {
        "description": "Toggle of pushing ETA on async action of actualization timings of taxi couriers",
        "enabled": true
      },
      "tracking_order_batched_delivery_push": {
        "description": "Toggle of pushing orders on batched delivery in Tracking++ via STQ",
        "enabled": true
      },
      "tracking_order_push": {
        "description": "Toggle of an orders pushing in Tracking++ via STQ",
        "enabled": true
      },
      "using_formatted_money_in_notification": {
        "description": "Using extended money formatter in notification",
        "enabled": false
      },
      "yandex_rover_cooked_order_processing_enabled": {
        "description": "Open hatch yandex rover, when order cooked",
        "enabled": true
      }
    }
  },
  {
    "_id": "CONFIG_KEY_CONNECTION",
    "v": []
  },
  {
    "_id": "EATS_CATALOG_RESOLVER",
    "v": {
      "is_pricing_enabled": false,
      "return_not_found_error": true
    }
  },
  {
    "_id": "EATS_CATALOG_STORAGE_S3_DUMPER",
    "v": {
      "backup_period_seconds": 300,
      "backup_prefix": "backup/eats-catalog-storage_",
      "destination": "eats-catalog-storage.jsonl",
      "enabled": true,
      "period_seconds": 60,
      "timeout_seconds": 90,
      "upload_retries": 1
    }
  },
  {
    "_id": "EATS_CORE_CLIENT_QOS",
    "v": {
      "/v1/picker-orders/apply-state": {
        "attempts": 10,
        "timeout-ms": 1000
      },
      "__default__": {
        "attempts": 1,
        "timeout-ms": 20000
      }
    }
  },
  {
    "_id": "EATS_PICKER_ASSIGN_STQ_SETTINGS",
    "v": {
      "picker_exclusion_time_sec": 30,
      "retries": 30,
      "stq_timeout_sec": 5
    }
  },
  {
    "_id": "EATS_PICKER_DISPATCH_CLIENT_QOS",
    "v": {
      "__default__": {
        "attempts": 1,
        "timeout-ms": 10000
      }
    }
  },
  {
    "_id": "EATS_PICKER_DISPATCH_DB_REQUEST_SETTINGS",
    "v": {
      "network_timeout_ms": 300,
      "statement_timeout_ms": 200
    }
  },
  {
    "_id": "EATS_PICKER_DISPATCH_PERIODIC_DISPATCHER_PARAMS",
    "v": {
      "estimated_duration_coefficient": 1,
      "max_picking_duration_limit": 14400,
      "max_place_idle_duration": 86400,
      "period_seconds": 1
    }
  },
  {
    "_id": "EATS_PICKER_DISPATCH_STQ_SETTINGS",
    "v": {
      "picker_exclusion_time_sec": 30,
      "retries": 360,
      "stq_timeout_sec": 15
    }
  },
  {
    "_id": "EATS_PICKER_DISPATCH_SYNC_PLACES_INFO_PARAMS",
    "v": {
      "period_seconds": 600,
      "places_batch_size": 100,
      "working_intervals_limit": 7
    }
  },
  {
    "_id": "TAXIMETER_DRIVER_AUTHORIZER",
    "v": {
      "db_suffixes": [],
      "delete_timeout_ms": 500,
      "enable": true,
      "get_timeout_ms": 500,
      "put_timeout_ms": 500,
      "retry_count": 5
    }
  },
  {
    "_id": "DRIVER_SESSION_CHECK_MODE",
    "v": "driver-authorizer"
  },
  {
    "_id": "DRIVER_AUTHORIZER_TIMEOUT_MS",
    "v": 500
  },
  {
    "_id": "USERVICE_DRIVER_AUTHORIZER_TIMEOUT_MS",
    "v": 500
  },
  {
    "_id": "TAXIMETER_LOG_OUT_JOB_SETTINGS",
    "v": {
      "da_enable": true,
      "da_log_only": false,
      "enable": true,
      "gps_enable": false,
      "gps_log_only": true
    }
  },
  {
    "_id": "DRIVERS_LOGOUT_CONFIG",
    "v": {
      "distribution_percent": 5,
      "dry_run": true,
      "enable": false
    }
  },
  {
    "_id": "EXPERIMENTS3_SERVICE_CONSUMER_RELOAD",
    "v": [
      "launch",
      "frontend/yango",
      "stq/zendesk_ticket",
      "protocol/routestats",
      "corp_integration_api",
      "docker_integration_tests/file_upload",
      "docker_integration_tests/user_has"
    ]
  },
  {
    "_id": "TVM_DISABLE_CHECK",
    "v": [
      "parks"
    ]
  },
  {
    "_id": "PARKS_CLIENT_TVM2_SERVICE_NAME",
    "v": "parks"
  },
  {
    "_id": "TVM_ENABLED",
    "v": false
  },
  {
    "_id": "TVM_SERVICES",
    "v": {
      "ab": 2023111,
      "admin-pipeline": 2021109,
      "afisha-draqla": 2001171,
      "agglomerations": 2015465,
      "antifraud": 2001728,
      "api-admin": 2008717,
      "api-cache": 2019565,
      "api-proxy": 2013864,
      "api-proxy-external-geo": 2028196,
      "api-proxy-manager": 2018404,
      "api-proxy-superapp-critical": 2029304,
      "archive-api": 2014176,
      "authproxy-manager": 200117,
      "autoaccept": 2028002,
      "avatars-mds": 2002148,
      "b2b-authproxy": 2014811,
      "bigb": 2001337,
      "billing-replication": 2010196,
      "billing-wallet": 2018718,
      "billing_orders": 2002226,
      "billing_payments": 2000601,
      "billing_subventions": 2002230,
      "blocklist": 2021099,
      "busy-drivers": 2017195,
      "candidate-meta": 2014404,
      "candidates": 2014778,
      "cardstorage": 2012212,
      "cargo-c2c": 2023718,
      "cargo-claims": 2017985,
      "cargo-corp": 2027874,
      "cargo-dispatch": 2017983,
      "cargo-finance": 2028502,
      "cargo-matcher": 2017987,
      "cargo-misc": 2017969,
      "cargo-orders": 2020957,
      "cargo-payments": 2025938,
      "cargo-photofixation": 2032282,
      "cargo-pricing": 2021524,
      "cargo-sdd": 2031326,
      "cargo-statistics": 2024441,
      "cargo-waybill": 2017771,
      "cars-catalog": 2013736,
      "cashback-annihilator": 2027866,
      "cashbox-integration": 2016245,
      "chatterbox": 2001071,
      "classifier": 2021734,
      "client-notify": 2016877,
      "clownductor": 2014576,
      "clowny-balancer": 2019838,
      "clowny-perforator": 2020016,
      "code_dispatch_web": 2012516,
      "combo-contractors": 2025524,
      "combo-matcher": 2014044,
      "communications": 2011992,
      "config-schemas": 2016353,
      "configs-admin": 2031034,
      "contractor-balances": 2028078,
      "contractor-emulator": 2026324,
      "contractor-order-history": 2028708,
      "contractor-order-setcar": 2031178,
      "contractor-orders-multioffer": 2021836,
      "contractor-orders-polling": 2021837,
      "contractor-profession": 2028202,
      "contractor-random-bonus": 2024463,
      "contractor-transport": 2020337,
      "coord-control": 2020338,
      "corp-billing": 2016257,
      "corp-integration-api": 2002374,
      "coupons": 2014782,
      "datasync": 2000060,
      "debt-collector": 2027872,
      "debts": 2013656,
      "deptrans-driver-status": 2025214,
      "dispatch-airport": 2018492,
      "dispatch-airport-view": 2023157,
      "dispatch-buffer": 2017923,
      "dispatch-settings": 2016001,
      "dispatcher-access-control": 2015949,
      "distlocks": 2018202,
      "document_templator": 2015815,
      "driver-authorizer": 2015947,
      "driver-authproxy": 2015948,
      "driver-categories-api": 2013376,
      "driver-diagnostics": 2020849,
      "driver-eta": 2016311,
      "driver-freeze": 2013646,
      "driver-launch": 2018154,
      "driver-lessons": 2021370,
      "driver-login": 2013796,
      "driver-map": 2013692,
      "driver-metrics": 2011274,
      "driver-mode-index": 2018510,
      "driver-mode-subscription": 2016665,
      "driver-order-messages": 2013299,
      "driver-order-misc": 2013300,
      "driver-orders": 2015527,
      "driver-orders-app-api": 2013729,
      "driver-orders-builder": 2016787,
      "driver-profile-view": 2013326,
      "driver-profiles": 2011740,
      "driver-ratings": 2015353,
      "driver-ratings-storage": 2018938,
      "driver-route-responder": 2027804,
      "driver-route-watcher": 2017679,
      "driver-scoring": 2016017,
      "driver-status": 2014808,
      "driver-support": 2014815,
      "driver-tags": 2016249,
      "driver-trackstory": 2017855,
      "driver-ui-profile": 2021067,
      "driver-weariness": 2013852,
      "driver-work-rules": 2014048,
      "driver_protocol": 2001934,
      "eater-authorizer": 2018930,
      "eats-api-proxy": 2026580,
      "eats-billing-storage": 2020777,
      "eats-cart": 2027048,
      "eats-catalog": 2025668,
      "eats-catalog-storage": 2021736,
      "eats-compensations-matrix": 2020591,
      "eats-ctt": 2010174,
      "eats-customer-slots": 2026900,
      "eats-data-mappings": 2034537,
      "eats-debt-user-scoring": 2027180,
      "eats-discounts": 2023193,
      "eats-eaters": 2025164,
      "eats-eta": 2020853,
      "eats-integration-workers": 2028146,
      "eats-launch": 2019902,
      "eats-nomenclature": 2021510,
      "eats-notifications": 2028598,
      "eats-offers": 2019509,
      "eats-order-revision": 2029768,
      "eats-order-stats": 2028368,
      "eats-orders-tracking": 2024641,
      "eats-ordershistory": 2019998,
      "eats-payments": 2021618,
      "eats-performer-shifts": 2027256,
      "eats-picker-dispatch": 2024509,
      "eats-picker-item-categories": 2027758,
      "eats-picker-orders": 2020993,
      "eats-picker-payment": 2020925,
      "eats-picker-payments": 2025059,
      "eats-picker-racks": 2024449,
      "eats-picker-supply": 2024505,
      "eats-picker-timers": 2026384,
      "eats-picking-time-estimator": 2024499,
      "eats-plus": 2025001,
      "eats-products": 2023051,
      "eats-receipts": 2027990,
      "eats-restapp-marketing": 2025037,
      "eats-restaurant-menu": 2025266,
      "eats-retail-globus-parser": 2031192,
      "eats-retail-order-history": 2028662,
      "eats-smart-prices": 2034117,
      "eats-stub-tinkoff": 2024643,
      "eats-surge-notify": 2030435,
      "eats-surge-resolver": 2027015,
      "eats-tags": 2020575,
      "eats-user-reactions": 2020307,
      "eda-candidates": 2015533,
      "eda-delivery-price": 2021592,
      "eda-promocodes": 2018280,
      "eda-surge-calculator": 2017425,
      "eda_core": 2011662,
      "edadeal-checkprovider": 2020873,
      "edc-authproxy": 2014810,
      "envoy-exp-alpha": 2023802,
      "envoy-exp-bravo": 2023814,
      "envoy-exp-charlie": 2023806,
      "envoy-exp-delta": 2023810,
      "esignature-issuer": 2018033,
      "eslogsadminpy3": 2013671,
      "eulas": 2011968,
      "excluded-drivers": 2020268,
      "experiments3": 2013674,
      "experiments3-proxy": 2015020,
      "fleet-authproxy": 2014809,
      "fleet-orders-guarantee": 2030009,
      "fleet-parks": 2013296,
      "fleet-rent": 2015491,
      "fleet-synchronizer": 2016415,
      "fleet-vehicles": 2017075,
      "geo-pipeline-control-plane": 2033899,
      "geoareas": 2017887,
      "georeceiver": 2010978,
      "geosharing": 2008262,
      "grocery-api": 2018918,
      "grocery-caas-markdown": 2026636,
      "grocery-caas-promo": 2027898,
      "grocery-cart": 2017833,
      "grocery-cashback": 2030869,
      "grocery-checkins": 2025820,
      "grocery-cold-storage": 2024601,
      "grocery-coupons": 2019543,
      "grocery-depots": 2029672,
      "grocery-depots-user-view-calc": 2030635,
      "grocery-discounts": 2018538,
      "grocery-dispatch": 2027436,
      "grocery-eats-gateway": 2028142,
      "grocery-fav-goods": 2023832,
      "grocery-holidays": 2024997,
      "grocery-invoices": 2024175,
      "grocery-market-gw": 2026240,
      "grocery-marketing": 2025041,
      "grocery-offers": 2017829,
      "grocery-order-log": 2023826,
      "grocery-orders": 2018178,
      "grocery-orders-tracking": 2030859,
      "grocery-p13n": 2021748,
      "grocery-payments": 2025746,
      "grocery-payments-billing": 2026474,
      "grocery-pics": 2017541,
      "grocery-products": 2021201,
      "grocery-saas-search-proxy": 2026042,
      "grocery-search": 2023742,
      "grocery-supply": 2026622,
      "grocery-support": 2026686,
      "grocery-surge": 2024807,
      "grocery-tags": 2024817,
      "grocery-takeout": 2026999,
      "grocery-upsale": 2018502,
      "grocery-user-debts": 2029396,
      "grocery-wms": 2017297,
      "grocery-wms-gateway": 2019713,
      "heatmap-storage": 2016235,
      "import": 2001770,
      "individual-tariffs": 2034543,
      "int-authproxy": 2020098,
      "internal-trackstory": 2033227,
      "invites": 2018608,
      "layers": 2018071,
      "lbs-cloud-proxy": 2015929,
      "localizations-replica": 2013348,
      "logbroker": 2001059,
      "logistic-dispatcher": 2020945,
      "logistic-platform": 2024159,
      "lookup": 2013802,
      "lookup-ordering": 2013900,
      "loyalty": 2011374,
      "manual-dispatch": 2021384,
      "masstransit": 2015521,
      "mbi-api": 2011130,
      "metadata-storage": 2015923,
      "mlaas": 2011368,
      "order-archive": 2021159,
      "order-core": 2015593,
      "order-offers": 2023746,
      "order-takeout": 2033875,
      "overlord-catalog": 2017285,
      "parks": 2002074,
      "parks-activation": 2012296,
      "parks-certifications": 2016899,
      "parks-replica": 2012292,
      "partner-api-proxy": 2028411,
      "passenger-authorizer": 2010876,
      "passenger-profile": 2015615,
      "passenger-tags": 2015651,
      "passport": 224,
      "passport-internal": 2000079,
      "payment-methods": 2026180,
      "payments_eda": 2012150,
      "personal": 2011250,
      "personal_wallet": 2015447,
      "persuggest": 2015016,
      "pickup-points-manager": 2016803,
      "plotva-ml-eats": 2016717,
      "preorder": 2015381,
      "pricing-data-preparer": 2013708,
      "pricing-taximeter": 2029090,
      "pro-profiles": 2034681,
      "processing": 2016733,
      "promotions": 2014116,
      "protocol": 2001351,
      "py2-order-processing": 2026704,
      "quality-control": 2016669,
      "quality-control-cpp": 2015198,
      "rate-limiter-proxy": 2016312,
      "replication": 2001999,
      "reposition": 2001998,
      "reposition-api": 2021598,
      "routehistory": 2016741,
      "rt-xaron": 2021241,
      "saturn": 2028164,
      "scooters-misc": 2027654,
      "scooters-ops": 2031929,
      "scout": 2026404,
      "sdc-robot": 2019034,
      "selfemployed": 2009519,
      "selfemployed-fns-replica": 2031228,
      "selfreg": 2011078,
      "shared-payments": 2011196,
      "shuttle-control": 2025784,
      "social": 2000382,
      "special-zones": 2021149,
      "src-router-maps": 2019775,
      "staff-production": 2001974,
      "statistics": 2014904,
      "sticker": 2013362,
      "stq": 2001642,
      "stq-agent": 2013230,
      "subvention-order-context": 2033487,
      "superapp-misc": 2017847,
      "tags": 2002014,
      "tariffs": 2011710,
      "taxi-approvals": 2011778,
      "taxi_approvals_cron": 2011784,
      "taxi_exp": 2012314,
      "taximeter-core": 2001838,
      "taximeter-daemon": 2001850,
      "taximeter-jobs": 2001846,
      "taximeter-xservice": 2001828,
      "territories": 2014242,
      "toll-roads": 2017839,
      "tolls": 2021494,
      "transactions": 2011846,
      "transactions-lavka-isr": 2024115,
      "transactions-ng": 2027610,
      "transactions_eda": 2012122,
      "tristero-b2b": 2023330,
      "tristero-parcels": 2023309,
      "uantifraud": 2016287,
      "uapi-keys": 2016288,
      "ucommunications": 2012118,
      "umlaas": 2015415,
      "umlaas-dispatch": 2031775,
      "umlaas-eats": 2018248,
      "umlaas-geo": 2018055,
      "unique-drivers": 2011278,
      "united-dispatch": 2031639,
      "user-api": 2013236,
      "user-authconfirm": 2016437,
      "user-state": 2019653,
      "userplaces": 2014130,
      "vgw-api": 123321,
      "virtual-tariffs": 2018109,
      "yaga-adjust": 2014388,
      "yagr": 2014222,
      "yamaps": 2008261,
      "yamaps-router": 2010296,
      "yamaps-suggest-geo": 2016731,
      "yamaps-suggest-personal": 2009978,
      "yandex-drive": 2010062,
      "yb-trust-payments": 2001798,
      "zalogin": 2014478
    }
  },
  {
    "_id": "PARKS_ACTIVATION_PERIOD",
    "v": 5
  },
  {
    "_id": "PARKS_ACTIVATION_SYNCHRONIZE_TASK",
    "v": {
      "chunk_size": 1000,
      "distlock_name": "parks_synchronize_distlock",
      "distlock_timeout_sec": 10,
      "enabled": true,
      "get_last_revision_db_timeout_ms": 500,
      "max_length_bytes": 100000,
      "period_sec": 5,
      "update_parks_db_timeout_ms": 1000
    }
  },
  {
    "_id": "TVM_RULES",
    "v": [
      {
        "dst": "clownductor",
        "src": "configs-admin"
      },
      {
        "dst": "payments_eda",
        "src": "grocery-orders"
      },
      {
        "dst": "billing-replication",
        "src": "parks-activation"
      },
      {
        "dst": "driver-orders-app-api",
        "src": "processing"
      },
      {
        "dst": "pricing-taximeter",
        "src": "driver-orders-app-api"
      },
      {
        "dst": "selfemployed",
        "src": "driver-orders-app-api"
      },
      {
        "dst": "cars-catalog",
        "src": "candidates"
      },
      {
        "dst": "grocery-depots",
        "src": "candidates"
      },
      {
        "dst": "driver-lessons",
        "src": "candidates"
      },
      {
        "dst": "driver-authorizer",
        "src": "driver-login"
      },
      {
        "dst": "deptrans-driver-status",
        "src": "candidates"
      },
      {
        "dst": "blocklist",
        "src": "candidates"
      },
      {
        "dst": "selfreg",
        "src": "driver-login"
      },
      {
        "dst": "client-notify",
        "src": "driver-login"
      },
      {
        "dst": "parks",
        "src": "driver-login"
      },
      {
        "dst": "driver-status",
        "src": "driver-login"
      },
      {
        "dst": "reposition",
        "src": "driver-login"
      },
      {
        "dst": "communications",
        "src": "driver-login"
      },
      {
        "dst": "fleet-rent",
        "src": "driver-login"
      },
      {
        "dst": "communications",
        "src": "driver-status"
      },
      {
        "dst": "driver-authorizer",
        "src": "driver-orders-app-api"
      },
      {
        "dst": "driver-authorizer",
        "src": "driver-status"
      },
      {
        "dst": "driver-ui-profile",
        "src": "driver-orders-app-api"
      },
      {
        "dst": "taxi_exp",
        "src": "driver-orders-app-api"
      },
      {
        "dst": "experiments3-proxy",
        "src": "driver-orders-app-api"
      },
      {
        "dst": "driver-order-messages",
        "src": "driver-orders-app-api"
      },
      {
        "dst": "driver-work-rules",
        "src": "driver-orders-app-api"
      },
      {
        "dst": "fleet-parks",
        "src": "driver-orders-app-api"
      },
      {
        "dst": "parks",
        "src": "driver-orders-app-api"
      },
      {
        "dst": "pricing-data-preparer",
        "src": "driver-orders-app-api"
      },
      {
        "dst": "personal",
        "src": "fleet-parks"
      },
      {
        "dst": "statistics",
        "src": "driver-orders-app-api"
      },
      {
        "dst": "stq-agent",
        "src": "driver-orders-app-api"
      },
      {
        "dst": "taximeter-xservice",
        "src": "driver-orders-app-api"
      },
      {
        "dst": "territories",
        "src": "driver-orders-app-api"
      },
      {
        "dst": "georeceiver",
        "src": "driver-status"
      },
      {
        "dst": "yagr",
        "src": "candidates"
      },
      {
        "dst": "driver-eta",
        "src": "protocol"
      },
      {
        "dst": "driver-status",
        "src": "candidates"
      },
      {
        "dst": "driver-status",
        "src": "driver-login"
      },
      {
        "dst": "driver-status",
        "src": "driver_protocol"
      },
      {
        "dst": "driver-status",
        "src": "taximeter-xservice"
      },
      {
        "dst": "driver-freeze",
        "src": "candidates"
      },
      {
        "dst": "eda_core",
        "src": "eats-picker-supply"
      },
      {
        "dst": "eda_core",
        "src": "eats-picker-orders"
      },
      {
        "dst": "eda_core",
        "src": "eats-picker-dispatch"
      },
      {
        "dst": "eats-picker-dispatch",
        "src": "eda_core"
      },
      {
        "dst": "eats-picker-orders",
        "src": "eda_core"
      },
      {
        "dst": "experiments3-proxy",
        "src": "candidates"
      },
      {
        "dst": "metadata-storage",
        "src": "candidates"
      },
      {
        "dst": "reposition",
        "src": "candidates"
      },
      {
        "dst": "reposition-api",
        "src": "candidates"
      },
      {
        "dst": "tags",
        "src": "candidates"
      },
      {
        "dst": "taxi_exp",
        "src": "candidates"
      },
      {
        "dst": "candidates",
        "src": "driver-map"
      },
      {
        "dst": "candidates",
        "src": "import"
      },
      {
        "dst": "taxi_exp",
        "src": "persuggest"
      },
      {
        "dst": "special-zones",
        "src": "persuggest"
      },
      {
        "dst": "experiments3-proxy",
        "src": "persuggest"
      },
      {
        "dst": "candidates",
        "src": "lookup"
      },
      {
        "dst": "statistics",
        "src": "lookup"
      },
      {
        "dst": "statistics",
        "src": "driver-status"
      },
      {
        "dst": "statistics",
        "src": "fleet-parks"
      },
      {
        "dst": "metadata-storage",
        "src": "lookup"
      },
      {
        "dst": "lookup-ordering",
        "src": "lookup"
      },
      {
        "dst": "parks",
        "src": "driver_protocol"
      },
      {
        "dst": "userplaces",
        "src": "persuggest"
      },
      {
        "dst": "yamaps",
        "src": "userplaces"
      },
      {
        "dst": "yamaps",
        "src": "persuggest"
      },
      {
        "dst": "routehistory",
        "src": "persuggest"
      },
      {
        "dst": "routehistory",
        "src": "mlaas"
      },
      {
        "dst": "routehistory",
        "src": "stq"
      },
      {
        "dst": "code_dispatch_web",
        "src": "persuggest"
      },
      {
        "dst": "protocol",
        "src": "api-proxy"
      },
      {
        "dst": "umlaas-geo",
        "src": "persuggest"
      },
      {
        "dst": "pickup-points-manager",
        "src": "persuggest"
      },
      {
        "dst": "logistic-platform",
        "src": "persuggest"
      },
      {
        "dst": "geoareas",
        "src": "persuggest"
      },
      {
        "dst": "zalogin",
        "src": "social"
      },
      {
        "dst": "driver-categories-api",
        "src": "candidates"
      },
      {
        "dst": "driver-trackstory",
        "src": "driver-categories-api"
      },
      {
        "dst": "geoareas",
        "src": "driver-categories-api"
      },
      {
        "dst": "communications",
        "src": "driver-categories-api"
      },
      {
        "dst": "fleet-parks",
        "src": "driver-categories-api"
      },
      {
        "dst": "driver-profiles",
        "src": "driver-categories-api"
      },
      {
        "dst": "statistics",
        "src": "driver-categories-api"
      },
      {
        "dst": "driver-categories-api",
        "src": "taximeter-core"
      },
      {
        "dst": "driver-categories-api",
        "src": "taximeter-jobs"
      },
      {
        "dst": "driver-categories-api",
        "src": "taximeter-daemon"
      },
      {
        "dst": "driver-categories-api",
        "src": "taximeter-xservice"
      },
      {
        "dst": "taximeter-xservice",
        "src": "driver-categories-api"
      },
      {
        "dst": "driver-tags",
        "src": "driver-categories-api"
      },
      {
        "dst": "stq-agent",
        "src": "driver-categories-api"
      },
      {
        "dst": "tags",
        "src": "driver-categories-api"
      },
      {
        "dst": "contractor-transport",
        "src": "driver-categories-api"
      },
      {
        "dst": "contractor-transport",
        "src": "candidates"
      },
      {
        "dst": "driver-categories-api",
        "src": "driver-orders-builder"
      },
      {
        "dst": "driver-profile-view",
        "src": "driver-orders-builder"
      },
      {
        "dst": "driver-categories-api",
        "src": "driver-authproxy"
      },
      {
        "dst": "tariffs",
        "src": "driver-categories-api"
      },
      {
        "dst": "driver-diagnostics",
        "src": "driver-categories-api"
      },
      {
        "dst": "statistics",
        "src": "driver-ratings"
      },
      {
        "dst": "statistics",
        "src": "driver-ratings-storage"
      },
      {
        "dst": "driver-ratings-storage",
        "src": "driver-ratings"
      },
      {
        "dst": "driver-ratings",
        "src": "protocol"
      },
      {
        "dst": "driver-ratings",
        "src": "parks"
      },
      {
        "dst": "processing",
        "src": "grocery-orders"
      },
      {
        "dst": "order-core",
        "src": "processing"
      },
      {
        "dst": "archive-api",
        "src": "order-core"
      },
      {
        "dst": "grocery-orders",
        "src": "processing"
      },
      {
        "dst": "corp-integration-api",
        "src": "processing"
      },
      {
        "dst": "processing",
        "src": "stq"
      },
      {
        "dst": "statistics",
        "src": "processing"
      },
      {
        "dst": "stq-agent",
        "src": "processing"
      },
      {
        "dst": "taxi_exp",
        "src": "processing"
      },
      {
        "dst": "experiments3-proxy",
        "src": "processing"
      },
      {
        "dst": "processing",
        "src": "processing"
      },
      {
        "dst": "stq",
        "src": "processing"
      },
      {
        "dst": "replication",
        "src": "processing"
      },
      {
        "dst": "archive-api",
        "src": "processing"
      },
      {
        "dst": "agglomerations",
        "src": "driver-orders-builder"
      },
      {
        "dst": "driver-orders-app-api",
        "src": "driver-orders-builder"
      },
      {
        "dst": "driver-orders-builder",
        "src": "driver-orders-app-api"
      },
      {
        "dst": "driver-orders-builder",
        "src": "taximeter-xservice"
      },
      {
        "dst": "driver-orders-builder",
        "src": "cargo-claims"
      },
      {
        "dst": "billing_subventions",
        "src": "driver-orders-builder"
      },
      {
        "dst": "cashbox-integration",
        "src": "driver-orders-builder"
      },
      {
        "dst": "cargo-claims",
        "src": "driver-orders-builder"
      },
      {
        "dst": "cargo-dispatch",
        "src": "driver-orders-builder"
      },
      {
        "dst": "cargo-orders",
        "src": "driver-orders-builder"
      },
      {
        "dst": "contractor-orders-multioffer",
        "src": "driver-orders-builder"
      },
      {
        "dst": "driver-mode-subscription",
        "src": "driver-orders-builder"
      },
      {
        "dst": "driver-profiles",
        "src": "driver-orders-builder"
      },
      {
        "dst": "driver-tags",
        "src": "driver-orders-builder"
      },
      {
        "dst": "driver-ui-profile",
        "src": "driver-orders-builder"
      },
      {
        "dst": "experiments3",
        "src": "driver-orders-builder"
      },
      {
        "dst": "experiments3-proxy",
        "src": "driver-orders-builder"
      },
      {
        "dst": "order-core",
        "src": "driver-orders-builder"
      },
      {
        "dst": "parks",
        "src": "driver-orders-builder"
      },
      {
        "dst": "passenger-profile",
        "src": "driver-orders-builder"
      },
      {
        "dst": "statistics",
        "src": "driver-orders-builder"
      },
      {
        "dst": "taxi_exp",
        "src": "driver-orders-builder"
      },
      {
        "dst": "territories",
        "src": "driver-orders-builder"
      },
      {
        "dst": "toll-roads",
        "src": "driver-orders-builder"
      },
      {
        "dst": "tolls",
        "src": "driver-orders-builder"
      },
      {
        "dst": "quality-control-cpp",
        "src": "candidates"
      },
      {
        "dst": "geosharing",
        "src": "contractor-orders-polling"
      },
      {
        "dst": "driver_protocol",
        "src": "contractor-orders-polling"
      },
      {
        "dst": "driver-status",
        "src": "contractor-orders-polling"
      },
      {
        "dst": "coord-control",
        "src": "contractor-orders-polling"
      },
      {
        "dst": "experiments3-proxy",
        "src": "contractor-orders-polling"
      },
      {
        "dst": "experiments3-proxy",
        "src": "cardstorage"
      },
      {
        "dst": "cardstorage",
        "src": "experiments3-proxy"
      },
      {
        "dst": "taxi_exp",
        "src": "contractor-orders-polling"
      },
      {
        "dst": "reposition",
        "src": "contractor-orders-polling"
      },
      {
        "dst": "contractor-orders-polling",
        "src": "driver-authproxy"
      },
      {
        "dst": "driver-status",
        "src": "driver-authproxy"
      },
      {
        "dst": "dispatch-airport-view",
        "src": "contractor-orders-polling"
      },
      {
        "dst": "statistics",
        "src": "eats-picker-dispatch"
      },
      {
        "dst": "eats-picker-supply",
        "src": "eats-picker-dispatch"
      },
      {
        "dst": "eats-picker-orders",
        "src": "eats-picker-dispatch"
      },
      {
        "dst": "distlocks",
        "src": "eats-picker-dispatch"
      },
      {
        "dst": "stq-agent",
        "src": "eats-picker-dispatch"
      },
      {
        "dst": "personal",
        "src": "eats-launch"
      },
      {
        "dst": "eda_core",
        "src": "eats-launch"
      },
      {
        "dst": "eats-payments",
        "src": "eda_core"
      },
      {
        "dst": "eda_core",
        "src": "eats-payments"
      },
      {
        "dst": "eats-notifications",
        "src": "eats-payments"
      },
      {
        "dst": "eats-payments",
        "src": "api-proxy"
      },
      {
        "dst": "api-proxy",
        "src": "eats-payments"
      },
      {
        "dst": "eats-order-revision",
        "src": "eats-payments"
      },
      {
        "dst": "driver-orders-app-api",
        "src": "cargo-claims"
      },
      {
        "dst": "driver-orders-app-api",
        "src": "cargo-orders"
      },
      {
        "dst": "driver-orders-app-api",
        "src": "contractor-orders-multioffer"
      },
      {
        "dst": "driver-orders-app-api",
        "src": "driver-authproxy"
      },
      {
        "dst": "driver-orders-app-api",
        "src": "taximeter-core"
      },
      {
        "dst": "driver-orders-app-api",
        "src": "taximeter-xservice"
      },
      {
        "dst": "communications",
        "src": "driver-orders-app-api"
      },
      {
        "dst": "driver-profiles",
        "src": "driver-orders-app-api"
      },
      {
        "dst": "driver-status",
        "src": "driver-orders-app-api"
      },
      {
        "dst": "driver-trackstory",
        "src": "driver-orders-app-api"
      },
      {
        "dst": "contractor-orders-multioffer",
        "src": "driver-orders-app-api"
      },
      {
        "dst": "experiments3-proxy",
        "src": "eats-picker-dispatch"
      },
      {
        "dst": "envoy-exp-bravo",
        "src": "envoy-exp-alpha"
      },
      {
        "dst": "envoy-exp-charlie",
        "src": "envoy-exp-bravo"
      },
      {
        "dst": "eats-performer-shifts",
        "src": "candidates"
      },
      {
        "dst": "loyalty",
        "src": "driver-orders-builder"
      },
      {
        "dst": "selfemployed-fns-replica",
        "src": "candidates"
      },
      {
        "dst": "partner-api-proxy",
        "src": "driver-orders-app-api"
      },
      {
        "dst": "experiments3-proxy",
        "src": "eats-cart"
      },
      {
        "dst": "eda_core",
        "src": "eats-cart"
      },
      {
        "dst": "eats-smart-prices",
        "src": "eats-cart"
      },
      {
        "dst": "eats-integration-workers",
        "src": "eats-picker-orders"
      },
      {
        "dst": "eats-retail-globus-parser",
        "src": "eats-picker-orders"
      },
      {
        "dst": "umlaas-dispatch",
        "src": "preorder"
      },
      {
        "dst": "umlaas-dispatch",
        "src": "driver-eta"
      },
      {
        "dst": "umlaas-dispatch",
        "src": "driver-scoring"
      },
      {
        "dst": "driver-trackstory",
        "src": "umlaas-dispatch"
      },
      {
        "dst": "experiments3-proxy",
        "src": "umlaas-dispatch"
      },
      {
        "dst": "taxi_exp",
        "src": "umlaas-dispatch"
      },
      {
        "dst": "candidates",
        "src": "umlaas-dispatch"
      },
      {
        "dst": "uantifraud",
        "src": "cardstorage"
      },
      {
        "dst": "internal-trackstory",
        "src": "driver-trackstory"
      },
      {
        "dst": "payment-methods",
        "src": "driver-orders-app-api"
      },
      {
        "dst": "subvention-order-context",
        "src": "driver-orders-app-api"
      },
      {
        "dst": "eulas",
        "src": "driver-orders-builder"
      },
      {
        "dst": "pro-profiles",
        "src": "driver-login"
      },
      {
        "dst": "individual-tariffs",
        "src": "lookup"
      }
    ]
  },
  {
    "_id": "EXP3_ADMIN_CONFIG",
    "v": {
      "features": {
        "backend": {
          "enable_convert_phone_to_phone_id": true
        },
        "common": {
          "enable_config_removing": true,
          "enable_create_creating_draft": true,
          "enable_drafts_creating": true,
          "enable_experiment_removing": true,
          "enable_falls_inside": true,
          "enable_has_tag": false,
          "enable_join_versions": true,
          "enable_modal_warning_before_save_exp": true,
          "enable_sql_serialization": false,
          "enable_uplift_experiment": true,
          "use_new_design": true
        }
      },
      "settings": {
        "common": {
          "in_set_max_elements_count": 1000,
          "meta_merge_methods": [
            "dicts_recursive_merge"
          ],
          "tags_transform_rules": [
            {
              "arg_name": "__same_name__",
              "tag_name": "__default__"
            },
            {
              "arg_name": "phone_id",
              "tag_name": "yandex_phone_id"
            },
            {
              "arg_name": "phone_id",
              "tag_name": "taxi_phone_id"
            },
            {
              "arg_name": "phone_id",
              "tag_name": "corp_eats_phone_id"
            },
            {
              "arg_name": "personal_phone_id",
              "tag_name": "eats_personal_phone_id"
            }
          ],
          "trait_tags": [
            "analytical"
          ]
        }
      }
    }
  },
  {
    "_id": "USE_FROM_API_KEY",
    "v": true
  },
  {
    "_id": "YAGR_ENABLE_POSITIONS_PUBLISH",
    "v": true
  },
  {
    "_id": "YAGR_ENABLE_POSITIONS_V2_CHANNEL",
    "v": true
  },
  {
    "_id": "TRACK_UPDATE_MODE",
    "v": 3
  },
  {
    "_id": "USE_DRIVER_TRACKSTORY_PERCENT",
    "v": 100
  },
  {
    "_id": "USE_DRIVER_TRACKSTORY_DP_PERCENT",
    "v": 100
  },
  {
    "_id": "TAXIMETER_REDIRECT_POSITION_TO_TRACKSTORY",
    "v": true
  },
  {
    "_id": "LOCALIZATIONS_DATA_SOURCE_PY3",
    "v": {
      "source": "service",
      "verifications": false
    }
  },
  {
    "_id": "LOCALIZATIONS_KEYSETS",
    "v": {
      "keysets": {
        "antifraud": {
          "mongo_collection_name": "localization.taxi.antifraud",
          "tanker_keyset_id": "antifraud",
          "tanker_project_id": "taxi"
        },
        "backend_promotions": {
          "mongo_collection_name": "localization.taxi.backend_promotions",
          "tanker_keyset_id": "backend.promotions",
          "tanker_project_id": "taxi"
        },
        "cargo": {
          "mongo_collection_name": "localization.taxi.cargo",
          "tanker_keyset_id": "cargo",
          "tanker_project_id": "taxi"
        },
        "cargo_client_messages": {
          "mongo_collection_name": "localization.taxi.cargo_client_messages",
          "tanker_keyset_id": "cargo.client_messages",
          "tanker_project_id": "taxi"
        },
        "chatterbox": {
          "mongo_collection_name": "localization.taxi.chatterbox",
          "tanker_keyset_id": "chatterbox",
          "tanker_project_id": "taxi"
        },
        "cities": {
          "mongo_collection_name": "localization.taxi.cities",
          "tanker_keyset_id": "cities",
          "tanker_project_id": "taximetre"
        },
        "client_messages": {
          "mongo_collection_name": "localization.taxi.client_messages",
          "tanker_keyset_id": "backend.client_messages",
          "tanker_project_id": "taxi"
        },
        "client_messages_yango": {
          "mongo_collection_name": "localization.taxi.client_messages_yango",
          "tanker_keyset_id": "backend.client_messages.yango",
          "tanker_project_id": "taxi"
        },
        "color": {
          "mongo_collection_name": "localization.taxi.color",
          "tanker_keyset_id": "blocks-common:i-color-label",
          "tanker_project_id": "taxi"
        },
        "corp": {
          "mongo_collection_name": "localization.taxi.corp",
          "tanker_keyset_id": "backend.corp",
          "tanker_project_id": "taxi"
        },
        "corp_client": {
          "mongo_collection_name": "localization.taxi.corp_client",
          "tanker_keyset_id": "corp-client",
          "tanker_project_id": "taxi"
        },
        "country_of_origin": {
          "mongo_collection_name": "localization.grocery.country_of_origin",
          "tanker_keyset_id": "country_of_origin",
          "tanker_project_id": "yandex_lavka"
        },
        "crm": {
          "mongo_collection_name": "localization.taxi.crm",
          "tanker_keyset_id": "crm",
          "tanker_project_id": "taxi"
        },
        "currencies": {
          "mongo_collection_name": "localization.grocery.currencies",
          "tanker_keyset_id": "currencies",
          "tanker_project_id": "yandex_lavka"
        },
        "discount_descriptions": {
          "mongo_collection_name": "localization.grocery.grocery_discount_descriptions",
          "tanker_keyset_id": "discount_descriptions",
          "tanker_project_id": "yandex_lavka"
        },
        "driver_fix": {
          "mongo_collection_name": "localization.taxi.driver_fix",
          "tanker_keyset_id": "backend.driver_fix",
          "tanker_project_id": "taxi"
        },
        "eats-cart": {
          "mongo_collection_name": "localization.eats-cart",
          "tanker_keyset_id": "eats-cart",
          "tanker_project_id": "eats"
        },
        "eats-catalog": {
          "mongo_collection_name": "localization.eats-catalog",
          "tanker_keyset_id": "eats-catalog",
          "tanker_project_id": "eats"
        },
        "eats-payments": {
          "mongo_collection_name": "localization.eats-payments",
          "tanker_keyset_id": "eats-payments",
          "tanker_project_id": "eats"
        },
        "eats-payments-tracking": {
          "mongo_collection_name": "localization.eats-payments-tracking",
          "tanker_keyset_id": "eats-payments-tracking",
          "tanker_project_id": "eats"
        },
        "eats-payments-transactions-errors": {
          "mongo_collection_name": "localization.eats-payments-transactions-errors",
          "tanker_keyset_id": "eats-payments-transactions-errors",
          "tanker_project_id": "eats"
        },
        "eats-reward-composer": {
          "mongo_collection_name": "localization.eats-reward-composer",
          "tanker_keyset_id": "eats-reward-composer",
          "tanker_project_id": "eats"
        },
        "form_builder": {
          "mongo_collection_name": "localization.taxi.form_builder",
          "tanker_keyset_id": "constructor",
          "tanker_project_id": "taxi-tariff-editor"
        },
        "forms": {
          "mongo_collection_name": "localization.taxi.forms",
          "tanker_keyset_id": "backend.forms",
          "tanker_project_id": "taxi"
        },
        "geoareas": {
          "mongo_collection_name": "localization.taxi.geoareas",
          "tanker_keyset_id": "backend.geoareas",
          "tanker_project_id": "taxi"
        },
        "grocery-support": {
          "mongo_collection_name": "localization.grocery.grocery-support",
          "tanker_keyset_id": "grocery-support",
          "tanker_project_id": "yandex_lavka"
        },
        "grocery_cart": {
          "mongo_collection_name": "localization.grocery.grocery_cart",
          "tanker_keyset_id": "grocery_cart",
          "tanker_project_id": "yandex_lavka"
        },
        "grocery_discounts_discount_categories": {
          "mongo_collection_name": "localization.grocery.grocery_discounts_discount_categories",
          "tanker_keyset_id": "grocery_discounts_discount_categories",
          "tanker_project_id": "common"
        },
        "grocery_eats_gateway": {
          "mongo_collection_name": "localization.grocery.grocery_eats_gateway",
          "tanker_keyset_id": "grocery_eats_gateway",
          "tanker_project_id": "yandex_lavka"
        },
        "grocery_holidays": {
          "mongo_collection_name": "localization.grocery.grocery_holidays",
          "tanker_keyset_id": "grocery_holidays",
          "tanker_project_id": "yandex_lavka"
        },
        "grocery_invoices": {
          "mongo_collection_name": "localization.grocery.grocery_invoices",
          "tanker_keyset_id": "grocery_invoices",
          "tanker_project_id": "yandex_lavka"
        },
        "grocery_localizations": {
          "mongo_collection_name": "localization.grocery.grocery_localizations",
          "tanker_keyset_id": "grocery_localizations",
          "tanker_project_id": "yandex_lavka"
        },
        "grocery_market_gw": {
          "mongo_collection_name": "localization.grocery.grocery_market_gw",
          "tanker_keyset_id": "grocery_market_gw",
          "tanker_project_id": "yandex_lavka"
        },
        "grocery_order_log": {
          "mongo_collection_name": "localization.grocery.grocery_order_log",
          "tanker_keyset_id": "grocery_order_log",
          "tanker_project_id": "yandex_lavka"
        },
        "grocery_orders": {
          "mongo_collection_name": "localization.grocery.grocery_orders",
          "tanker_keyset_id": "grocery_orders",
          "tanker_project_id": "yandex_lavka"
        },
        "grocery_p13n": {
          "mongo_collection_name": "localization.grocery.grocery_p13n",
          "tanker_keyset_id": "grocery_p13n",
          "tanker_project_id": "yandex_lavka"
        },
        "grocery_payments": {
          "mongo_collection_name": "localization.grocery.grocery_payments",
          "tanker_keyset_id": "grocery_payments",
          "tanker_project_id": "yandex_lavka"
        },
        "itaxi_messages": {
          "mongo_collection_name": "localization.taxi.itaxi_messages",
          "tanker_keyset_id": "iTaxi.Messages",
          "tanker_project_id": "taxi"
        },
        "ivr_messages": {
          "mongo_collection_name": "localization.taxi.ivr_messages",
          "tanker_keyset_id": "backend.ivr_messages",
          "tanker_project_id": "taxi"
        },
        "locales": {
          "mongo_collection_name": "localization.taxi.locales",
          "tanker_keyset_id": "blocks-common:locales",
          "tanker_project_id": "taxi"
        },
        "notify": {
          "mongo_collection_name": "localization.taxi.notify",
          "tanker_keyset_id": "backend.notify",
          "tanker_project_id": "taxi"
        },
        "notify_yango": {
          "mongo_collection_name": "localization.taxi.notify_yango",
          "tanker_keyset_id": "backend.notify.yango",
          "tanker_project_id": "taxi"
        },
        "opteum_General": {
          "mongo_collection_name": "localization.opteum.General",
          "tanker_keyset_id": "General",
          "tanker_project_id": "opteum"
        },
        "opteum_apikeys_card": {
          "mongo_collection_name": "localization.opteum.apikeys_card",
          "tanker_keyset_id": "apikeys_card",
          "tanker_project_id": "opteum"
        },
        "opteum_backend_corp": {
          "mongo_collection_name": "localization.opteum.backend_corp",
          "tanker_keyset_id": "backend.corp",
          "tanker_project_id": "opteum"
        },
        "opteum_backend_driver": {
          "mongo_collection_name": "localization.opteum.backend_driver",
          "tanker_keyset_id": "backend.driver",
          "tanker_project_id": "opteum"
        },
        "opteum_backend_override_az": {
          "mongo_collection_name": "localization.opteum.backend_override_az",
          "tanker_keyset_id": "backend.override.az",
          "tanker_project_id": "opteum"
        },
        "opteum_backend_pickuppoints": {
          "mongo_collection_name": "localization.opteum.backend_pickuppoints",
          "tanker_keyset_id": "backend.pickuppoints",
          "tanker_project_id": "opteum"
        },
        "opteum_backend_selfemployed": {
          "mongo_collection_name": "localization.opteum.backend_selfemployed",
          "tanker_keyset_id": "backend.selfemployed",
          "tanker_project_id": "opteum"
        },
        "opteum_bug_report": {
          "mongo_collection_name": "localization.opteum.bug_report",
          "tanker_keyset_id": "bug_report",
          "tanker_project_id": "opteum"
        },
        "opteum_car_tc": {
          "mongo_collection_name": "localization.opteum.car_tc",
          "tanker_keyset_id": "car_tc",
          "tanker_project_id": "opteum"
        },
        "opteum_card_driver": {
          "mongo_collection_name": "localization.opteum.card_driver",
          "tanker_keyset_id": "card_driver",
          "tanker_project_id": "opteum"
        },
        "opteum_common": {
          "mongo_collection_name": "localization.opteum.common",
          "tanker_keyset_id": "common",
          "tanker_project_id": "opteum"
        },
        "opteum_component_PSAT": {
          "mongo_collection_name": "localization.opteum.component_PSAT",
          "tanker_keyset_id": "component_PSAT",
          "tanker_project_id": "opteum"
        },
        "opteum_corp_client": {
          "mongo_collection_name": "localization.opteum.corp_client",
          "tanker_keyset_id": "corp-client",
          "tanker_project_id": "opteum"
        },
        "opteum_driver": {
          "mongo_collection_name": "localization.opteum.driver",
          "tanker_keyset_id": "driver",
          "tanker_project_id": "opteum"
        },
        "opteum_enums": {
          "mongo_collection_name": "localization.opteum.enums",
          "tanker_keyset_id": "enums",
          "tanker_project_id": "opteum"
        },
        "opteum_exports": {
          "mongo_collection_name": "localization.opteum.exports",
          "tanker_keyset_id": "exports",
          "tanker_project_id": "opteum"
        },
        "opteum_iTaxi_Messages": {
          "mongo_collection_name": "localization.opteum.iTaxi_Messages",
          "tanker_keyset_id": "iTaxi.Messages",
          "tanker_project_id": "opteum"
        },
        "opteum_le_card": {
          "mongo_collection_name": "localization.opteum.le_card",
          "tanker_keyset_id": "le_card",
          "tanker_project_id": "opteum"
        },
        "opteum_menu": {
          "mongo_collection_name": "localization.opteum.menu",
          "tanker_keyset_id": "menu",
          "tanker_project_id": "opteum"
        },
        "opteum_page_apikeys": {
          "mongo_collection_name": "localization.opteum.page_apikeys",
          "tanker_keyset_id": "page_apikeys",
          "tanker_project_id": "opteum"
        },
        "opteum_page_cars": {
          "mongo_collection_name": "localization.opteum.page_cars",
          "tanker_keyset_id": "page_cars",
          "tanker_project_id": "opteum"
        },
        "opteum_page_console": {
          "mongo_collection_name": "localization.opteum.page_console",
          "tanker_keyset_id": "page_console",
          "tanker_project_id": "opteum"
        },
        "opteum_page_drivers": {
          "mongo_collection_name": "localization.opteum.page_drivers",
          "tanker_keyset_id": "page_drivers",
          "tanker_project_id": "opteum"
        },
        "opteum_page_drivers_segments": {
          "mongo_collection_name": "localization.opteum.page_drivers_segments",
          "tanker_keyset_id": "page_drivers_segments",
          "tanker_project_id": "opteum"
        },
        "opteum_page_employees": {
          "mongo_collection_name": "localization.opteum.page_employees",
          "tanker_keyset_id": "page_employees",
          "tanker_project_id": "opteum"
        },
        "opteum_page_finance_movements": {
          "mongo_collection_name": "localization.opteum.page_finance_movements",
          "tanker_keyset_id": "page_finance_movements",
          "tanker_project_id": "opteum"
        },
        "opteum_page_finance_statement": {
          "mongo_collection_name": "localization.opteum.page_finance_statement",
          "tanker_keyset_id": "page_finance_statement",
          "tanker_project_id": "opteum"
        },
        "opteum_page_groups_payments": {
          "mongo_collection_name": "localization.opteum.page_groups_payments",
          "tanker_keyset_id": "page_groups_payments",
          "tanker_project_id": "opteum"
        },
        "opteum_page_integrations": {
          "mongo_collection_name": "localization.opteum.page_integrations",
          "tanker_keyset_id": "page_integrations",
          "tanker_project_id": "opteum"
        },
        "opteum_page_le": {
          "mongo_collection_name": "localization.opteum.page_le",
          "tanker_keyset_id": "page_le",
          "tanker_project_id": "opteum"
        },
        "opteum_page_map": {
          "mongo_collection_name": "localization.opteum.page_map",
          "tanker_keyset_id": "page_map",
          "tanker_project_id": "opteum"
        },
        "opteum_page_mini_report_driver": {
          "mongo_collection_name": "localization.opteum.page_mini_report_driver",
          "tanker_keyset_id": "page_mini_report_driver",
          "tanker_project_id": "opteum"
        },
        "opteum_page_no_parks": {
          "mongo_collection_name": "localization.opteum.page_no_parks",
          "tanker_keyset_id": "page_no_parks",
          "tanker_project_id": "opteum"
        },
        "opteum_page_offert": {
          "mongo_collection_name": "localization.opteum.page_offert",
          "tanker_keyset_id": "page_offert",
          "tanker_project_id": "opteum"
        },
        "opteum_page_order_card": {
          "mongo_collection_name": "localization.opteum.page_order_card",
          "tanker_keyset_id": "page_order_card",
          "tanker_project_id": "opteum"
        },
        "opteum_page_orders": {
          "mongo_collection_name": "localization.opteum.page_orders",
          "tanker_keyset_id": "page_orders",
          "tanker_project_id": "opteum"
        },
        "opteum_page_report_drivers": {
          "mongo_collection_name": "localization.opteum.page_report_drivers",
          "tanker_keyset_id": "page_report_drivers",
          "tanker_project_id": "opteum"
        },
        "opteum_page_report_drivers_billing": {
          "mongo_collection_name": "localization.opteum.page_report_drivers_billing",
          "tanker_keyset_id": "page_report_drivers_billing",
          "tanker_project_id": "opteum"
        },
        "opteum_page_report_finance_movements_billing": {
          "mongo_collection_name": "localization.opteum.page_report_finance_movements_billing",
          "tanker_keyset_id": "page_report_finance_movements_billing",
          "tanker_project_id": "opteum"
        },
        "opteum_page_report_parks": {
          "mongo_collection_name": "localization.opteum.page_report_parks",
          "tanker_keyset_id": "page_report_parks",
          "tanker_project_id": "opteum"
        },
        "opteum_page_report_partner_performance": {
          "mongo_collection_name": "localization.opteum.page_report_partner_performance",
          "tanker_keyset_id": "page_report_partner_performance",
          "tanker_project_id": "opteum"
        },
        "opteum_page_report_payouts": {
          "mongo_collection_name": "localization.opteum.page_report_payouts",
          "tanker_keyset_id": "page_report_payouts",
          "tanker_project_id": "opteum"
        },
        "opteum_page_report_transactions_summary_date": {
          "mongo_collection_name": "localization.opteum.page_report_transactions_summary_date",
          "tanker_keyset_id": "page_report_transactions_summary_date",
          "tanker_project_id": "opteum"
        },
        "opteum_page_work_rules": {
          "mongo_collection_name": "localization.opteum.page_work_rules",
          "tanker_keyset_id": "page_work_rules",
          "tanker_project_id": "opteum"
        },
        "opteum_quickbar": {
          "mongo_collection_name": "localization.opteum.quickbar",
          "tanker_keyset_id": "quickbar",
          "tanker_project_id": "opteum"
        },
        "opteum_scoring": {
          "mongo_collection_name": "localization.opteum.scoring",
          "tanker_keyset_id": "scoring",
          "tanker_project_id": "opteum"
        },
        "opteum_section_info": {
          "mongo_collection_name": "localization.opteum.section_info",
          "tanker_keyset_id": "section_info",
          "tanker_project_id": "opteum"
        },
        "opteum_sidebar": {
          "mongo_collection_name": "localization.opteum.sidebar",
          "tanker_keyset_id": "sidebar",
          "tanker_project_id": "opteum"
        },
        "opteum_support_chat": {
          "mongo_collection_name": "localization.opteum.support_chat",
          "tanker_keyset_id": "support_chat",
          "tanker_project_id": "opteum"
        },
        "opteum_support_chat_form": {
          "mongo_collection_name": "localization.opteum.support_chat_form",
          "tanker_keyset_id": "support_chat_form",
          "tanker_project_id": "opteum"
        },
        "opteum_transaction_categories": {
          "mongo_collection_name": "localization.opteum.transaction_categories",
          "tanker_keyset_id": "transaction_categories",
          "tanker_project_id": "opteum"
        },
        "opteum_transaction_comments": {
          "mongo_collection_name": "localization.opteum.transaction_comments",
          "tanker_keyset_id": "transaction_comments",
          "tanker_project_id": "opteum"
        },
        "opteum_validations": {
          "mongo_collection_name": "localization.opteum.validations",
          "tanker_keyset_id": "validations",
          "tanker_project_id": "opteum"
        },
        "opteum_vat": {
          "mongo_collection_name": "localization.opteum.vat",
          "tanker_keyset_id": "vat",
          "tanker_project_id": "opteum"
        },
        "opteum_vehicle_colors": {
          "mongo_collection_name": "localization.opteum.vehicle_colors",
          "tanker_keyset_id": "vehicle_colors",
          "tanker_project_id": "opteum"
        },
        "order": {
          "mongo_collection_name": "localization.taxi.order",
          "tanker_keyset_id": "backend.order",
          "tanker_project_id": "taxi"
        },
        "overlord_catalog": {
          "mongo_collection_name": "localization.grocery.overlord_catalog",
          "tanker_keyset_id": "overlord_catalog",
          "tanker_project_id": "yandex_lavka"
        },
        "override_7220": {
          "mongo_collection_name": "localization.taxi.override_7220",
          "tanker_keyset_id": "backend.override.7220",
          "tanker_project_id": "taxi"
        },
        "override_az": {
          "mongo_collection_name": "localization.taxi.override_az",
          "tanker_keyset_id": "backend.override.az",
          "tanker_project_id": "taximetre"
        },
        "override_uber": {
          "mongo_collection_name": "localization.taxi.override_uber",
          "tanker_keyset_id": "backend.override.uber",
          "tanker_project_id": "taxi"
        },
        "override_uberdriver": {
          "mongo_collection_name": "localization.taxi.override_uberdriver",
          "tanker_keyset_id": "backend.override.uberdriver",
          "tanker_project_id": "taximetre"
        },
        "override_vezet": {
          "mongo_collection_name": "localization.taxi.override_vezet",
          "tanker_keyset_id": "backend.override.vezet",
          "tanker_project_id": "taximetre"
        },
        "pickuppoints": {
          "mongo_collection_name": "localization.taxi.pickuppoints",
          "tanker_keyset_id": "backend.pickuppoints",
          "tanker_project_id": "taxi"
        },
        "poputka": {
          "mongo_collection_name": "localization.taxi.poputka",
          "tanker_keyset_id": "backend.poputka",
          "tanker_project_id": "taxi"
        },
        "qr_payment": {
          "mongo_collection_name": "localization.taxi.qr_payment",
          "tanker_keyset_id": "backend.qr_payment",
          "tanker_project_id": "taxi"
        },
        "reports": {
          "mongo_collection_name": "localization.taxi.reports",
          "tanker_keyset_id": "backend.reports",
          "tanker_project_id": "taxi"
        },
        "rida": {
          "mongo_collection_name": "localization.taxi.rida",
          "tanker_keyset_id": "rida",
          "tanker_project_id": "taxi"
        },
        "startrack_reports": {
          "mongo_collection_name": "localization.taxi.startrack_reports",
          "tanker_keyset_id": "backend.startrack_reports",
          "tanker_project_id": "taxi"
        },
        "subvention_geoareas": {
          "mongo_collection_name": "localization.taxi.subvention_geoareas",
          "tanker_keyset_id": "backend.subvention_geoareas",
          "tanker_project_id": "taxi"
        },
        "support_info": {
          "mongo_collection_name": "localization.taxi.support_info",
          "tanker_keyset_id": "support_info",
          "tanker_project_id": "taxi"
        },
        "support_scenarios": {
          "mongo_collection_name": "localization.taxi.support_scenarios",
          "tanker_keyset_id": "backend.support_scenarios",
          "tanker_project_id": "taxi"
        },
        "support_tickets": {
          "mongo_collection_name": "localization.taxi.support_tickets",
          "tanker_keyset_id": "backend.support_tickets",
          "tanker_project_id": "taxi"
        },
        "tariff": {
          "mongo_collection_name": "localization.taxi.tariff",
          "tanker_keyset_id": "backend.tariff",
          "tanker_project_id": "taxi"
        },
        "tariff_editor": {
          "mongo_collection_name": "localization.taxi.tariff_editor",
          "tanker_keyset_id": "backend.tariff_editor",
          "tanker_project_id": "taxi"
        },
        "tariff_yango": {
          "mongo_collection_name": "localization.taxi.tariff_yango",
          "tanker_keyset_id": "backend.tariff.yango",
          "tanker_project_id": "taxi"
        },
        "taximeter_backend_api": {
          "mongo_collection_name": "localization.taximeter.backend_api",
          "tanker_keyset_id": "taximeter.api",
          "tanker_project_id": "taximetre"
        },
        "taximeter_backend_api_controllers": {
          "mongo_collection_name": "localization.taximeter.backend_api_controllers",
          "tanker_keyset_id": "taximeter.api.controllers",
          "tanker_project_id": "taximetre"
        },
        "taximeter_backend_driver_lessons": {
          "mongo_collection_name": "localization.taximeter.backend_driver_lessons",
          "tanker_keyset_id": "backend.driver_lessons",
          "tanker_project_id": "taximetre"
        },
        "taximeter_backend_driver_messages": {
          "mongo_collection_name": "localization.taximeter.backend_driver_messages",
          "tanker_keyset_id": "backend.driver",
          "tanker_project_id": "taximetre"
        },
        "taximeter_backend_driver_referrals": {
          "mongo_collection_name": "localization.taximeter.backend_driver_referrals",
          "tanker_keyset_id": "backend.driver_referrals",
          "tanker_project_id": "taximetre"
        },
        "taximeter_backend_fleet_rent": {
          "mongo_collection_name": "localization.taximeter.fleet_rent",
          "tanker_keyset_id": "backend.fleet_rent",
          "tanker_project_id": "taximetre"
        },
        "taximeter_backend_messages": {
          "mongo_collection_name": "localization.taximeter.backend_messages",
          "tanker_keyset_id": "taximeter.messages",
          "tanker_project_id": "taximetre"
        },
        "taximeter_backend_selfemployed": {
          "mongo_collection_name": "localization.taximeter.backend_selfemployed",
          "tanker_keyset_id": "backend.selfemployed",
          "tanker_project_id": "taximetre"
        },
        "taximeter_driver_messages": {
          "mongo_collection_name": "localization.taximeter.driver_messages",
          "tanker_keyset_id": "driver",
          "tanker_project_id": "taximetre"
        },
        "taximeter_driver_messages_az": {
          "mongo_collection_name": "localization.taximeter.driver_messages_az",
          "tanker_keyset_id": "driver.az",
          "tanker_project_id": "taximetre"
        },
        "taximeter_driver_messages_uberdriver": {
          "mongo_collection_name": "localization.taximeter.driver_messages_uberdriver",
          "tanker_keyset_id": "driver.uberdriver",
          "tanker_project_id": "taximetre"
        },
        "taximeter_driver_messages_vezet": {
          "mongo_collection_name": "localization.taximeter.driver_messages_vezet",
          "tanker_keyset_id": "driver.vezet",
          "tanker_project_id": "taximetre"
        },
        "taximeter_messages": {
          "mongo_collection_name": "localization.taxi.taximeter_messages",
          "tanker_keyset_id": "backend.taximeter_messages",
          "tanker_project_id": "taxi"
        },
        "tristero": {
          "mongo_collection_name": "localization.grocery.tristero",
          "tanker_keyset_id": "tristero",
          "tanker_project_id": "yandex_lavka"
        },
        "virtual_catalog": {
          "mongo_collection_name": "localization.grocery.virtual_catalog",
          "tanker_keyset_id": "virtual_catalog",
          "tanker_project_id": "yandex_lavka"
        },
        "virtual_categories_search_titles_production": {
          "mongo_collection_name": "localization.grocery.virtual_categories_search_titles_production",
          "tanker_keyset_id": "production_virtual_categories_search_titles",
          "tanker_project_id": "yandex_lavka"
        },
        "virtual_categories_search_titles_testing": {
          "mongo_collection_name": "localization.grocery.virtual_categories_search_titles_testing",
          "tanker_keyset_id": "testing_virtual_categories_search_titles",
          "tanker_project_id": "yandex_lavka"
        },
        "wms_amount_units": {
          "mongo_collection_name": "localization.grocery.wms_amount_units",
          "tanker_keyset_id": "wms_amount_units",
          "tanker_project_id": "yandex_lavka"
        },
        "wms_attributes": {
          "mongo_collection_name": "localization.grocery.wms_attributes",
          "tanker_keyset_id": "wms_attributes",
          "tanker_project_id": "lavka-ma"
        },
        "wms_categories_production": {
          "mongo_collection_name": "localization.grocery.wms_categories_production",
          "tanker_keyset_id": "production_product_groups",
          "tanker_project_id": "lavka-ma"
        },
        "wms_categories_search_title_production": {
          "mongo_collection_name": "localization.grocery.wms_categories_search_title_production",
          "tanker_keyset_id": "wms_categories_search_title_production",
          "tanker_project_id": "lavka-ma"
        },
        "wms_categories_search_title_testing": {
          "mongo_collection_name": "localization.grocery.wms_categories_search_title_testing",
          "tanker_keyset_id": "wms_categories_search_title_testing",
          "tanker_project_id": "lavka-ma"
        },
        "wms_categories_search_titles_production": {
          "mongo_collection_name": "localization.grocery.wms_categories_search_titles_production",
          "tanker_keyset_id": "production_product_groups",
          "tanker_project_id": "lavka-ma"
        },
        "wms_categories_search_titles_testing": {
          "mongo_collection_name": "localization.grocery.wms_categories_search_titles_testing",
          "tanker_keyset_id": "testing_product_groups",
          "tanker_project_id": "lavka-ma"
        },
        "wms_categories_synonyms_production": {
          "mongo_collection_name": "localization.grocery.wms_categories_synonyms_production",
          "tanker_keyset_id": "production_product_groups_synonyms",
          "tanker_project_id": "lavka-ma"
        },
        "wms_categories_synonyms_testing": {
          "mongo_collection_name": "localization.grocery.wms_categories_synonyms_testing",
          "tanker_keyset_id": "testing_product_groups_synonyms",
          "tanker_project_id": "lavka-ma"
        },
        "wms_categories_testing": {
          "mongo_collection_name": "localization.grocery.wms_categories_testing",
          "tanker_keyset_id": "testing_product_groups",
          "tanker_project_id": "lavka-ma"
        },
        "wms_companies": {
          "mongo_collection_name": "localization.grocery.wms_companies",
          "tanker_keyset_id": "wms_companies",
          "tanker_project_id": "yandex_lavka"
        },
        "wms_items": {
          "mongo_collection_name": "localization.grocery.wms_items",
          "tanker_keyset_id": "wms_items",
          "tanker_project_id": "yandex_lavka"
        },
        "wms_products_description_production": {
          "mongo_collection_name": "localization.grocery.wms_products_description_production",
          "tanker_keyset_id": "wms_products_description_testing",
          "tanker_project_id": "lavka-ma"
        },
        "wms_products_description_testing": {
          "mongo_collection_name": "localization.grocery.wms_products_description_testing",
          "tanker_keyset_id": "wms_products_description_testing",
          "tanker_project_id": "lavka-ma"
        },
        "wms_products_ingredients_production": {
          "mongo_collection_name": "localization.grocery.wms_products_ingredients_production",
          "tanker_keyset_id": "wms_products_ingredients_production",
          "tanker_project_id": "lavka-ma"
        },
        "wms_products_ingredients_testing": {
          "mongo_collection_name": "localization.grocery.wms_products_ingredients_testing",
          "tanker_keyset_id": "wms_products_ingredients_testing",
          "tanker_project_id": "lavka-ma"
        },
        "wms_products_long_title_production": {
          "mongo_collection_name": "localization.grocery.wms_products_long_title_production",
          "tanker_keyset_id": "wms_products_long_title_production",
          "tanker_project_id": "lavka-ma"
        },
        "wms_products_long_title_testing": {
          "mongo_collection_name": "localization.grocery.wms_products_long_title_testing",
          "tanker_keyset_id": "wms_products_long_title_testing",
          "tanker_project_id": "lavka-ma"
        },
        "wms_products_production": {
          "mongo_collection_name": "localization.grocery.wms_products_production",
          "tanker_keyset_id": "production_products",
          "tanker_project_id": "lavka-ma"
        },
        "wms_products_synonyms_production": {
          "mongo_collection_name": "localization.grocery.wms_products_synonyms_production",
          "tanker_keyset_id": "production_products_synonyms",
          "tanker_project_id": "lavka-ma"
        },
        "wms_products_synonyms_testing": {
          "mongo_collection_name": "localization.grocery.wms_products_synonyms_testing",
          "tanker_keyset_id": "testing_products_synonyms",
          "tanker_project_id": "lavka-ma"
        },
        "wms_products_testing": {
          "mongo_collection_name": "localization.grocery.wms_products_testing",
          "tanker_keyset_id": "testing_products",
          "tanker_project_id": "lavka-ma"
        },
        "wms_products_title_production": {
          "mongo_collection_name": "localization.grocery.wms_products_title_production",
          "tanker_keyset_id": "wms_products_title_production",
          "tanker_project_id": "lavka-ma"
        },
        "wms_products_title_testing": {
          "mongo_collection_name": "localization.grocery.wms_products_title_testing",
          "tanker_keyset_id": "wms_products_title_testing",
          "tanker_project_id": "lavka-ma"
        },
        "zendesk_forms": {
          "mongo_collection_name": "localization.taxi.zendesk_forms",
          "tanker_keyset_id": "backend.zendesk_forms",
          "tanker_project_id": "taxi"
        }
      }
    }
  },
  {
    "_id": "USER_API_USE_USER_PHONES_RETRIEVAL_PY3",
    "v": true
  },
  {
    "_id": "LOGS_ELASTIC_HOSTS",
    "v": [
      "http://taxi-elastic-logs.taxi.yandex.net:9200"
    ]
  },
  {
    "_id": "DRIVER_MODE_TYPES",
    "v": {
      "orders": "orders"
    }
  },
  {
    "_id": "DRIVER_MODE_SUBSCRIPTION_DEFAULT_MODE",
    "v": {
      "default_mode": "orders"
    }
  },
  {
    "_id": "CARS_CATALOG_CONSUMERS_CACHE_DUMPING_POLICY",
    "v": {
      "__default__": {
        "dumping_enabled": true,
        "initialize_cache_by_dump_limit_ms": 6000,
        "initialize_cache_by_server_limit_ms": 6000,
        "interval_ms": 10000,
        "number_of_keeping_dumps": 2,
        "path": "/tmp/cache/"
      }
    }
  },
  {
    "_id": "ADMIN_SECTIONS_SETTINGS",
    "v": {
      "default_settings": {
        "bug_form_settings": {
          "answer_url_id": "answer_url_19195",
          "url": "https://forms.yandex-team.ru/surveys/2682/"
        }
      },
      "responsibles": [
        {
          "data": {
            "developers": [
              {
                "dev_url": "https://staff.yandex-team.ru/departments/yandex_rkub_taxi_marketing_6154_dep79096/",
                "name": "Это костыль для обхода бага. Удалите этот конфиг после мержа и раскатки ПР https://github.yandex-team.ru/taxi/tariff-editor/pull/2858"
              }
            ],
            "managers": [
              "dmkurilov"
            ]
          },
          "id": "hiring_billing"
        }
      ],
      "sections": [
        {
          "name": "Биллинг Найма",
          "path": "/hiring-billing",
          "responsibleId": "hiring_billing"
        }
      ]
    }
  },
  {
    "_id": "CRON_TASK_ENABLED",
    "v": true
  },
  {
    "_id": "TASK_SCHEDULER",
    "v": {
      "large_task_start_time": "00:00:00",
      "small_task_interval": 120
    }
  },
  {
    "_id": "DRIVER_ORDERS_APP_API_CACHE_CONFIG",
    "v": {
      "fleet-parks-cache": {
        "lifetime-ms": 3600000,
        "size": 100000
      },
      "shard-info-cache": {
        "lifetime-ms": 3600000,
        "size": 100000
      }
    }
  },
  {
    "_id": "HTTP_CLIENTS",
    "v": {
      "__default__": {
        "retries": 2,
        "timeout": 10000
      },
      "geoareas": {
        "retries": 2,
        "timeout": 10000
      }
    }
  },
  {
    "_id": "GEOAREAS_CLIENT_QOS",
    "v": {
      "__default__": {
        "attempts": 2,
        "timeout-ms": 10000
      }
    }
  },
  {
    "_id": "TARIFFS_CLIENT_QOS",
    "v": {
      "__default__": {
        "attempts": 2,
        "timeout-ms": 10000
      }
    }
  },
  {
    "_id": "EATS_CART_CLIENT_QOS",
    "v": {
      "__default__": {
        "attempts": 1,
        "timeout-ms": 60000
      }
    }
  },
  {
    "_id": "EATS_PICKER_ORDERS_CLIENT_QOS",
    "v": {
      "__default__": {
        "attempts": 2,
        "timeout-ms": 100000
      }
    }
  },
  {
    "_id": "CANDIDATES_SELF_DIAGNOSTICS",
    "description": "disable self-diagnostic by min total",
    "v": {
      "filter_factory_min_total": 1000000000,
      "filter_lock_duration_sec": 1800,
      "filter_min_total": 1000000000
    }
  },
  {
    "_id": "CANDIDATES_SKIP_CATEGORIES_DUMP_LOAD",
    "v": true
  },
  {
    "_id": "PROTOCOL_USE_SURGE_CALCULATOR",
    "v": true
  },
  {
    "_id": "CHANGEDESTINATIONS_EVENTS_ENABLED",
    "v": true
  },
  {
    "_id": "SURGE_MAP_USE_HEATMAP_STORAGE",
    "v": true
  },
  {
    "_id": "DRIVER_STATUS_ENABLE_EVENT_LISTENERS",
    "v": {
      "__default__": true,
      "contractor-push-sender": false,
      "yt-statuses-logger": false
    }
  },
  {
    "_id": "DRIVER_STATUS_USE_IN_DRIVER_PROTOCOL",
    "v": {
      "parks": [],
      "status_cache_enabled": true,
      "status_fetch_limit": 100000,
      "use_parks_from_config": false
    }
  },
  {
    "_id": "DRIVER_STATUS_WORKER_TTL_CLEANER",
    "v": {
      "__default__": {
        "batch_size": 1000,
        "ttl_hours": 1
      }
    }
  },
  {
    "_id": "DRIVER_STATUS_WORKER_DRIVERS_CHECKER",
    "v": {
      "__default__": {
        "batch_size": 1000,
        "batches_count": 10,
        "client_request_size": 30,
        "enabled": true,
        "older_than_sec": 900,
        "parallel_requests": 8
      }
    }
  },
  {
    "_id": "DRIVER_STATUS_REDIS_SENDERS_SETTINGS",
    "v": {
      "__default__": {
        "parallel_requests": 8
      }
    }
  },
  {
    "_id": "DRIVER_AUTHPROXY_ROUTE_RULES",
    "v": [
      {
        "input": {
          "http-path-prefix": "/v2/status/client"
        },
        "output": {
          "attempts": 2,
          "timeout-ms": 1000,
          "tvm-service": "driver-status",
          "upstream": "http://driver-status.taxi.yandex.net"
        },
        "proxy": {
          "proxy-401": false,
          "server-hosts": [
            "*"
          ]
        }
      },
      {
        "input": {
          "http-path-prefix": "/driver/polling/order"
        },
        "output": {
          "attempts": 2,
          "timeout-ms": 1000,
          "tvm-service": "contractor-orders-polling",
          "upstream": "http://contractor-orders-polling.taxi.yandex.net/driver/v1"
        },
        "proxy": {
          "proxy-401": false,
          "server-hosts": [
            "*"
          ]
        }
      },
      {
        "input": {
          "http-path-prefix": "/v1/seen"
        },
        "output": {
          "attempts": 2,
          "timeout-ms": 5000,
          "tvm-service": "driver-orders-app-api",
          "upstream": "http://driver-orders-app-api.taxi.yandex.net"
        },
        "proxy": {
          "proxy-401": false,
          "server-hosts": [
            "*"
          ]
        }
      },
      {
        "input": {
          "http-path-prefix": "/v1/route-points"
        },
        "output": {
          "attempts": 2,
          "timeout-ms": 5000,
          "tvm-service": "driver-orders-app-api",
          "upstream": "http://driver-orders-app-api.taxi.yandex.net"
        },
        "proxy": {
          "proxy-401": false,
          "server-hosts": [
            "*"
          ]
        }
      },
      {
        "input": {
          "http-path-prefix": "/driver/v1/orders-app-api/"
        },
        "output": {
          "attempts": 2,
          "timeout-ms": 5000,
          "tvm-service": "driver-orders-app-api",
          "upstream": "http://driver-orders-app-api.taxi.yandex.net"
        },
        "proxy": {
          "proxy-401": false,
          "server-hosts": [
            "*"
          ]
        }
      },
      {
        "input": {
          "http-path-prefix": "/driver/messages"
        },
        "output": {
          "attempts": 1,
          "timeout-ms": 100,
          "tvm-service": "driver_protocol",
          "upstream": "http://driver-protocol.taxi.yandex.net"
        },
        "proxy": {
          "proxy-401": false,
          "server-hosts": [
            "*"
          ]
        }
      },
      {
        "input": {
          "http-path-prefix": "/driver/v1/cargo-claims/v1/cargo/exchange"
        },
        "output": {
          "attempts": 1,
          "timeout-ms": 1500,
          "tvm-service": "api-proxy",
          "upstream": "http://api-proxy.taxi.yandex.net"
        },
        "proxy": {
          "proxy-401": false,
          "server-hosts": [
            "*"
          ]
        }
      },
      {
        "input": {
          "http-path-prefix": "/driver/v1/cargo-claims/v1/cargo/state"
        },
        "output": {
          "attempts": 1,
          "timeout-ms": 1500,
          "tvm-service": "api-proxy",
          "upstream": "http://api-proxy.taxi.yandex.net"
        },
        "proxy": {
          "proxy-401": false,
          "server-hosts": [
            "*"
          ]
        }
      }
    ]
  },
  {
    "_id": "PROCESSING_EXTERNAL_SEND_EVENT",
    "v": {
      "__default__": 100
    }
  },
  {
    "_id": "PERSONAL_WALLET_FIRM_BY_SERVICE",
    "v": {
      "afisha": {
        "RUB": "121"
      },
      "drive": {
        "RUB": "30"
      },
      "eats": {
        "RUB": "32"
      },
      "fuel": {
        "RUB": "124"
      },
      "grocery": {
        "RUB": "32"
      },
      "kinopoisk": {
        "RUB": "9"
      },
      "market": {
        "RUB": "111"
      },
      "music": {
        "RUB": "1"
      },
      "restaurants": {
        "RUB": "32"
      },
      "yataxi": {
        "RUB": "13"
      }
    }
  },
  {
    "_id": "PASS_AUTH_MANAGER_PROXIES",
    "v": [
      "passenger-authorizer"
    ]
  },
  {
    "_id": "TAXIMETER_QC_SETTINGS",
    "v": {
      "car_modification_dkk": true,
      "dkk_period_in_days": 10,
      "ready_gap_in_hours": 20,
      "selfemployed_copy_enabled": true,
      "selfemployed_copy_timeout_min": 15,
      "sync_mode": "off"
    }
  },
  {
    "_id": "BACKEND_PY3_SERVICES_HTTP_PROXY",
    "v": {
      "envoy-exp-bravo": "http://localhost:81"
    }
  },
  {
    "_id": "LOOKUP_OLD_EXPERIMENTS",
    "v": {
      "enabled": true,
      "names": []
    }
  },
  {
    "_id": "CARGO_CLAIMS_MANUAL_DISPATCHER_SETTINGS",
    "v": {
      "dispatch_period": 15,
      "enabled": true,
      "limit": 50
    }
  }
]
