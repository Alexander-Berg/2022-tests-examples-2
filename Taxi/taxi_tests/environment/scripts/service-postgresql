#!/bin/bash

. $(dirname $0)/lib/utils.sh
. $(dirname $0)/lib/find-pg.sh

if [ "x$POSTGRESQL_CONFIGS_DIR" = "x" ]; then
    die "POSTGRESQL_CONFIGS_DIR must be set"
fi
if [ "x$POSTGRESQL_PORT" = "x" ]; then
    die "POSTGRESQL_PORT must be set"
fi

POSTGRESQL_SCHEMAS=$TAXI_TESTSUITE_DIR/configs/postgresql

POSTGRESQL_TMPDIR=$TESTSUITE_TMPDIR/postgresql/${WORKER_SUFFIX}
POSTGRESQL_LOGSDIR=$POSTGRESQL_TMPDIR/logs
POSTGRESQL_SOCKETDIR=/tmp/testsuite-postgresql/${WORKER_SUFFIX}

# Use ramdisk for postgresql if available
RAMDISK=/mnt/ramdisk/$USER
if mkdir -p $RAMDISK 2> /dev/null; then
    POSTGRESQL_DATADIR=$RAMDISK/_postgresql/${WORKER_SUFFIX}/data
else
    POSTGRESQL_DATADIR=$POSTGRESQL_TMPDIR/data
fi

mkdir -p $POSTGRESQL_DATADIR

start() {
    stop 2>/dev/null >&2
    echo "Starting PostgreSQL..."

    mkdir -p $POSTGRESQL_TMPDIR
    mkdir -p $POSTGRESQL_LOGSDIR
    mkdir -p $POSTGRESQL_SOCKETDIR

    set -e
    $POSTGRESQL_BINPATH/initdb \
        --locale=en_US.UTF-8 \
        --lc-collate=C \
        -U testsuite \
        -D $POSTGRESQL_DATADIR
    cp $POSTGRESQL_CONFIGS_DIR/*.conf $POSTGRESQL_DATADIR
    $POSTGRESQL_BINPATH/pg_ctl \
        -s -D $POSTGRESQL_DATADIR -w start \
        -o "-c port=$POSTGRESQL_PORT" \
        -o "-c unix_socket_directories=$POSTGRESQL_SOCKETDIR" \
        -o "-c log_directory=$POSTGRESQL_LOGSDIR"

    for SQL_SCHEMA in $POSTGRESQL_SCHEMAS/*.sql; do
        if [ -f "$SQL_SCHEMA" ]; then
            echo "Loading sql schema $SQL_SCHEMA..."
            $POSTGRESQL_BINPATH/psql -q \
                -h $POSTGRESQL_SOCKETDIR -p $POSTGRESQL_PORT \
                -U testsuite -f $SQL_SCHEMA postgres
        fi
    done
}

stop() {
    $POSTGRESQL_BINPATH/pg_ctl -s -D $POSTGRESQL_DATADIR \
                               -m immediate stop 2> /dev/null >&2
    rm -rf $POSTGRESQL_DATADIR $POSTGRESQL_SOCKETDIR
}

script_main "$@"
