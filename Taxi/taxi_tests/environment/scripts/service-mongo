#!/bin/bash

. $(dirname $0)/lib/utils.sh

MONGO=$(which mongo)
MONGOD=$(which mongod)
MONGOS=$(which mongos)

if [ "x$MONGO" = "x" ]; then
    die "No mongo binary found"
fi
if [ "x$MONGOD" = "x" ]; then
    die "No mongod binary found"
fi
if [ "x$MONGOS" = "x" ]; then
    die "No mongos binary found"
fi
if [ "x$MONGOS_PORT" = "x" ]; then
    die "MONGOS_PORT must be set"
fi
if [ "x$CONFIG_SERVER_PORT" = "x" ]; then
    die "CONFIG_SERVER_PORT must be set"
fi
if [ "x$SHARD_PORT" = "x" ]; then
    die "SHARD_PORT must be set"
fi


# Use ramdisk for mongo if available
RAMDISK=/mnt/ramdisk/$USER
if mkdir -p $RAMDISK 2> /dev/null; then
    MONGO_TMPDIR=$RAMDISK/_mongo/${WORKER_SUFFIX}
else
    MONGO_TMPDIR=$TESTSUITE_TMPDIR/mongo/${WORKER_SUFFIX}
fi

MONGO_SHARD0_DIR=$MONGO_TMPDIR/taxi-shrd0
MONGOS_DIR=$MONGO_TMPDIR/taxi-mongos
CONFIG_SERVER_DIR=$MONGO_TMPDIR/taxi-cfg

MONGO_SHARD0_PID_FILE="$(get_pidfile taxi-shrd0/mongo-shard)"
MONGOS_PID_FILE="$(get_pidfile taxi-mongos/mongos)"
CONFIG_SERVER_PID_FILE="$(get_pidfile taxi-cfg/mongo-cfg)"

MONGOD_CONFIG_SERVER_LOG_FILE=$CONFIG_SERVER_DIR/mongo-cfg.log
MONGOD_CONFIG_SERVER_ARGS="--configsvr --ipv6 --port $CONFIG_SERVER_PORT
            --replSet crs0 --dbpath $CONFIG_SERVER_DIR --fork
            --pidfilepath $CONFIG_SERVER_PID_FILE
            --logpath $MONGOD_CONFIG_SERVER_LOG_FILE"

MONGO_REPLICA_SET_INIT_ARGS=""

MONGOD_SHARD_SERVER_LOG_FILE=$MONGO_SHARD0_DIR/mongod-shrd.log
MONGOD_SHARD_SERVER_ARGS="--shardsvr --ipv6 --port $SHARD_PORT
            --dbpath $MONGO_SHARD0_DIR --fork
            --pidfilepath $MONGO_SHARD0_PID_FILE
            --logpath $MONGOD_SHARD_SERVER_LOG_FILE"

MONGOS_LOG_FILE=$MONGOS_DIR/mongos.log
MONGOS_ARGS="--configdb crs0/localhost:$CONFIG_SERVER_PORT
            --ipv6 --port $MONGOS_PORT
            --fork --pidfilepath $MONGOS_PID_FILE
            --logpath $MONGOS_LOG_FILE"


start_sharded_cluster() {
    mkdir -p $MONGO_SHARD0_DIR
    mkdir -p $MONGOS_DIR
    mkdir -p $CONFIG_SERVER_DIR

    echo "Starting sharded cluster's config server at $CONFIG_SERVER_DIR..."
    $MONGOD $MONGOD_CONFIG_SERVER_ARGS || {
        print_log $MONGOD_CONFIG_SERVER_LOG_FILE
        exit 1
    }

    sleep 1

    echo "Initiating a replica set..."
    $MONGO --port $CONFIG_SERVER_PORT --eval 'rs.initiate({_id: "crs0", configsvr: true, members: [{_id: 0, host: "localhost:'"$CONFIG_SERVER_PORT"'"}]})'

    echo "Starting shard at $MONGO_SHARD0_DIR..."
    $MONGOD $MONGOD_SHARD_SERVER_ARGS || {
        print_log $MONGOD_SHARD_SERVER_LOG_FILE
        exit 1
    }

    echo "Starting mongos..."
    $MONGOS $MONGOS_ARGS || {
        print_log $MONGOS_LOG_FILE
        exit 1
    }

    echo "Adding shard..."
    $MONGO --port $MONGOS_PORT --eval 'sh.addShard("localhost:'"$SHARD_PORT"'")'
}

start() {
    stop 2>/dev/null >&2
    (ulimit_files && start_sharded_cluster)
}

stop() {
    stop_daemon $MONGOD $CONFIG_SERVER_PID_FILE
    stop_daemon $MONGOD $MONGO_SHARD0_PID_FILE
    stop_daemon $MONGOS $MONGOS_PID_FILE
    rm -rf $MONGO_TMPDIR
}

print_log() {
    local logfile=$1
    if [ -f $logfile ]; then
        echo "Log output from $logfile:"
        cat $logfile
    else
        echo "Log file not found at $logfile"
    fi
}

script_main "$@"
