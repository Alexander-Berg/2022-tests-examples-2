# pylint: disable=too-many-arguments,too-many-lines,protected-access
# pylint: disable=redefined-outer-name, too-many-locals
import datetime

import pytest

from taxi import discovery

from support_info.meta import meta as support_info_meta

NOW = datetime.datetime(2018, 6, 15, 12, 34)


@pytest.fixture
def mock_user_api(mockserver):
    @mockserver.json_handler('/user-api/user_phones/by_number/retrieve_bulk')
    def _mock_user_api(request):
        return {
            'items': [
                {
                    'id': '5b2cae5cb2682a976914c2a5',
                    'phone': 'some_user_phone',
                    'type': 'yandex',
                },
            ],
        }


@pytest.mark.now(NOW.isoformat())
@pytest.mark.config(
    SUPPORT_INFO_EXTERNAL_META_QUERIES=True,
    SUPPORT_INFO_META_USER_TAGS_CONDITIONS=[
        {'tag': 'some_tag_1', 'name': 'some_tag_name_1'},
        {'tag': 'some_tag_2', 'name': 'some_tag_name_2'},
        {'tag': 'some_tag_3', 'name': 'some_tag_name_3'},
        {'tag': 'some_tag_5', 'name': 'some_tag_name_5'},
        {
            'tag': 'some_tag_14_limit',
            'name': 'some_tag_14_limit',
            'day_limit': 14,
        },
    ],
    SUPPORT_INFO_META_DRIVER_TAGS_CONDITIONS=[
        {'tag': 'driver_tag_1', 'name': 'driver_tag_name_1'},
        {'tag': 'driver_tag_2', 'name': 'driver_tag_name_2'},
        {'tag': 'driver_tag_3', 'name': 'driver_tag_name_3'},
        {
            'tag': 'driver_tag_14_limit',
            'name': 'driver_tag_14_limit',
            'day_limit': 14,
        },
    ],
)
@pytest.mark.parametrize(
    [
        'use_chatterbox_tags',
        'data',
        'tags_data',
        'expected_result',
        'missing_result',
        'expected_chatterbox_request_calls',
        'expected_driver_tags_request_call',
        'expected_passenger_tags_request_call',
    ],
    [
        pytest.param(
            True,
            {
                'metadata': {
                    'order_id': 'order_id_1',
                    'user_phone': '+79250325273',
                },
            },
            {
                'tasks': [
                    {
                        'tags': ['some_tag_1'],
                        'created': '2019-11-13T15:00:00+0300',
                    },
                    {
                        'tags': ['some_tag_2', 'some_tag_3', 'some_tag_4'],
                        'created': '2019-11-13T15:00:00+0300',
                    },
                ],
            },
            {
                'some_tag_name_1': True,
                'some_tag_name_2': True,
                'some_tag_name_3': True,
                'some_tag_name_5': False,
            },
            {'some_tag_name_4'},
            True,
            None,
            None,
        ),
        pytest.param(
            True,
            {'metadata': {'order_id': 'order_id_1'}},
            None,
            {},
            {},
            False,
            None,
            None,
        ),
        pytest.param(
            True,
            {'metadata': {'order_id': 'order_id_1', 'driver_license': '123'}},
            {
                'tasks': [
                    {
                        'tags': ['driver_tag_1', 'driver_tag_2'],
                        'created': '2019-11-13T15:00:00+0300',
                    },
                    {
                        'tags': ['driver_tag_4'],
                        'created': '2018-11-13T15:00:00+0300',
                    },
                ],
            },
            {
                'driver_tag_name_1': True,
                'driver_tag_name_2': True,
                'driver_tag_name_3': False,
            },
            {},
            True,
            None,
            None,
        ),
        pytest.param(
            True,
            {'metadata': {'order_id': 'order_id_1', 'driver_license': '123'}},
            {
                'tasks': [
                    {
                        'tags': ['driver_tag_14_limit'],
                        'created': '2018-05-14T15:00:00+0300',
                    },
                    {
                        'tags': ['driver_tag_14_limit'],
                        'created': '2018-06-14T15:00:00+0300',
                    },
                ],
            },
            {'driver_tag_14_limit': True},
            {},
            True,
            None,
            None,
        ),
        pytest.param(
            True,
            {'metadata': {'order_id': 'order_id_1', 'driver_license': '123'}},
            {
                'tasks': [
                    {
                        'tags': ['driver_tag_14_limit'],
                        'created': '2018-05-14T15:00:00+0300',
                    },
                    {
                        'tags': ['driver_tag_14_limit'],
                        'created': '2018-04-14T15:00:00+0300',
                    },
                ],
            },
            {'driver_tag_14_limit': False},
            {},
            True,
            None,
            None,
        ),
        pytest.param(
            True,
            {
                'metadata': {
                    'order_id': 'order_id_1',
                    'user_phone': '+79250325273',
                },
            },
            {
                'tasks': [
                    {
                        'tags': ['some_tag_14_limit'],
                        'created': '2018-06-14T15:00:00+0300',
                    },
                ],
            },
            {'some_tag_14_limit': True},
            {},
            True,
            None,
            None,
        ),
        pytest.param(
            True,
            {
                'metadata': {
                    'order_id': 'order_id_1',
                    'user_phone': '+79250325273',
                },
            },
            {
                'tasks': [
                    {
                        'tags': ['some_tag_14_limit'],
                        'created': '2018-05-14T15:00:00+0300',
                    },
                ],
            },
            {'some_tag_14_limit': False},
            {},
            True,
            None,
            None,
        ),
        pytest.param(
            False,
            {
                'metadata': {
                    'order_id': 'order_id_1',
                    'user_phone': 'some_user_phone',
                },
            },
            {
                'entities': [
                    {
                        'id': '5b2cae5cb2682a976914c2a5',
                        'tags': [
                            'chatterbox_tag_some_tag_name_1',
                            'chatterbox_tag_some_tag_name_2',
                            'chatterbox_tag_some_tag_name_3',
                        ],
                    },
                ],
            },
            {
                'some_tag_name_1': True,
                'some_tag_name_2': True,
                'some_tag_name_3': True,
                'some_tag_name_5': False,
            },
            {'some_tag_name_4'},
            False,
            None,
            {
                'entities': [
                    {
                        'id': '5b2cae5cb2682a976914c2a5',
                        'type': 'user_phone_id',
                    },
                ],
            },
        ),
        pytest.param(
            False,
            {'metadata': {'order_id': 'order_id_1'}},
            None,
            {},
            {},
            False,
            None,
            None,
        ),
        pytest.param(
            False,
            {
                'metadata': {
                    'order_id': 'order_id_1',
                    'driver_license': 'driver_license',
                },
            },
            {
                'tags': [
                    'chatterbox_tag_driver_tag_name_1',
                    'chatterbox_tag_driver_tag_name_2',
                ],
            },
            {
                'driver_tag_name_1': True,
                'driver_tag_name_2': True,
                'driver_tag_name_3': False,
            },
            {},
            False,
            {'dbid': 'some_park_id', 'uuid': 'driver_uuid'},
            None,
        ),
        pytest.param(
            False,
            {'metadata': {'user_phone': None, 'driver_license': ''}},
            {'tags': []},
            {},
            {},
            False,
            None,
            None,
        ),
        pytest.param(
            False,
            {
                'metadata': {
                    'order_id': 'order_id_1',
                    'user_phone': '+79250325273',
                    'user_phone_id': '5b2cae5cb2682a976914c2a5',
                },
            },
            {
                'entities': [
                    {
                        'id': '5b2cae5cb2682a976914c2a5',
                        'tags': [
                            'chatterbox_tag_some_tag_name_1',
                            'chatterbox_tag_some_tag_name_2',
                            'chatterbox_tag_some_tag_name_3',
                        ],
                    },
                ],
            },
            {
                'some_tag_name_1': True,
                'some_tag_name_2': True,
                'some_tag_name_3': True,
            },
            {'some_tag_name_4', 'some_tag_name_5'},
            False,
            None,
            {
                'entities': [
                    {
                        'id': '5b2cae5cb2682a976914c2a5',
                        'type': 'user_phone_id',
                    },
                ],
            },
            marks=[
                pytest.mark.config(
                    SUPPORT_INFO_META_USER_TAGS_ONLY_TRUE={
                        'enabled': False,
                        'exclusions': ['some_tag_1', 'some_tag_5'],
                    },
                ),
            ],
        ),
        pytest.param(
            False,
            {
                'metadata': {
                    'order_id': 'order_id_1',
                    'user_phone': '+79250325273',
                    'user_phone_id': '5b2cae5cb2682a976914c2a5',
                },
            },
            {
                'entities': [
                    {
                        'id': '5b2cae5cb2682a976914c2a5',
                        'tags': [
                            'chatterbox_tag_some_tag_name_1',
                            'chatterbox_tag_some_tag_name_3',
                        ],
                    },
                ],
            },
            {'some_tag_name_1': True, 'some_tag_name_3': True},
            {'some_tag_name_2', 'some_tag_name_4', 'some_tag_name_5'},
            False,
            None,
            {
                'entities': [
                    {
                        'id': '5b2cae5cb2682a976914c2a5',
                        'type': 'user_phone_id',
                    },
                ],
            },
            marks=[
                pytest.mark.config(
                    SUPPORT_INFO_META_USER_TAGS_ONLY_TRUE={'enabled': True},
                ),
            ],
        ),
    ],
)
async def test_additional_meta_tags(
        support_info_client,
        support_info_app,
        patch_aiohttp_session,
        response_mock,
        mock_select_rows,
        mock_get_tags,
        mock_user_api,
        mock_get_user_phones,
        mock_personal,
        mock_support_tags,
        use_chatterbox_tags,
        data,
        tags_data,
        expected_result,
        missing_result,
        expected_chatterbox_request_calls,
        expected_driver_tags_request_call,
        expected_passenger_tags_request_call,
):
    support_info_app.config.SUPPORT_INFO_CHATTERBOX_TAGS_SEARCH = (
        use_chatterbox_tags
    )
    mocked_passenger_tags = mock_get_tags(tags_data, 'passenger-tags')
    mocked_driver_tags = mock_get_tags(tags_data, 'driver-tags')
    mock_support_tags({'tags': ['support_tag', 'other_tag']})

    chatterbox_url = discovery.find_service('chatterbox').url

    @patch_aiohttp_session(chatterbox_url, 'POST')
    def _patch_request(method, url, **kwargs):
        assert kwargs['json']['created_from'] == (
            NOW - datetime.timedelta(days=60)
        ).strftime('%Y-%m-%d')
        assert url == chatterbox_url + '/v1/tasks/search/'
        return response_mock(json=tags_data)

    metadata = data['metadata']
    await support_info_meta.get_tags(support_info_app, metadata)

    assert bool(_patch_request.calls) == expected_chatterbox_request_calls
    if expected_passenger_tags_request_call is None:
        assert not mocked_passenger_tags.has_calls
    else:
        passenger_tags_call = mocked_passenger_tags.next_call()
        assert (
            passenger_tags_call['request'].json
            == expected_passenger_tags_request_call
        )
    if expected_driver_tags_request_call is None:
        assert not mocked_driver_tags.has_calls
    else:
        tags_call = mocked_driver_tags.next_call()
        assert tags_call['request'].json == expected_driver_tags_request_call

    for tag in expected_result:
        assert metadata.get(tag) == expected_result[tag]
    for tag in missing_result:
        assert metadata.get(tag) is None


@pytest.mark.now('2018-06-15T12:34:00.111+03:00')
@pytest.mark.config(
    SUPPORT_INFO_EXTERNAL_META_QUERIES=True,
    SUPPORT_INFO_ACTION_META_FIELDS={
        'enabled': True,
        'hours_limit': 6,
        'get_refunds': True,
    },
)
@pytest.mark.parametrize(
    'exp_index_limit, exp_user_refund_count, exp_archive_orders_called',
    [
        (100, 2, 1),
        pytest.param(
            3,
            None,
            0,
            marks=pytest.mark.config(
                SUPPORT_INFO_ACTION_META_FIELDS={
                    'enabled': True,
                    'hours_limit': 6,
                    'get_refunds': True,
                    'refunds_max_rides': 3,
                },
            ),
        ),
    ],
)
@pytest.mark.parametrize(
    [
        'metadata',
        'mock_promocodes_data',
        'mock_order_data',
        'yt_index_data',
        'expected_result',
    ],
    [
        (
            {
                'yandex_uid': '777',
                'user_phone_id': '5c4581755d6935d93dd9f540',
                'park_driver_profile_id': 'park_driver_profile_id',
                'user_id': 'user_id',
            },
            {
                'promocodes': [
                    {'id': 1, 'created_at': '2018-06-15T11:34:00+00:00'},
                    {'id': 2, 'created_at': '2018-06-14T11:34:00+00:00'},
                    {'id': 3, 'created_at': '2018-06-15T10:00:00+00:00'},
                ],
            },
            {
                'items': [
                    {
                        'doc': {
                            'payment_tech': {
                                'history': [
                                    {
                                        'decision': 'refund',
                                        'created': (
                                            datetime.datetime(
                                                2018, 6, 15, 11, 34, 0,
                                            )
                                        ),
                                    },
                                ],
                            },
                        },
                    },
                    {
                        'doc': {
                            'payment_tech': {
                                'history': [
                                    {
                                        'decision': 'refund',
                                        'created': datetime.datetime(
                                            2018, 6, 14, 11, 34, 0,
                                        ),
                                    },
                                ],
                            },
                        },
                    },
                    {
                        'doc': {
                            'payment_tech': {
                                'history': [
                                    {
                                        'decision': 'refund',
                                        'created': datetime.datetime(
                                            2018, 6, 15, 10, 0, 0,
                                        ),
                                    },
                                ],
                            },
                        },
                    },
                ],
            },
            [
                (
                    {
                        'bson': False,
                        'query': {
                            'query_string': (
                                'id FROM %t '
                                'WHERE user_uid = %p AND created < %p '
                                'ORDER BY created ASC '
                                'LIMIT %p'
                            ),
                            'query_params': [
                                (
                                    '//home/taxi/unstable/replica/mongo/'
                                    'indexes/order_proc/user_uid_created'
                                ),
                                '777',
                                -1529033640,
                                100,
                            ],
                        },
                        'replication_rules': [
                            {'name': 'order_proc_user_uid_created_index'},
                        ],
                    },
                    [{'id': '1'}],
                ),
                (
                    {
                        'bson': False,
                        'query': {
                            'query_string': (
                                'id FROM %t '
                                'WHERE phone_id = %p AND created < %p '
                                'ORDER BY created ASC '
                                'LIMIT %p'
                            ),
                            'query_params': [
                                (
                                    '//home/taxi/unstable/replica/mongo/'
                                    'indexes/order_proc/phone_id_created'
                                ),
                                '5c4581755d6935d93dd9f540',
                                -1529033640,
                                100,
                            ],
                        },
                        'replication_rules': [
                            {'name': 'order_proc_phone_id_created_index'},
                        ],
                    },
                    [{'id': '2'}, {'id': '4'}],
                ),
            ],
            {
                'yandex_uid': '777',
                'park_driver_profile_id': 'park_driver_profile_id',
                'user_phone_id': '5c4581755d6935d93dd9f540',
                'user_id': 'user_id',
                'driver_promocodes_count': 2,
                'user_promocodes_count': 1,
            },
        ),
    ],
)
async def test_action_meta_fields(
        support_info_client,
        support_info_app,
        patch_aiohttp_session,
        mockserver,
        response_mock,
        mock_get_tags,
        mock_user_api,
        mock_get_user_phones,
        metadata,
        mock_promocodes_data,
        mock_order_data,
        expected_result,
        yt_index_data,
        exp_index_limit,
        exp_user_refund_count,
        exp_archive_orders_called,
):
    expected_result['user_refund_count'] = exp_user_refund_count
    for request_json, _ in yt_index_data:
        request_json['query']['query_params'][3] = exp_index_limit

    @mockserver.json_handler('/driver-promocodes/admin/v1/promocodes/list')
    async def _mock_driver_promocodes(request, *args, **kwargs):
        assert request.method == 'GET'
        return mockserver.make_response(json=mock_promocodes_data)

    archive_api_url = support_info_app.settings.ARCHIVE_API_URL

    @patch_aiohttp_session(archive_api_url + '/archive/orders', 'POST')
    def _archive_orders_mock(method, url, **kwargs):
        assert set(kwargs['json']['ids']) == {'1', '2', '4'}
        if mock_order_data:
            return response_mock(json=mock_order_data)
        return response_mock(status=404)

    @patch_aiohttp_session(archive_api_url + '/v1/yt/select_rows', 'POST')
    def _select_rows_mock(method, url, **kwargs):
        for request_json, response_items in yt_index_data:
            if request_json == kwargs['json']:
                return response_mock(
                    json={'source': 'source', 'items': response_items},
                )

        assert False, ('unexpected archive-api query', kwargs['json'])

        return None

    await support_info_meta.get_action_meta_fields(support_info_app, metadata)
    assert metadata == expected_result

    assert len(_select_rows_mock.calls) == 2
    assert len(_archive_orders_mock.calls) == exp_archive_orders_called


@pytest.mark.now(NOW.isoformat())
@pytest.mark.config(SUPPORT_INFO_EXTERNAL_META_QUERIES=True)
@pytest.mark.parametrize(
    ['metadata', 'mock_data', 'expected_result'],
    [
        (
            {
                'park_car_id': 'park_car_id',
                'park_driver_profile_id': 'park_driver_profile_id',
            },
            {
                'entities_by_id': [
                    {
                        'entity_id': 'park_driver_profile_id',
                        'entities': [
                            {
                                'object_id': 'object_id',
                                'revision': 'revision',
                                'data': {
                                    'type': 'driver',
                                    'id': 'park_driver_profile_id',
                                    'blocks': {'dkk': ['block_1'], 'dkvu': []},
                                },
                            },
                        ],
                    },
                    {
                        'entity_id': 'park_car_id',
                        'entities': [
                            {
                                'object_id': 'object_id',
                                'revision': 'revision',
                                'data': {
                                    'type': 'car',
                                    'id': 'park_car_id',
                                    'blocks': {
                                        'sts': [],
                                        'branding': ['block_4'],
                                    },
                                },
                            },
                        ],
                    },
                ],
            },
            {'branding': False, 'dkk': False, 'dkvu': True, 'sts': True},
        ),
        (
            {
                'park_car_id': 'park_car_id',
                'park_driver_profile_id': 'park_driver_profile_id',
            },
            {
                'entities_by_id': [
                    {
                        'entity_id': 'park_driver_profile_id',
                        'entities': [
                            {
                                'data': {
                                    'blocks': {
                                        'biometry': ['orders_off'],
                                        'dkk': ['orders_off'],
                                    },
                                    'id': 'park_driver_profile_id',
                                    'type': 'driver',
                                },
                            },
                        ],
                    },
                ],
            },
            {'biometry': False, 'dkk': False},
        ),
    ],
)
async def test_qc_cpp_service(
        support_info_client,
        support_info_app,
        patch_aiohttp_session,
        response_mock,
        mock_select_rows,
        mock_get_tags,
        mock_user_api,
        mock_get_user_phones,
        metadata,
        mock_data,
        expected_result,
):
    qc_cpp_service = discovery.find_service('quality_control_cpp')

    @patch_aiohttp_session(qc_cpp_service.url, 'POST')
    def _patch_request(method, url, **kwargs):
        return response_mock(json=mock_data)

    result = await support_info_meta.get_qc_exams(
        support_info_app,
        metadata['park_car_id'],
        metadata['park_driver_profile_id'],
    )
    assert result == expected_result


@pytest.mark.now(NOW.isoformat())
@pytest.mark.config(SUPPORT_INFO_EXTERNAL_META_QUERIES=True)
@pytest.mark.parametrize(
    ['metadata', 'mock_data', 'expected_result'],
    [
        (
            {'alias_id': 'alias_id', 'begin_time': '2018-06-15T10:34:00+0000'},
            {
                'docs': [
                    {
                        'data': {
                            'support_info': {
                                'data': {
                                    'payout': {
                                        'net': {
                                            'value': {
                                                'amount': '37.6640',
                                                'currency': 'RUB',
                                            },
                                        },
                                    },
                                    'unfit_rules': [
                                        {
                                            'reasons': [
                                                {'data': {'code': 'geoarea'}},
                                            ],
                                        },
                                    ],
                                },
                            },
                        },
                    },
                ],
            },
            {'not_received_bonus': ['geoarea'], 'order_bonus': True},
        ),
        (
            {'alias_id': 'alias_id', 'begin_time': '2018-06-15T10:34:00+0000'},
            {
                'docs': [
                    {
                        'data': {
                            'support_info': {
                                'data': {
                                    'payout': {
                                        'net': {
                                            'value': {
                                                'amount': '0.0000',
                                                'currency': 'RUB',
                                            },
                                        },
                                    },
                                    'unfit_rules': [
                                        {
                                            'reasons': [
                                                {
                                                    'data': {
                                                        'code': (
                                                            'payment_level'
                                                        ),
                                                    },
                                                },
                                            ],
                                        },
                                    ],
                                },
                            },
                        },
                    },
                ],
            },
            {'not_received_bonus': ['payment_level'], 'order_bonus': False},
        ),
    ],
)
async def test_get_subventions(
        support_info_client,
        mockserver,
        support_info_app,
        patch_aiohttp_session,
        response_mock,
        mock_select_rows,
        mock_get_tags,
        mock_user_api,
        mock_get_user_phones,
        metadata,
        mock_data,
        expected_result,
):
    @mockserver.json_handler('/billing-reports/v1/docs/select')
    async def _mock_journal_select(request, *args, **kwargs):
        assert request.method == 'POST'
        return mockserver.make_response(json=mock_data)

    result = await support_info_meta.get_subventions(
        support_info_app, metadata['alias_id'], metadata['begin_time'],
    )
    assert result == expected_result


@pytest.mark.now(NOW.isoformat())
@pytest.mark.parametrize(
    ['url', 'headers'],
    [
        ('/v1/get_additional_meta', {'YaTaxi-Api-Key': 'api-key'}),
        ('/v1/enrich_meta', {}),
    ],
)
@pytest.mark.parametrize(
    [
        'support_tags_enabled',
        'data',
        'order_proc_data',
        'order_data',
        'expected_order_id',
        'expected_result',
    ],
    [
        (  # 0
            False,
            {'metadata': {'order_id': 'order_id_1'}},
            None,
            None,
            'order_id_1',
            {
                'metadata': {
                    'order_id': 'order_id_1',
                    'prom_on_order': False,
                    'is_maas_order': True,
                    'maas_subscription_applied': False,
                },
                'status': 'no_data',
            },
        ),
        (
            False,
            {
                'metadata': {
                    'order_id': 'order_id_1',
                    'user_phone': '+79250325273',
                },
            },
            {
                '_id': 'order_id_1',
                'order': {
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'user_id': 'user_id_1',
                    'nz': 'minsk',
                },
            },
            {
                '_id': 'order_id_1',
                'payment_tech': {
                    'user_to_pay': {'ride': 5000000, 'tips': 10000000},
                    'sum_to_pay': {'ride': 4000000, 'tips': 9000000},
                },
            },
            'order_id_1',
            {
                'metadata': {
                    'user_tag_name_1': True,
                    'user_tag_name_2': False,
                    'user_tag_name_3': False,
                    'baby_seat_services': False,
                    'billing_status': False,
                    'cancel_distance_raw': 0,
                    'cost_paid_supply': 0,
                    'country': 'blr',
                    'coupon': False,
                    'coupon_use_value': 0,
                    'coupon_used': False,
                    'created': '2018-06-15T12:34:00+0000',
                    'customer_complete_rides': 0,
                    'customer_phone_type': 'uber',
                    'customer_user_id': 'user_id_1',
                    'customer_user_phone': '+79250325273',
                    'customer_user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'dif_ordercost_surge_surgecharge': 0.0,
                    'door_to_door': False,
                    'driver_arrived': False,
                    'driver_late_time': 0.0,
                    'driver_waiting_time': 0,
                    'final_ride_duration': 0.0,
                    'fixed_price_order_flg': False,
                    'final_transaction_status': 'no_transactions_yet',
                    'is_compensation': False,
                    'is_refund': False,
                    'moved_to_cash_by_antifraud': False,
                    'order_cost': 0,
                    'order_currency': 'RUB',
                    'order_distance_raw': 0,
                    'order_id': 'order_id_1',
                    'order_pre_distance_raw': 0,
                    'order_pre_time_raw': 0,
                    'order_pre_time_raw_minutes': 0.0,
                    'order_tips': True,
                    'prom_on_order': False,
                    'success_order_flg': False,
                    'sum_to_pay_ride': 400,
                    'sum_to_pay_tips': 900,
                    'paid_cancel_tag': False,
                    'paid_supply': False,
                    'payment_decisions': False,
                    'payment_type_changed_to_cash': False,
                    'point_b_changed': False,
                    'refund_tips': 499.96,
                    'refund_tips_minus': 0.04,
                    'several_ride_transactions': False,
                    'surge_order_flg': False,
                    'tariff_currency': 'RUB',
                    'transportation_animals': False,
                    'user_phone': '+79250325273',
                    'user_to_pay_ride': 500,
                    'user_to_pay_tips': 1000,
                    'user_type': 'general',
                    'waiting': 'Нет',
                    'waiting_bool': False,
                    'waiting_cost': 0,
                    'waiting_time_raw': 0,
                    'waiting_time_raw_minutes': 0.0,
                    'zone': 'minsk',
                    'amount_cashback': 0,
                    'amount_charity': 0,
                    'multipoints': False,
                    'multiorder': False,
                    'time_request': 0.0,
                    'is_maas_order': True,
                    'maas_subscription_applied': False,
                },
                'status': 'ok',
            },
        ),
        (
            False,
            {
                'metadata': {
                    'order_alias_id': 'alias_id_1',
                    'user_phone': '+79250325273',
                },
            },
            {
                '_id': 'order_id_1',
                'order': {
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'user_id': 'user_id_1',
                },
                'aliases': [{'id': 'alias_id_1'}],
            },
            {
                '_id': 'order_id_1',
                'payment_tech': {
                    'user_to_pay': {'ride': 5000000, 'tips': 10000000},
                    'sum_to_pay': {'ride': 4000000, 'tips': 9000000},
                },
            },
            'alias_id_1',
            {
                'metadata': {
                    'user_tag_name_1': True,
                    'user_tag_name_2': False,
                    'user_tag_name_3': False,
                    'baby_seat_services': False,
                    'billing_status': False,
                    'cancel_distance_raw': 0,
                    'cost_paid_supply': 0,
                    'country': 'rus',
                    'coupon': False,
                    'coupon_use_value': 0,
                    'coupon_used': False,
                    'created': '2018-06-15T12:34:00+0000',
                    'customer_complete_rides': 0,
                    'customer_phone_type': 'uber',
                    'customer_user_id': 'user_id_1',
                    'customer_user_phone': '+79250325273',
                    'customer_user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'dif_ordercost_surge_surgecharge': 0.0,
                    'door_to_door': False,
                    'driver_arrived': False,
                    'driver_late_time': 0.0,
                    'driver_waiting_time': 0,
                    'final_ride_duration': 0.0,
                    'fixed_price_order_flg': False,
                    'final_transaction_status': 'no_transactions_yet',
                    'is_compensation': False,
                    'is_refund': False,
                    'moved_to_cash_by_antifraud': False,
                    'order_cost': 0,
                    'order_currency': 'RUB',
                    'order_distance_raw': 0,
                    'order_id': 'order_id_1',
                    'order_pre_distance_raw': 0,
                    'order_pre_time_raw': 0,
                    'order_pre_time_raw_minutes': 0.0,
                    'order_tips': True,
                    'prom_on_order': False,
                    'success_order_flg': False,
                    'sum_to_pay_ride': 400,
                    'sum_to_pay_tips': 900,
                    'paid_cancel_tag': False,
                    'paid_supply': False,
                    'payment_decisions': False,
                    'payment_type_changed_to_cash': False,
                    'point_b_changed': False,
                    'refund_tips': 499.0,
                    'refund_tips_minus': 1,
                    'several_ride_transactions': False,
                    'surge_order_flg': False,
                    'tariff_currency': 'RUB',
                    'transportation_animals': False,
                    'user_phone': '+79250325273',
                    'user_to_pay_ride': 500,
                    'user_to_pay_tips': 1000,
                    'user_type': 'general',
                    'waiting': 'Нет',
                    'waiting_bool': False,
                    'waiting_cost': 0,
                    'waiting_time_raw': 0,
                    'waiting_time_raw_minutes': 0.0,
                    'amount_cashback': 0,
                    'amount_charity': 0,
                    'multipoints': False,
                    'multiorder': False,
                    'time_request': 0.0,
                    'is_maas_order': True,
                    'maas_subscription_applied': False,
                },
                'status': 'ok',
            },
        ),
        (
            False,
            {
                'metadata': {
                    'order_id': 'alias_id_1',
                    'user_phone': '+79250325273',
                },
            },
            {
                '_id': 'order_id_1',
                'order': {
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'user_id': 'user_id_1',
                },
                'aliases': [{'id': 'alias_id_1'}],
            },
            {
                '_id': 'order_id_1',
                'payment_tech': {
                    'user_to_pay': {'ride': 5000000, 'tips': 10000000},
                    'sum_to_pay': {'ride': 4000000, 'tips': 9000000},
                },
            },
            'alias_id_1',
            {
                'metadata': {
                    'user_tag_name_1': True,
                    'user_tag_name_2': False,
                    'user_tag_name_3': False,
                    'baby_seat_services': False,
                    'billing_status': False,
                    'cancel_distance_raw': 0,
                    'cost_paid_supply': 0,
                    'country': 'rus',
                    'coupon': False,
                    'coupon_use_value': 0,
                    'coupon_used': False,
                    'created': '2018-06-15T12:34:00+0000',
                    'customer_complete_rides': 0,
                    'customer_phone_type': 'uber',
                    'customer_user_id': 'user_id_1',
                    'customer_user_phone': '+79250325273',
                    'customer_user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'dif_ordercost_surge_surgecharge': 0.0,
                    'door_to_door': False,
                    'driver_arrived': False,
                    'driver_late_time': 0.0,
                    'driver_waiting_time': 0,
                    'final_ride_duration': 0.0,
                    'fixed_price_order_flg': False,
                    'final_transaction_status': 'no_transactions_yet',
                    'is_compensation': False,
                    'is_refund': False,
                    'moved_to_cash_by_antifraud': False,
                    'order_cost': 0,
                    'order_currency': 'RUB',
                    'order_distance_raw': 0,
                    'order_id': 'order_id_1',
                    'order_pre_distance_raw': 0,
                    'order_pre_time_raw': 0,
                    'order_pre_time_raw_minutes': 0.0,
                    'order_tips': True,
                    'prom_on_order': False,
                    'success_order_flg': False,
                    'sum_to_pay_ride': 400,
                    'sum_to_pay_tips': 900,
                    'paid_cancel_tag': False,
                    'paid_supply': False,
                    'payment_decisions': False,
                    'payment_type_changed_to_cash': False,
                    'point_b_changed': False,
                    'refund_tips': 499.0,
                    'refund_tips_minus': 1,
                    'several_ride_transactions': False,
                    'surge_order_flg': False,
                    'tariff_currency': 'RUB',
                    'transportation_animals': False,
                    'user_phone': '+79250325273',
                    'user_to_pay_ride': 500,
                    'user_to_pay_tips': 1000,
                    'user_type': 'general',
                    'waiting': 'Нет',
                    'waiting_bool': False,
                    'waiting_cost': 0,
                    'waiting_time_raw': 0,
                    'waiting_time_raw_minutes': 0.0,
                    'amount_cashback': 0,
                    'amount_charity': 0,
                    'multipoints': False,
                    'multiorder': False,
                    'time_request': 0.0,
                    'is_maas_order': True,
                    'maas_subscription_applied': False,
                },
                'status': 'ok',
            },
        ),
        (
            False,
            {
                'metadata': {
                    'order_id': 'order_id',
                    'driver_license': 'driver_license',
                    'park_db_id': 'some_park_id',
                },
            },
            {
                '_id': 'order_id',
                'order': {
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'user_id': 'user_id1',
                    'user_locale': 'en',
                    'city': 'Москва',
                    'performer': {
                        'car_number': 'car_number',
                        'phone': ['+791234', '+75678'],
                        'clid': '100500',
                        'uuid': 'driver_uuid',
                        'db_id': 'some_park_id',
                        'taxi_alias': {'id': 'alias_id_1'},
                        'tariff': {'class': 'ultima'},
                    },
                    'coupon': {
                        'id': '123',
                        'was_used': True,
                        'valid': True,
                        'value': 10,
                    },
                    'cost': 100,
                    'nz': 'erevan',
                    'request': {'comment': 'precomment'},
                    'cashback_cost': 10.0,
                },
            },
            {
                '_id': 'order_id',
                'payment_tech': {
                    'type': 'corp',
                    'user_to_pay': {'ride': 1234567, 'tips': 0},
                    'sum_to_pay': {'ride': 7654321, 'tips': 0},
                },
            },
            'order_id',
            {
                'metadata': {
                    'user_tag_name_1': True,
                    'user_tag_name_2': False,
                    'user_tag_name_3': False,
                    'baby_seat_services': False,
                    'billing_status': False,
                    'driver_tag_name_1': True,
                    'driver_tag_name_2': False,
                    'cancel_distance_raw': 0,
                    'car_id': 'some_car_id',
                    'car_number': '123XYZ',
                    'city': 'москва',
                    'clid': '100500',
                    'cost_paid_supply': 0,
                    'country': 'arm',
                    'coupon': True,
                    'coupon_use_value': 10,
                    'coupon_used': True,
                    'created': '2018-06-15T12:34:00+0000',
                    'complete_rides': 0,
                    'phone_type': 'uber',
                    'user_id': 'user_id1',
                    'user_phone': '+79250325273',
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'dif_ordercost_surge_surgecharge': 0.0,
                    'difference_fact_coupon_and_cost': -90,
                    'discount_ya_plus': False,
                    'door_to_door': False,
                    'driver_arrived': False,
                    'driver_late_time': 0.0,
                    'driver_license': 'driver_license',
                    'driver_locale': 'ru',
                    'driver_phone': '+791234',
                    'driver_uuid': 'driver_uuid',
                    'driver_waiting_time': 0,
                    'final_ride_duration': 0.0,
                    'fixed_price_order_flg': False,
                    'final_transaction_status': 'no_transactions_yet',
                    'grade_branding': True,
                    'integration_event': True,
                    'is_compensation': False,
                    'is_refund': False,
                    'moved_to_cash_by_antifraud': False,
                    'order_alias_id': 'alias_id_1',
                    'order_cost': 90,
                    'order_currency': 'RUB',
                    'order_distance_raw': 0,
                    'order_id': 'order_id',
                    'order_pre_distance_raw': 0,
                    'order_pre_time_raw': 0,
                    'order_pre_time_raw_minutes': 0.0,
                    'order_tips': False,
                    'prom_on_order': False,
                    'success_order_flg': False,
                    'sum_to_pay_ride': 765.4321,
                    'sum_to_pay_tips': 0,
                    'paid_cancel_tag': False,
                    'paid_supply': False,
                    'park_driver_profile_id': 'some_park_id_driver_uuid',
                    'park_car_id': 'some_park_id_some_car_id',
                    'park_city': 'moscow',
                    'park_country': 'rus',
                    'park_db_id': 'some_park_id',
                    'park_name': 'park_name',
                    'park_phone': '+79123',
                    'payment_decisions': False,
                    'payment_type': 'corp',
                    'payment_type_changed_to_cash': False,
                    'point_b_changed': False,
                    'precomment': 'precomment',
                    'refund_tips': 122.4567,
                    'refund_tips_minus': 1,
                    'several_ride_transactions': False,
                    'status_loyalty': 'silver',
                    'surge_order_flg': False,
                    'tariff': 'ultima',
                    'tariff_currency': 'RUB',
                    'taximeter_version': '7.07',
                    'transportation_animals': False,
                    'unique_driver_id': 'some_unique_driver_id',
                    'user_locale': 'en',
                    'user_to_pay_ride': 123.4567,
                    'user_to_pay_tips': 0,
                    'user_type': 'corp',
                    'waiting': 'Нет',
                    'waiting_bool': False,
                    'waiting_cost': 0,
                    'waiting_time_raw': 0,
                    'waiting_time_raw_minutes': 0.0,
                    'yandex_provider': True,
                    'zone': 'erevan',
                    'performer_car_number': 'car_number',
                    'performer_clid': '100500',
                    'performer_driver_license': 'driver_license',
                    'performer_driver_locale': 'ru',
                    'performer_driver_phone': '+791234',
                    'performer_driver_uuid': 'driver_uuid',
                    'performer_park_city': 'moscow',
                    'performer_park_country': 'rus',
                    'performer_park_db_id': 'some_park_id',
                    'performer_park_driver_profile_id': (
                        'some_park_id_driver_uuid'
                    ),
                    'performer_park_name': 'park_name',
                    'performer_park_phone': '+79123',
                    'performer_taximeter_version': '7.07',
                    'performer_unique_driver_id': 'some_unique_driver_id',
                    'eats_courier_id': '59de5222293145d09d31cd1604f8f656',
                    'priority_list': {
                        'Дезинфекция машины': 2,
                        'Поездки с музыкой': 2,
                    },
                    'amount_cashback': 10.0,
                    'amount_charity': 15.0,
                    'multipoints': False,
                    'multiorder': False,
                    'order_disp_status': 'some_reason',
                    'time_request': 0.0,
                    'available_tariff': [
                        'econom',
                        'maybach',
                        'uberblack',
                        'uberx',
                    ],
                    'included_fare': ['econom', 'uberblack', 'uberx'],
                    'is_maas_order': True,
                    'maas_subscription_applied': False,
                    'maybach': ['Отключено парком'],
                    'block_reasons_checks_id': ['temp'],
                    'block_reasons_checks_items_title': ['Пройдите dkk'],
                },
                'status': 'ok',
            },
        ),
        (  # 5
            True,
            {
                'metadata': {
                    'order_id': 'order_id',
                    'driver_license': 'driver_license',
                    'park_db_id': 'some_park_id',
                },
            },
            {
                '_id': 'order_id',
                'order': {
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'user_id': 'user_id1',
                    'user_locale': 'en',
                    'city': 'Москва',
                    'performer': {
                        'car_number': 'car_number',
                        'phone': ['+791234', '+75678'],
                        'clid': '100500',
                        'uuid': 'driver_uuid',
                        'db_id': 'some_park_id',
                        'taxi_alias': {'id': 'alias_id_1'},
                        'tariff': {'class': 'ultima'},
                    },
                    'coupon': {
                        'id': '123',
                        'was_used': True,
                        'valid': True,
                        'value': 10,
                    },
                    'cost': 100,
                    'cashback_cost': 10.0,
                    'nz': 'erevan',
                    'request': {'comment': 'precomment'},
                },
            },
            {
                '_id': 'order_id',
                'payment_tech': {
                    'type': 'corp',
                    'user_to_pay': {'ride': 1234567, 'tips': 0},
                    'sum_to_pay': {'ride': 7654321, 'tips': 0},
                },
            },
            'order_id',
            {
                'metadata': {
                    'user_tag_name_1': True,
                    'user_tag_name_2': False,
                    'user_tag_name_3': True,
                    'baby_seat_services': False,
                    'billing_status': False,
                    'driver_tag_name_1': True,
                    'driver_tag_name_2': True,
                    'cancel_distance_raw': 0,
                    'car_id': 'some_car_id',
                    'car_number': '123XYZ',
                    'city': 'москва',
                    'clid': '100500',
                    'cost_paid_supply': 0,
                    'country': 'arm',
                    'coupon': True,
                    'coupon_use_value': 10,
                    'coupon_used': True,
                    'created': '2018-06-15T12:34:00+0000',
                    'complete_rides': 0,
                    'phone_type': 'uber',
                    'user_id': 'user_id1',
                    'user_phone': '+79250325273',
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'dif_ordercost_surge_surgecharge': 0.0,
                    'difference_fact_coupon_and_cost': -90,
                    'discount_ya_plus': False,
                    'door_to_door': False,
                    'driver_arrived': False,
                    'driver_late_time': 0.0,
                    'driver_license': 'driver_license',
                    'driver_locale': 'ru',
                    'driver_phone': '+791234',
                    'driver_uuid': 'driver_uuid',
                    'driver_waiting_time': 0,
                    'final_ride_duration': 0.0,
                    'fixed_price_order_flg': False,
                    'final_transaction_status': 'no_transactions_yet',
                    'grade_branding': True,
                    'integration_event': True,
                    'is_compensation': False,
                    'is_refund': False,
                    'moved_to_cash_by_antifraud': False,
                    'order_alias_id': 'alias_id_1',
                    'order_cost': 90,
                    'order_currency': 'RUB',
                    'order_distance_raw': 0,
                    'order_id': 'order_id',
                    'order_pre_distance_raw': 0,
                    'order_pre_time_raw': 0,
                    'order_pre_time_raw_minutes': 0.0,
                    'order_tips': False,
                    'prom_on_order': False,
                    'success_order_flg': False,
                    'sum_to_pay_ride': 765.4321,
                    'sum_to_pay_tips': 0,
                    'paid_cancel_tag': False,
                    'paid_supply': False,
                    'park_driver_profile_id': 'some_park_id_driver_uuid',
                    'park_car_id': 'some_park_id_some_car_id',
                    'park_city': 'moscow',
                    'park_country': 'rus',
                    'park_db_id': 'some_park_id',
                    'park_name': 'park_name',
                    'park_phone': '+79123',
                    'payment_decisions': False,
                    'payment_type': 'corp',
                    'payment_type_changed_to_cash': False,
                    'point_b_changed': False,
                    'precomment': 'precomment',
                    'refund_tips': 122.4567,
                    'refund_tips_minus': 1,
                    'several_ride_transactions': False,
                    'status_loyalty': 'silver',
                    'surge_order_flg': False,
                    'tariff': 'ultima',
                    'tariff_currency': 'RUB',
                    'taximeter_version': '7.07',
                    'transportation_animals': False,
                    'unique_driver_id': 'some_unique_driver_id',
                    'user_locale': 'en',
                    'user_to_pay_ride': 123.4567,
                    'user_to_pay_tips': 0,
                    'user_type': 'corp',
                    'waiting': 'Нет',
                    'waiting_bool': False,
                    'waiting_cost': 0,
                    'waiting_time_raw': 0,
                    'waiting_time_raw_minutes': 0.0,
                    'yandex_provider': True,
                    'zone': 'erevan',
                    'performer_car_number': 'car_number',
                    'performer_clid': '100500',
                    'performer_driver_license': 'driver_license',
                    'performer_driver_locale': 'ru',
                    'performer_driver_phone': '+791234',
                    'performer_driver_uuid': 'driver_uuid',
                    'performer_park_city': 'moscow',
                    'performer_park_country': 'rus',
                    'performer_park_db_id': 'some_park_id',
                    'performer_park_driver_profile_id': (
                        'some_park_id_driver_uuid'
                    ),
                    'performer_park_name': 'park_name',
                    'performer_park_phone': '+79123',
                    'performer_taximeter_version': '7.07',
                    'performer_unique_driver_id': 'some_unique_driver_id',
                    'eats_courier_id': '59de5222293145d09d31cd1604f8f656',
                    'priority_list': {
                        'Дезинфекция машины': 2,
                        'Поездки с музыкой': 2,
                    },
                    'amount_cashback': 10.0,
                    'amount_charity': 15.0,
                    'multipoints': False,
                    'multiorder': False,
                    'order_disp_status': 'some_reason',
                    'time_request': 0.0,
                    'available_tariff': [
                        'econom',
                        'maybach',
                        'uberblack',
                        'uberx',
                    ],
                    'included_fare': ['econom', 'uberblack', 'uberx'],
                    'is_maas_order': True,
                    'maas_subscription_applied': False,
                    'maybach': ['Отключено парком'],
                    'block_reasons_checks_id': ['temp'],
                    'block_reasons_checks_items_title': ['Пройдите dkk'],
                },
                'status': 'ok',
            },
        ),
        (
            False,
            {
                'suppress_conflict': True,
                'metadata': {
                    'order_id': 'order_id',
                    'driver_license': 'driver_license',
                    'user_phone': '+79099099009',
                    'park_db_id': 'some_park_id',
                },
            },
            {
                '_id': 'order_id',
                'order': {
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'user_id': 'user_id1',
                    'user_locale': 'en',
                    'city': 'Москва',
                    'performer': {
                        'car_number': 'car_number',
                        'phone': ['+791234', '+75678'],
                        'clid': '100500',
                        'uuid': 'driver_uuid',
                        'db_id': 'some_park_id',
                        'taxi_alias': {'id': 'alias_id_1'},
                        'tariff': {'class': 'ultima'},
                    },
                    'coupon': {
                        'id': '123',
                        'was_used': True,
                        'valid': True,
                        'value': 10,
                    },
                    'cost': 100,
                    'cashback_cost': 10.0,
                    'nz': 'erevan',
                    'request': {'comment': 'precomment'},
                },
            },
            {'_id': 'order_id', 'payment_tech': {'type': 'corp'}},
            'order_id',
            {
                'metadata': {
                    'baby_seat_services': False,
                    'user_tag_name_1': True,
                    'user_tag_name_2': False,
                    'user_tag_name_3': False,
                    'driver_tag_name_1': True,
                    'driver_tag_name_2': False,
                    'cancel_distance_raw': 0,
                    'car_id': 'some_car_id',
                    'car_number': '123XYZ',
                    'city': 'москва',
                    'clid': '100500',
                    'cost_paid_supply': 0,
                    'country': 'arm',
                    'coupon': True,
                    'coupon_use_value': 10,
                    'coupon_used': True,
                    'created': '2018-06-15T12:34:00+0000',
                    'customer_complete_rides': 0,
                    'customer_phone_type': 'uber',
                    'customer_user_id': 'user_id1',
                    'customer_user_phone': '+79250325273',
                    'customer_user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'dif_ordercost_surge_surgecharge': 0.0,
                    'difference_fact_coupon_and_cost': -90,
                    'discount_ya_plus': False,
                    'door_to_door': False,
                    'driver_arrived': False,
                    'driver_late_time': 0.0,
                    'driver_license': 'driver_license',
                    'driver_locale': 'ru',
                    'driver_phone': '+791234',
                    'driver_uuid': 'driver_uuid',
                    'driver_waiting_time': 0,
                    'final_ride_duration': 0.0,
                    'fixed_price_order_flg': False,
                    'final_transaction_status': 'no_transactions',
                    'grade_branding': True,
                    'integration_event': True,
                    'is_compensation': False,
                    'is_refund': False,
                    'moved_to_cash_by_antifraud': False,
                    'order_alias_id': 'alias_id_1',
                    'order_cost': 90,
                    'order_currency': 'RUB',
                    'order_distance_raw': 0,
                    'order_id': 'order_id',
                    'order_pre_distance_raw': 0,
                    'order_pre_time_raw': 0,
                    'order_pre_time_raw_minutes': 0.0,
                    'order_tips': False,
                    'prom_on_order': False,
                    'success_order_flg': False,
                    'paid_cancel_tag': False,
                    'paid_supply': False,
                    'park_car_id': 'some_park_id_some_car_id',
                    'park_city': 'moscow',
                    'park_country': 'rus',
                    'park_db_id': 'some_park_id',
                    'park_driver_profile_id': 'some_park_id_driver_uuid',
                    'park_name': 'park_name',
                    'park_phone': '+79123',
                    'payment_decisions': False,
                    'payment_type': 'corp',
                    'payment_type_changed_to_cash': False,
                    'point_b_changed': False,
                    'precomment': 'precomment',
                    'several_ride_transactions': False,
                    'status_loyalty': 'silver',
                    'surge_order_flg': False,
                    'tariff': 'ultima',
                    'tariff_currency': 'RUB',
                    'taximeter_version': '7.07',
                    'transportation_animals': False,
                    'unique_driver_id': 'some_unique_driver_id',
                    'user_locale': 'en',
                    'user_phone': '+79099099009',
                    'user_type': 'corp',
                    'waiting': 'Нет',
                    'waiting_bool': False,
                    'waiting_cost': 0,
                    'waiting_time_raw': 0,
                    'waiting_time_raw_minutes': 0.0,
                    'yandex_provider': True,
                    'zone': 'erevan',
                    'performer_car_number': 'car_number',
                    'performer_clid': '100500',
                    'performer_driver_license': 'driver_license',
                    'performer_driver_locale': 'ru',
                    'performer_driver_phone': '+791234',
                    'performer_driver_uuid': 'driver_uuid',
                    'performer_park_city': 'moscow',
                    'performer_park_country': 'rus',
                    'performer_park_db_id': 'some_park_id',
                    'performer_park_driver_profile_id': (
                        'some_park_id_driver_uuid'
                    ),
                    'performer_park_name': 'park_name',
                    'performer_park_phone': '+79123',
                    'performer_taximeter_version': '7.07',
                    'performer_unique_driver_id': 'some_unique_driver_id',
                    'eats_courier_id': '59de5222293145d09d31cd1604f8f656',
                    'priority_list': {
                        'Дезинфекция машины': 2,
                        'Поездки с музыкой': 2,
                    },
                    'time_request': 0.0,
                    'amount_cashback': 10.0,
                    'amount_charity': 15.0,
                    'multipoints': False,
                    'multiorder': False,
                    'order_disp_status': 'some_reason',
                    'available_tariff': [
                        'econom',
                        'maybach',
                        'uberblack',
                        'uberx',
                    ],
                    'included_fare': ['econom', 'uberblack', 'uberx'],
                    'is_maas_order': True,
                    'maas_subscription_applied': False,
                    'maybach': ['Отключено парком'],
                    'block_reasons_checks_id': ['temp'],
                    'block_reasons_checks_items_title': ['Пройдите dkk'],
                },
                'status': 'ok',
            },
        ),
        (
            False,
            {
                'metadata': {
                    'order_id': 'order_id_1',
                    'user_phone': '+79250325274',
                },
            },
            {
                '_id': 'order_id_1',
                'order': {
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'user_id': 'user_id_1',
                },
            },
            {},
            'order_id_1',
            {
                'metadata': {
                    'baby_seat_services': False,
                    'cancel_distance_raw': 0,
                    'cost_paid_supply': 0,
                    'country': 'rus',
                    'coupon': False,
                    'coupon_use_value': 0,
                    'coupon_used': False,
                    'created': '2018-06-15T12:34:00+0000',
                    'customer_complete_rides': 0,
                    'customer_phone_type': 'uber',
                    'customer_user_id': 'user_id_1',
                    'customer_user_phone': '+79250325273',
                    'customer_user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'dif_ordercost_surge_surgecharge': 0.0,
                    'door_to_door': False,
                    'driver_arrived': False,
                    'driver_late_time': 0.0,
                    'driver_waiting_time': 0,
                    'final_ride_duration': 0.0,
                    'final_transaction_status': 'no_transactions',
                    'fixed_price_order_flg': False,
                    'is_compensation': False,
                    'is_refund': False,
                    'moved_to_cash_by_antifraud': False,
                    'order_cost': 0,
                    'order_currency': 'RUB',
                    'order_distance_raw': 0,
                    'order_id': 'order_id_1',
                    'order_pre_distance_raw': 0,
                    'order_pre_time_raw': 0,
                    'order_pre_time_raw_minutes': 0.0,
                    'order_tips': False,
                    'paid_cancel_tag': False,
                    'paid_supply': False,
                    'payment_decisions': False,
                    'payment_type_changed_to_cash': False,
                    'point_b_changed': False,
                    'prom_on_order': False,
                    'several_ride_transactions': False,
                    'success_order_flg': False,
                    'surge_order_flg': False,
                    'tariff_currency': 'RUB',
                    'transportation_animals': False,
                    'user_phone': '+79250325274',
                    'user_tag_name_1': True,
                    'user_tag_name_2': False,
                    'user_tag_name_3': False,
                    'user_type': 'general',
                    'waiting': 'Нет',
                    'waiting_bool': False,
                    'waiting_cost': 0,
                    'waiting_time_raw': 0,
                    'waiting_time_raw_minutes': 0.0,
                    'amount_cashback': 0,
                    'amount_charity': 0,
                    'multipoints': False,
                    'multiorder': False,
                    'time_request': 0.0,
                    'is_maas_order': True,
                    'maas_subscription_applied': False,
                },
                'status': 'ok',
            },
        ),
        (
            False,
            {
                'metadata': {
                    'order_id': 'order_id',
                    'driver_license': 'driver_license_1',
                },
            },
            {
                '_id': 'order_id',
                'order': {
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'performer': {
                        'car_number': 'car_number',
                        'phone': ['+791234', '+75678'],
                        'clid': '100500',
                        'uuid': 'driver_uuid',
                        'db_id': 'some_park_id',
                        'taxi_alias': {'id': 'alias_id_1'},
                        'tariff': {'class': 'ultima'},
                    },
                    'cashback_cost': 10.0,
                },
            },
            {},
            'order_id',
            {
                'metadata': {
                    'user_tag_name_1': True,
                    'user_tag_name_2': False,
                    'user_tag_name_3': False,
                    'baby_seat_services': False,
                    'cancel_distance_raw': 0,
                    'cost_paid_supply': 0,
                    'country': 'rus',
                    'coupon': False,
                    'coupon_use_value': 0,
                    'coupon_used': False,
                    'created': '2018-06-15T12:34:00+0000',
                    'complete_rides': 0,
                    'phone_type': 'uber',
                    'user_phone': '+79250325273',
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'dif_ordercost_surge_surgecharge': 0.0,
                    'discount_ya_plus': False,
                    'door_to_door': False,
                    'driver_arrived': False,
                    'driver_late_time': 0.0,
                    'driver_license': 'driver_license_1',
                    'driver_tag_name_1': False,
                    'driver_tag_name_2': False,
                    'driver_waiting_time': 0,
                    'final_ride_duration': 0.0,
                    'final_transaction_status': 'no_transactions',
                    'fixed_price_order_flg': False,
                    'is_compensation': False,
                    'is_refund': False,
                    'moved_to_cash_by_antifraud': False,
                    'order_alias_id': 'alias_id_1',
                    'order_cost': 0,
                    'order_currency': 'RUB',
                    'order_distance_raw': 0,
                    'order_id': 'order_id',
                    'order_pre_distance_raw': 0,
                    'order_pre_time_raw': 0,
                    'order_pre_time_raw_minutes': 0.0,
                    'order_tips': False,
                    'paid_cancel_tag': False,
                    'paid_supply': False,
                    'payment_decisions': False,
                    'payment_type_changed_to_cash': False,
                    'performer_car_number': 'car_number',
                    'performer_clid': '100500',
                    'performer_driver_license': 'driver_license',
                    'performer_driver_locale': 'ru',
                    'performer_driver_phone': '+791234',
                    'performer_driver_uuid': 'driver_uuid',
                    'performer_park_city': 'moscow',
                    'performer_park_country': 'rus',
                    'performer_park_db_id': 'some_park_id',
                    'performer_park_driver_profile_id': (
                        'some_park_id_driver_uuid'
                    ),
                    'performer_park_name': 'park_name',
                    'performer_park_phone': '+79123',
                    'performer_taximeter_version': '7.07',
                    'performer_unique_driver_id': 'some_unique_driver_id',
                    'point_b_changed': False,
                    'prom_on_order': False,
                    'several_ride_transactions': False,
                    'success_order_flg': False,
                    'surge_order_flg': False,
                    'tariff': 'ultima',
                    'tariff_currency': 'RUB',
                    'transportation_animals': False,
                    'user_type': 'general',
                    'waiting': 'Нет',
                    'waiting_bool': False,
                    'waiting_cost': 0,
                    'waiting_time_raw': 0,
                    'waiting_time_raw_minutes': 0.0,
                    'eats_courier_id': '59de5222293145d09d31cd1604f8f656',
                    'amount_cashback': 10.0,
                    'amount_charity': 15.0,
                    'multipoints': False,
                    'multiorder': False,
                    'time_request': 0.0,
                    'is_maas_order': True,
                    'maas_subscription_applied': False,
                },
                'status': 'ok',
            },
        ),
        (
            False,
            {'metadata': {'user_phone': '+79250325273', 'phone_type': 'uber'}},
            None,
            None,
            None,
            {
                'metadata': {
                    'complete_rides': 0,
                    'phone_type': 'uber',
                    'user_phone': '+79250325273',
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'user_tag_name_1': True,
                    'user_tag_name_2': False,
                    'user_tag_name_3': False,
                },
                'status': 'ok',
            },
        ),
        (  # 10
            False,
            {'metadata': {'user_phone': '+79999999999', 'phone_type': 'uber'}},
            None,
            None,
            None,
            {
                'metadata': {
                    'complete_rides': 0,
                    'phone_type': 'uber',
                    'user_phone': '+79999999999',
                    'user_phone_id': '539eb65be7e5b1f53980dfab',
                    'user_tag_name_1': True,
                    'user_tag_name_2': False,
                    'user_tag_name_3': False,
                    'taxi_staff': True,
                },
                'status': 'ok',
            },
        ),
        (
            False,
            {
                'metadata': {
                    'user_phone': '+70000000000',
                    'phone_type': 'yandex',
                },
            },
            None,
            None,
            None,
            {
                'metadata': {
                    'complete_rides': 0,
                    'phone_type': 'yandex',
                    'user_phone': '+70000000000',
                    'user_phone_id': '539eb65be7e5b1f53980dfac',
                    'user_tag_name_1': True,
                    'user_tag_name_2': False,
                    'user_tag_name_3': False,
                    'taxi_staff': True,
                },
                'status': 'ok',
            },
        ),
        (
            False,
            {'metadata': {'driver_uuid': 'driver_uuid'}},
            None,
            None,
            None,
            {
                'metadata': {
                    'car_id': 'some_car_id',
                    'driver_tag_name_1': True,
                    'driver_tag_name_2': False,
                    'driver_uuid': 'driver_uuid',
                    'driver_locale': 'ru',
                    'unique_driver_id': 'some_unique_driver_id',
                    'taximeter_version': '7.07',
                    'driver_license': 'driver_license',
                    'driver_phone': '+791234',
                    'car_number': '123XYZ',
                    'clid': '100500',
                    'country': 'rus',
                    'park_car_id': 'some_park_id_some_car_id',
                    'park_city': 'moscow',
                    'park_country': 'rus',
                    'park_db_id': 'some_park_id',
                    'park_driver_profile_id': 'some_park_id_driver_uuid',
                    'park_name': 'park_name',
                    'park_phone': '+79123',
                    'grade_branding': True,
                    'integration_event': True,
                    'status_loyalty': 'silver',
                    'yandex_provider': True,
                    'eats_courier_id': '59de5222293145d09d31cd1604f8f656',
                    'available_tariff': [
                        'econom',
                        'maybach',
                        'uberblack',
                        'uberx',
                    ],
                    'included_fare': ['econom', 'uberblack', 'uberx'],
                    'maybach': ['Отключено парком'],
                    'block_reasons_checks_id': ['temp'],
                    'block_reasons_checks_items_title': ['Пройдите dkk'],
                    'priority_list': {
                        'Дезинфекция машины': 2,
                        'Поездки с музыкой': 2,
                    },
                },
                'status': 'ok',
            },
        ),
        (
            False,
            {
                'metadata': {
                    'user_phone': '+79250325273',
                    'phone_type': 'uber',
                },
                'use_last_order': True,
            },
            {
                '_id': 'some_order_id',
                'order': {
                    'user_phone_id': '000000000000000000000001',
                    'city': 'Moscow',
                    'user_id': 'some_user_id',
                    'user_locale': 'ru',
                },
            },
            {},
            'some_order_id',
            {
                'metadata': {
                    'user_tag_name_1': True,
                    'user_tag_name_2': False,
                    'user_tag_name_3': False,
                    'city': 'moscow',
                    'complete_rides': 0,
                    'country': 'rus',
                    'phone_type': 'uber',
                    'user_locale': 'ru',
                    'user_phone': '+79250325273',
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'service_childchair_in_city': True,
                },
                'status': 'ok',
            },
        ),
        (
            False,
            {
                'metadata': {
                    'user_phone': '+79250325273',
                    'phone_type': 'uber',
                },
                'use_last_order': True,
                'applications': ['iphone'],
            },
            {
                '_id': 'some_order_id',
                'order': {
                    'user_phone_id': '000000000000000000000001',
                    'city': 'Moscow',
                    'user_id': 'some_user_id',
                    'user_locale': 'ru',
                },
            },
            {},
            'some_order_id',
            {
                'metadata': {
                    'user_tag_name_1': True,
                    'user_tag_name_2': False,
                    'user_tag_name_3': False,
                    'city': 'moscow',
                    'complete_rides': 0,
                    'country': 'rus',
                    'phone_type': 'uber',
                    'user_locale': 'ru',
                    'user_phone': '+79250325273',
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'service_childchair_in_city': True,
                },
                'status': 'ok',
            },
        ),
        (  # 15
            False,
            {'metadata': {'order_id': 'order_id'}},
            {
                '_id': 'order_id',
                'order': {
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'user_id': 'user_id1',
                    'user_locale': 'en',
                    'cost': 10,
                    'fixed_price': {'price': 10},
                    'cashback_cost': 10.0,
                },
            },
            {'_id': 'order_id', 'payment_tech': {'type': 'corp'}},
            'order_id',
            {
                'metadata': {
                    'user_tag_name_1': True,
                    'user_tag_name_2': False,
                    'user_tag_name_3': False,
                    'prom_on_order': False,
                    'baby_seat_services': False,
                    'cancel_distance_raw': 0,
                    'cost_paid_supply': 0,
                    'country': 'rus',
                    'coupon': False,
                    'coupon_use_value': 0,
                    'coupon_used': False,
                    'created': '2018-06-15T12:34:00+0000',
                    'complete_rides': 0,
                    'phone_type': 'uber',
                    'user_id': 'user_id1',
                    'user_phone': '+79250325273',
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'dif_ordercost_surge_surgecharge': 0.0,
                    'difference_fact_estimated_cost': 0.0,
                    'door_to_door': False,
                    'driver_arrived': False,
                    'driver_late_time': 0.0,
                    'driver_waiting_time': 0,
                    'final_ride_duration': 0.0,
                    'fixed_price': 10,
                    'fixed_price_order_flg': True,
                    'final_transaction_status': 'no_transactions',
                    'is_compensation': False,
                    'is_refund': False,
                    'moved_to_cash_by_antifraud': False,
                    'order_cost': 10.0,
                    'order_currency': 'RUB',
                    'order_distance_raw': 0,
                    'order_id': 'order_id',
                    'order_pre_distance_raw': 0,
                    'order_pre_time_raw': 0,
                    'order_pre_time_raw_minutes': 0.0,
                    'order_tips': False,
                    'success_order_flg': False,
                    'paid_cancel_tag': False,
                    'paid_supply': False,
                    'payment_decisions': False,
                    'payment_type': 'corp',
                    'payment_type_changed_to_cash': False,
                    'point_b_changed': False,
                    'several_ride_transactions': False,
                    'surge_order_flg': False,
                    'tariff_currency': 'RUB',
                    'transportation_animals': False,
                    'user_locale': 'en',
                    'user_type': 'corp',
                    'waiting': 'Нет',
                    'waiting_bool': False,
                    'waiting_cost': 0,
                    'waiting_time_raw': 0,
                    'waiting_time_raw_minutes': 0.0,
                    'amount_cashback': 10.0,
                    'amount_charity': 15.0,
                    'multipoints': False,
                    'multiorder': False,
                    'time_request': 0.0,
                    'is_maas_order': True,
                    'maas_subscription_applied': False,
                },
                'status': 'ok',
            },
        ),
        (
            False,
            {'metadata': {'order_id': 'order_id'}},
            {
                '_id': 'order_id',
                'order': {
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'user_id': 'user_id1',
                    'user_locale': 'en',
                    'cost': 10,
                    'coupon': {
                        'id': '123',
                        'was_used': True,
                        'valid': True,
                        'value': 3,
                        'series': 'promo_series',
                    },
                    'cashback_cost': 10.0,
                },
            },
            {'_id': 'order_id', 'payment_tech': {'type': 'card'}},
            'order_id',
            {
                'metadata': {
                    'user_tag_name_1': True,
                    'user_tag_name_2': False,
                    'user_tag_name_3': False,
                    'prom_on_order': False,
                    'baby_seat_services': False,
                    'cancel_distance_raw': 0,
                    'cost_paid_supply': 0,
                    'country': 'rus',
                    'coupon': True,
                    'coupon_use_value': 3,
                    'coupon_only_card': True,
                    'coupon_used': True,
                    'created': '2018-06-15T12:34:00+0000',
                    'complete_rides': 0,
                    'phone_type': 'uber',
                    'user_id': 'user_id1',
                    'user_phone': '+79250325273',
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'dif_ordercost_surge_surgecharge': 0.0,
                    'difference_fact_coupon_and_cost': -7.0,
                    'door_to_door': False,
                    'driver_arrived': False,
                    'driver_late_time': 0.0,
                    'driver_waiting_time': 0,
                    'final_ride_duration': 0.0,
                    'fixed_price_order_flg': False,
                    'final_transaction_status': 'no_transactions',
                    'is_compensation': False,
                    'is_refund': False,
                    'moved_to_cash_by_antifraud': False,
                    'order_cost': 7.0,
                    'order_currency': 'RUB',
                    'order_distance_raw': 0,
                    'order_id': 'order_id',
                    'order_pre_distance_raw': 0,
                    'order_pre_time_raw': 0,
                    'order_pre_time_raw_minutes': 0.0,
                    'order_tips': False,
                    'success_order_flg': False,
                    'paid_cancel_tag': False,
                    'paid_supply': False,
                    'payment_decisions': False,
                    'payment_type': 'card',
                    'payment_type_changed_to_cash': False,
                    'point_b_changed': False,
                    'several_ride_transactions': False,
                    'surge_order_flg': False,
                    'tariff_currency': 'RUB',
                    'transportation_animals': False,
                    'user_locale': 'en',
                    'user_type': 'general',
                    'waiting': 'Нет',
                    'waiting_bool': False,
                    'waiting_cost': 0,
                    'waiting_time_raw': 0,
                    'waiting_time_raw_minutes': 0.0,
                    'amount_cashback': 10.0,
                    'amount_charity': 15.0,
                    'multipoints': False,
                    'multiorder': False,
                    'time_request': 0.0,
                    'is_maas_order': True,
                    'maas_subscription_applied': False,
                },
                'status': 'ok',
            },
        ),
        (
            False,
            {'metadata': {'order_id': 'order_id'}},
            {
                '_id': 'order_id',
                'order': {
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'user_id': 'user_id1',
                    'user_locale': 'en',
                    'cost': None,
                    'cashback_cost': 10.0,
                },
            },
            {'_id': 'order_id', 'payment_tech': {'type': 'corp'}},
            'order_id',
            {
                'metadata': {
                    'user_tag_name_1': True,
                    'user_tag_name_2': False,
                    'user_tag_name_3': False,
                    'prom_on_order': False,
                    'baby_seat_services': False,
                    'cancel_distance_raw': 0,
                    'cost_paid_supply': 0,
                    'country': 'rus',
                    'coupon': False,
                    'coupon_use_value': 0,
                    'coupon_used': False,
                    'created': '2018-06-15T12:34:00+0000',
                    'complete_rides': 0,
                    'phone_type': 'uber',
                    'user_id': 'user_id1',
                    'user_phone': '+79250325273',
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'dif_ordercost_surge_surgecharge': 0.0,
                    'door_to_door': False,
                    'driver_arrived': False,
                    'driver_late_time': 0.0,
                    'driver_waiting_time': 0,
                    'final_ride_duration': 0.0,
                    'fixed_price_order_flg': False,
                    'final_transaction_status': 'no_transactions',
                    'is_compensation': False,
                    'is_refund': False,
                    'moved_to_cash_by_antifraud': False,
                    'order_cost': 0,
                    'order_currency': 'RUB',
                    'order_distance_raw': 0,
                    'order_id': 'order_id',
                    'order_pre_distance_raw': 0,
                    'order_pre_time_raw': 0,
                    'order_pre_time_raw_minutes': 0.0,
                    'order_tips': False,
                    'success_order_flg': False,
                    'paid_cancel_tag': False,
                    'paid_supply': False,
                    'payment_decisions': False,
                    'payment_type': 'corp',
                    'payment_type_changed_to_cash': False,
                    'point_b_changed': False,
                    'several_ride_transactions': False,
                    'surge_order_flg': False,
                    'tariff_currency': 'RUB',
                    'transportation_animals': False,
                    'user_locale': 'en',
                    'user_type': 'corp',
                    'waiting': 'Нет',
                    'waiting_bool': False,
                    'waiting_cost': 0,
                    'waiting_time_raw': 0,
                    'waiting_time_raw_minutes': 0.0,
                    'amount_cashback': 10.0,
                    'amount_charity': 15.0,
                    'multipoints': False,
                    'multiorder': False,
                    'time_request': 0.0,
                    'is_maas_order': True,
                    'maas_subscription_applied': False,
                },
                'status': 'ok',
            },
        ),
        (
            False,
            {'metadata': {'order_id': 'order_id'}},
            {
                '_id': 'order_id',
                'order': {
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'user_id': 'user_id1',
                    'user_locale': 'en',
                    'application': 'iphone',
                    'cashback_cost': 10.0,
                },
            },
            {'_id': 'order_id', 'payment_tech': {'type': 'corp'}},
            'order_id',
            {
                'metadata': {
                    'user_tag_name_1': True,
                    'user_tag_name_2': False,
                    'user_tag_name_3': False,
                    'prom_on_order': False,
                    'application_platform': 'iphone',
                    'baby_seat_services': False,
                    'cancel_distance_raw': 0,
                    'cost_paid_supply': 0,
                    'country': 'rus',
                    'coupon': False,
                    'coupon_use_value': 0,
                    'coupon_used': False,
                    'created': '2018-06-15T12:34:00+0000',
                    'complete_rides': 0,
                    'phone_type': 'uber',
                    'user_id': 'user_id1',
                    'user_phone': '+79250325273',
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'dif_ordercost_surge_surgecharge': 0.0,
                    'door_to_door': False,
                    'driver_arrived': False,
                    'driver_late_time': 0.0,
                    'driver_waiting_time': 0,
                    'final_ride_duration': 0.0,
                    'fixed_price_order_flg': False,
                    'final_transaction_status': 'no_transactions',
                    'is_compensation': False,
                    'is_refund': False,
                    'moved_to_cash_by_antifraud': False,
                    'order_cost': 0,
                    'order_currency': 'RUB',
                    'order_distance_raw': 0,
                    'order_id': 'order_id',
                    'order_pre_distance_raw': 0,
                    'order_pre_time_raw': 0,
                    'order_pre_time_raw_minutes': 0.0,
                    'order_tips': False,
                    'success_order_flg': False,
                    'paid_cancel_tag': False,
                    'paid_supply': False,
                    'payment_decisions': False,
                    'payment_type': 'corp',
                    'payment_type_changed_to_cash': False,
                    'point_b_changed': False,
                    'several_ride_transactions': False,
                    'surge_order_flg': False,
                    'tariff_currency': 'RUB',
                    'transportation_animals': False,
                    'user_locale': 'en',
                    'user_platform': 'iphone',
                    'user_type': 'corp',
                    'waiting': 'Нет',
                    'waiting_bool': False,
                    'waiting_cost': 0,
                    'waiting_time_raw': 0,
                    'waiting_time_raw_minutes': 0.0,
                    'amount_cashback': 10.0,
                    'amount_charity': 15.0,
                    'multipoints': False,
                    'multiorder': False,
                    'time_request': 0.0,
                    'is_maas_order': True,
                    'maas_subscription_applied': False,
                },
                'status': 'ok',
            },
        ),
        (
            False,
            {'metadata': {'order_id': 'order_id'}},
            {
                '_id': 'order_id',
                '_shard_id': 0,
                'changes': {'objects': []},
                'price_modifiers': {
                    'items': [
                        {
                            'reason': 'ya_plus',
                            'tariff_categories': ['comfortplus', 'ultima'],
                            'type': 'multiplier',
                            'value': 0.9,
                        },
                    ],
                },
                'order': {
                    'created': datetime.datetime(2019, 7, 2, 12, 2, 23),
                    'city': 'Moscow',
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'user_id': 'user_id1',
                    'user_locale': 'en',
                    'application': 'iphone',
                    'current_prices': {
                        'final_cost': {
                            'driver': {'total': 4000},
                            'user': {'total': 4000, 'without_surge': 4000},
                        },
                        'final_cost_meta': {
                            'driver': {},
                            'user': {
                                'synthetic_surge': 2.0,
                                'setcar.show_surge': 2.0,
                            },
                        },
                    },
                    'pricing_data': {
                        'driver': {'price': {'total': 5000}},
                        'user': {
                            'meta': {},
                            'price': {'total': 5000},
                            'trip_information': {
                                'distance': 25000,
                                'time': 500,
                            },
                        },
                    },
                    'performer': {
                        'taxi_alias': {'id': 'order'},
                        'car_number': 'АА111А77',
                        'driver_license': 'права',
                        'clid': '100500',
                        'uuid': 'driver_uuid',
                        'driver_id': '999010_2eaf04fe6dec4330a6f29a6a7701c459',
                        'tariff': {
                            'class': 'comfortplus',
                            'currency': 'руб',
                            'id': 'tariff_id',
                        },
                        'db_id': 'some_park_id',
                    },
                    'request': {
                        'due': datetime.datetime(2019, 8, 2, 12, 2, 23),
                        'requirements': {
                            'animaltransport': True,
                            'seat': True,
                            'yellow_number': True,
                            'cargo_type': 'lcv_m',
                        },
                        'comment': 'text',
                        'source': {
                            'fullname': (
                                'Россия, Москва, улица Льва Толстого, 16'
                            ),
                            'locality': 'Москва',
                        },
                        'destinations': [
                            {
                                'fullname': (
                                    'Россия, Москва, улица Льва Толстого, 16'
                                ),
                                'locality': 'Москва',
                            },
                            {
                                'fullname': (
                                    'Россия, Ульяновск, '
                                    'улица Льва Толстого, 16'
                                ),
                                'locality': 'Ульяновск',
                                'geopoint': [45.0, 45.0],
                            },
                        ],
                        'payment': {'type': 'card'},
                        'corp': {'client_id': 'test_client_id'},
                    },
                    'feedback': {
                        'rating': 3,
                        'msg': 'ужасно',
                        'choices': {
                            'cancelled_reason': [
                                'driverrequest',
                                'droveaway',
                                'usererror',
                            ],
                        },
                    },
                    'cost': 4000,
                    'cashback_cost': 10.0,
                    'disp_cost': {
                        'disp_cost': 500,
                        'driver_cost': 700,
                        'taximeter_cost': 4000,
                        'operator_login': 'loginX',
                    },
                    'nz': 'test_nearest_zone',
                    'fixed_price': {'price': 600},
                    'status': 'finished',
                    'taxi_status': 'complete',
                },
                'order_info': {
                    'statistics': {
                        'status_updates': [{'t': 'complete', 'd': [46, 46]}],
                    },
                },
                'candidates': [
                    {
                        'alias_id': 'order',
                        'db_id': 'dbid123',
                        'car_number': 'АА111А77',
                        'driver_license': 'права',
                        'driver_id': '999010_2eaf04fe6dec4330a6f29a6a7701c459',
                        'tariff_class': 'comfortplus',
                        'ci': 'category_id',
                        'tariff_currency': 'руб',
                    },
                ],
                'performer': {'candidate_index': 0, 'park_id': 'park'},
            },
            {
                '_id': 'order_id',
                'request': {'source': {'geopoint': [44.0, 44.0]}},
                'payment_tech': {'type': 'corp'},
                'billing_tech': {
                    'transactions': [
                        {
                            'trust_payment_id': (
                                'embedded_with_umbrella_alias_id_tr_1'
                            ),
                            'payment_method_type': 'card',
                            'status': 'clear_success',
                            'holded': {'$date': '2018-01-11T12:00:00.0'},
                            'initial_sum': {'ride': 40000000},
                            'sum': {'ride': 40000000},
                            'refunds': [],
                            'billing_response': {
                                'payment_resp_code': 'not_enough_funds',
                            },
                        },
                    ],
                    'compensations': [],
                },
                'statistics': {
                    'travel_time': 564.1,
                    'travel_distance': 25012.0,
                    'cancel_time': 300,
                    'urgency': 180,
                    'driver_arrived': True,
                    'cancel_distance': 4600.0,
                    'driver_delay': 1000,
                    'start_waiting_time': datetime.datetime(
                        2019, 7, 2, 12, 2, 30,
                    ),
                    'start_transporting_time': datetime.datetime(
                        2019, 7, 2, 12, 3, 30,
                    ),
                },
                'status_change_positions': [
                    {'taxi_status': 'waiting', 'geopoint': [43.0, 43.0]},
                ],
            },
            'order_id',
            {
                'metadata': {
                    'user_tag_name_1': True,
                    'user_tag_name_2': False,
                    'user_tag_name_3': False,
                    'driver_tag_name_1': True,
                    'driver_tag_name_2': False,
                    'prom_on_order': False,
                    'created': '2018-06-15T12:34:00+0000',
                    'payment_error_code': 'not_enough_funds',
                    'payment_decisions': False,
                    'payment_type_changed': True,
                    'order_status': 'finished/complete',
                    'point_a_city': 'Москва',
                    'point_b_city': 'Ульяновск',
                    'point_a': 'Россия, Москва, улица Льва Толстого, 16',
                    'points_b': (
                        'Россия, Москва, улица Льва Толстого, 16; '
                        'Россия, Ульяновск, улица Льва Толстого, 16'
                    ),
                    'point_b_distance': 135824.34773455272,
                    'service_childchair_in_city': True,
                    'application_platform': 'iphone',
                    'baby_seat_services': False,
                    'cancel_distance_raw': 0,
                    'cargo_type': 'lcv_m',
                    'city': 'moscow',
                    'corp_client_id': 'test_client_id',
                    'cost_paid_supply': 0,
                    'coupon': False,
                    'coupon_use_value': 0,
                    'coupon_used': False,
                    'complete_rides': 0,
                    'phone_type': 'uber',
                    'user_id': 'user_id1',
                    'user_phone': '+79250325273',
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'dif_ordercost_surge_surgecharge': 0.0,
                    'door_to_door': False,
                    'difference_fact_estimated_cost': 3400.0,
                    'discount_ya_plus': True,
                    'disp_cost': 500,
                    'distance_while_waiting': 137404,
                    'driver_arrived': True,
                    'driver_cost': 700,
                    'driver_id': '999010_2eaf04fe6dec4330a6f29a6a7701c459',
                    'driver_late_time': 0.0,
                    'driver_waiting_time': 0,
                    'final_ride_duration': 0.0,
                    'final_transaction_status': 'clear_success',
                    'fixed_price': 600,
                    'fixed_price_order_flg': True,
                    'is_compensation': False,
                    'is_refund': False,
                    'moved_to_cash_by_antifraud': False,
                    'order_alias_id': 'order',
                    'order_cost': 4000.0,
                    'order_currency': 'руб',
                    'order_date': '02.08',
                    'order_date_ymd': '2019-08-02',
                    'order_distance_raw': 0,
                    'order_due_time': 1564736543,
                    'order_id': 'order_id',
                    'order_pre_cost': 5000,
                    'order_pre_distance': 25000,
                    'order_pre_distance_raw': 25000,
                    'order_pre_time': 500,
                    'order_pre_time_raw': 500,
                    'order_pre_time_raw_minutes': 8.333333333333334,
                    'order_time': '15:02',
                    'order_tips': False,
                    'paid_cancel_tag': False,
                    'paid_supply': False,
                    'payment_type': 'corp',
                    'payment_type_changed_to_cash': False,
                    'point_b_changed': False,
                    'precomment': 'text',
                    'several_ride_transactions': False,
                    'success_order_flg': True,
                    'surge_order_flg': True,
                    'surge': 2,
                    'tariff': 'comfortplus',
                    'tariff_currency': 'руб',
                    'tariff_id': 'tariff_id',
                    'taximeter_cost': 4000,
                    'time_cancel_order': 2,
                    'transactions': 'tran_4000.0_руб_clear_success',
                    'transportation_animals': True,
                    'user_locale': 'en',
                    'user_platform': 'iphone',
                    'user_type': 'corp',
                    'waiting': 'Нет',
                    'waiting_bool': False,
                    'waiting_cost': 0,
                    'waiting_time_raw': 0,
                    'waiting_time_raw_minutes': 0.0,
                    'zone': 'test_nearest_zone',
                    'performer_car_number': 'АА111А77',
                    'performer_clid': '100500',
                    'performer_driver_license': 'driver_license',
                    'performer_driver_locale': 'ru',
                    'performer_driver_phone': '+791234',
                    'performer_driver_uuid': 'driver_uuid',
                    'performer_park_city': 'moscow',
                    'performer_park_country': 'rus',
                    'performer_park_db_id': 'some_park_id',
                    'performer_park_driver_profile_id': (
                        'some_park_id_driver_uuid'
                    ),
                    'performer_park_name': 'park_name',
                    'performer_park_phone': '+79123',
                    'performer_taximeter_version': '7.07',
                    'performer_unique_driver_id': 'some_unique_driver_id',
                    'eats_courier_id': '59de5222293145d09d31cd1604f8f656',
                    'amount_cashback': 10.0,
                    'amount_charity': 15.0,
                    'multipoints': False,
                    'multiorder': False,
                    'time_request': 0.0,
                    'is_maas_order': True,
                    'maas_subscription_applied': False,
                },
                'status': 'ok',
            },
        ),
        (  # 20
            False,
            {'metadata': {'order_id': 'order_id'}},
            {
                '_id': 'order_id',
                'order': {
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'user_id': 'user_id1',
                    'user_locale': 'en',
                    'application': 'iphone',
                    'cost': 4000,
                    'cashback_cost': 10.0,
                    'city': 'Perm',
                    'request': {'due': datetime.datetime(2019, 1, 2, 3, 4, 5)},
                    'calc_info': {'waiting_time': 4, 'waiting_cost': 35},
                },
            },
            {
                '_id': 'order_id',
                'payment_tech': {
                    'type': 'corp',
                    'history': [{'operator_login': 'test'}],
                },
                'status': 'cancelled',
                'taxi_status': 'cancelled',
                'billing_tech': {
                    'transactions': [
                        {
                            'status': 'hold_fail',
                            'sum': {'ride': 40000000},
                            'billing_response': None,
                        },
                    ],
                    'compensations': [
                        {'refunds': [{'status': 'refund_success'}]},
                    ],
                },
                'statistics': {'cancel_time': 300, 'urgency': 301},
            },
            'order_id',
            {
                'metadata': {
                    'user_tag_name_1': True,
                    'user_tag_name_2': False,
                    'user_tag_name_3': False,
                    'prom_on_order': False,
                    'application_platform': 'iphone',
                    'baby_seat_services': False,
                    'billing_tech_compensations': 'refund_success',
                    'cancel_distance_raw': 0,
                    'city': 'perm',
                    'cost_paid_supply': 0,
                    'country': 'rus',
                    'coupon': False,
                    'coupon_use_value': 0,
                    'coupon_used': False,
                    'created': '2018-06-15T12:34:00+0000',
                    'complete_rides': 0,
                    'phone_type': 'uber',
                    'user_id': 'user_id1',
                    'user_phone': '+79250325273',
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'dif_ordercost_surge_surgecharge': 0.0,
                    'door_to_door': False,
                    'driver_arrived': False,
                    'driver_late_time': 0.0,
                    'driver_waiting_time': 0,
                    'final_ride_duration': 0.0,
                    'fixed_price_order_flg': False,
                    'final_transaction_status': 'hold_fail',
                    'is_compensation': False,
                    'is_refund': False,
                    'moved_to_cash_by_antifraud': False,
                    'order_cost': 4000.0,
                    'order_currency': 'RUB',
                    'order_date': '02.01',
                    'order_date_ymd': '2019-01-02',
                    'order_distance_raw': 0,
                    'order_due_time': 1546387445,
                    'order_id': 'order_id',
                    'order_pre_distance_raw': 0,
                    'order_pre_time_raw': 0,
                    'order_pre_time_raw_minutes': 0.0,
                    'order_time': '08:04',
                    'order_tips': False,
                    'success_order_flg': False,
                    'paid_cancel_tag': True,
                    'paid_supply': False,
                    'payment_decisions': True,
                    'payment_type': 'corp',
                    'payment_type_changed_to_cash': False,
                    'point_b_changed': False,
                    'several_ride_transactions': False,
                    'surge_order_flg': False,
                    'tariff_currency': 'RUB',
                    'timezone': 'Asia/Yekaterinburg',
                    'transactions': 'tran_4000.0_RUB_hold_fail',
                    'transportation_animals': False,
                    'user_locale': 'en',
                    'user_platform': 'iphone',
                    'user_type': 'corp',
                    'waiting': 'Да',
                    'waiting_bool': True,
                    'waiting_cost': 35,
                    'waiting_time': 4,
                    'waiting_time_raw': 4,
                    'waiting_time_raw_minutes': 4 / 60,
                    'amount_cashback': 10.0,
                    'amount_charity': 15.0,
                    'multipoints': False,
                    'multiorder': False,
                    'time_request': 0.0,
                    'is_maas_order': True,
                    'maas_subscription_applied': False,
                },
                'status': 'ok',
            },
        ),
        (
            False,
            {'metadata': {'order_id': 'order_id'}},
            {
                '_id': 'order_id',
                'order': {
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'user_id': 'user_id1',
                    'user_locale': 'en',
                    'application': 'iphone',
                    'cost': 291,
                    'cashback_cost': 10.0,
                    'city': 'Perm',
                    'request': {
                        'due': datetime.datetime(2019, 1, 2, 3, 4, 5),
                        'requirements': {
                            'animaltransport': True,
                            'childchair_moscow': True,
                            'door_to_door': True,
                        },
                    },
                    'pricing_data': {
                        'driver': {'price': {'total': 291}},
                        'user': {
                            'price': {'total': 291},
                            'meta': {
                                'setcar.show_surge': 2.2,
                                'surge_delta': 180.0,
                            },
                        },
                    },
                    'calc_info': {'waiting_time': 4, 'waiting_cost': 35},
                },
                'order_info': {
                    'statistics': {
                        'status_updates': [
                            {'q': 'related_moved_to_cash'},
                            {
                                'q': 'moved_to_cash',
                                'a': {
                                    'with_coupon': False,
                                    'reason_code': 'NEED_CVN',
                                    'invalidate_transactions': False,
                                    'force_action': False,
                                },
                            },
                        ],
                    },
                },
            },
            {
                '_id': 'order_id',
                'payment_tech': {
                    'type': 'corp',
                    'history': [
                        {
                            'operator_login': 'test',
                            'ticket_type': 'chatterbox',
                            'refund_sum': {'ride': 71},
                            'decision': 'refund',
                            'reason_code': 'NOT_CLOSED',
                        },
                        {
                            'operator_login': 'test',
                            'ticket_type': 'chatterbox',
                            'compensation_sum': {'ride': 71},
                            'decision': 'compensate_ride',
                        },
                    ],
                },
                'status': 'cancelled',
                'taxi_status': 'cancelled',
                'billing_tech': {
                    'transactions': [
                        {
                            'status': 'hold_fail',
                            'sum': {'ride': 1910000},
                            'billing_response': None,
                        },
                        {
                            'status': 'clear_success',
                            'sum': {'ride': 1000000},
                            'billing_response': None,
                        },
                    ],
                    'compensations': [
                        {'refunds': [{'status': 'refund_success'}]},
                    ],
                },
                'request': {
                    'destinations': [
                        {'geopoint': [37.68450926989317, 55.73194415720632]},
                        {'geopoint': [38.68450926989317, 54.73194415720632]},
                    ],
                },
            },
            'order_id',
            {
                'metadata': {
                    'user_tag_name_1': True,
                    'user_tag_name_2': False,
                    'user_tag_name_3': False,
                    'prom_on_order': False,
                    'application_platform': 'iphone',
                    'baby_seat_services': True,
                    'billing_tech_compensations': 'refund_success',
                    'cancel_distance_raw': 0,
                    'city': 'perm',
                    'cost_paid_supply': 0,
                    'country': 'rus',
                    'coupon': False,
                    'coupon_use_value': 0,
                    'coupon_used': False,
                    'created': '2018-06-15T12:34:00+0000',
                    'complete_rides': 0,
                    'phone_type': 'uber',
                    'user_id': 'user_id1',
                    'user_phone': '+79250325273',
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'difference_fact_estimated_cost': 0.0,
                    'dif_ordercost_surge_surgecharge': 180.0,
                    'door_to_door': True,
                    'driver_arrived': False,
                    'driver_late_time': 0.0,
                    'driver_waiting_time': 0,
                    'final_ride_duration': 0.0,
                    'final_transaction_status': 'clear_success',
                    'fixed_price_order_flg': False,
                    'is_compensation': True,
                    'is_refund': True,
                    'moved_to_cash_by_antifraud': True,
                    'order_cost': 291.0,
                    'order_currency': 'RUB',
                    'order_date': '02.01',
                    'order_date_ymd': '2019-01-02',
                    'order_distance_raw': 0,
                    'order_due_time': 1546387445,
                    'order_id': 'order_id',
                    'order_pre_cost': 291.0,
                    'order_pre_distance_raw': 0,
                    'order_pre_time_raw': 0,
                    'order_pre_time_raw_minutes': 0.0,
                    'order_time': '08:04',
                    'order_tips': False,
                    'paid_cancel_tag': True,
                    'paid_supply': False,
                    'payment_decisions': True,
                    'payment_type': 'corp',
                    'payment_type_changed_to_cash': True,
                    'point_b_changed': False,
                    'several_ride_transactions': True,
                    'success_order_flg': False,
                    'surge': 2.2,
                    'surge_order_flg': True,
                    'tariff_currency': 'RUB',
                    'timezone': 'Asia/Yekaterinburg',
                    'transactions': (
                        'tran_191.0_RUB_hold_fail;'
                        'tran_100.0_RUB_clear_success'
                    ),
                    'transportation_animals': True,
                    'user_locale': 'en',
                    'user_platform': 'iphone',
                    'user_type': 'corp',
                    'waiting': 'Да',
                    'waiting_bool': True,
                    'waiting_cost': 35,
                    'waiting_time': 4,
                    'waiting_time_raw': 4,
                    'waiting_time_raw_minutes': 4 / 60,
                    'amount_cashback': 10.0,
                    'amount_charity': 15.0,
                    'multipoints': True,
                    'multiorder': False,
                    'time_request': 0.0,
                    'is_maas_order': True,
                    'maas_subscription_applied': False,
                },
                'status': 'ok',
            },
        ),
        (
            False,
            {'metadata': {'order_id': 'order_id'}},
            {
                '_id': 'order_id',
                'order': {
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'user_id': 'user_id1',
                    'user_locale': 'en',
                    'application': 'iphone',
                    'cost': 291,
                    'cashback_cost': 10.0,
                    'city': 'Perm',
                    'agent': {
                        'agent_id': '007',
                        'agent_user_type': 'individual',
                        'agent_order_id': 'agent_order_id',
                    },
                },
            },
            {
                '_id': 'order_id',
                'payment_tech': {
                    'type': 'card',
                    'user_to_pay': {'ride': 2910000, 'tips': 100000},
                    'sum_to_pay': {'ride': 2910000, 'tips': 100000},
                },
                'status': 'cancelled',
                'taxi_status': 'cancelled',
                'billing_tech': {
                    'transactions': [
                        {
                            'status': 'hold_success',
                            'sum': {'ride': 1910000},
                            'billing_response': None,
                        },
                        {
                            'status': 'clear_success',
                            'sum': {'ride': 1000000},
                            'billing_response': None,
                            'refunds': [
                                {
                                    'status': 'refund_success',
                                    'sum': {'ride': 1000000},
                                },
                            ],
                        },
                    ],
                    'compensations': [
                        {
                            'status': 'compensation_success',
                            'sum': {'ride': 2000000},
                            'billing_response': None,
                            'refunds': [
                                {
                                    'status': 'refund_success',
                                    'sum': {'ride': 1000000},
                                },
                            ],
                        },
                    ],
                },
            },
            'order_id',
            {
                'metadata': {
                    'user_tag_name_1': True,
                    'user_tag_name_2': False,
                    'user_tag_name_3': False,
                    'agent_id': '007',
                    'agent_user_type': 'individual',
                    'agent_order_id': 'agent_order_id',
                    'prom_on_order': False,
                    'application_platform': 'iphone',
                    'baby_seat_services': False,
                    'billing_status': True,
                    'billing_tech_compensations': 'refund_success',
                    'cancel_distance_raw': 0,
                    'city': 'perm',
                    'cost_paid_supply': 0,
                    'country': 'rus',
                    'coupon': False,
                    'coupon_use_value': 0,
                    'coupon_used': False,
                    'created': '2018-06-15T12:34:00+0000',
                    'complete_rides': 0,
                    'phone_type': 'uber',
                    'user_id': 'user_id1',
                    'user_phone': '+79250325273',
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'dif_ordercost_surge_surgecharge': 0.0,
                    'door_to_door': False,
                    'driver_arrived': False,
                    'driver_late_time': 0.0,
                    'driver_waiting_time': 0,
                    'final_ride_duration': 0.0,
                    'final_transaction_status': 'clear_success',
                    'fixed_price_order_flg': False,
                    'is_compensation': False,
                    'is_refund': False,
                    'moved_to_cash_by_antifraud': False,
                    'order_cost': 291.0,
                    'order_currency': 'RUB',
                    'order_distance_raw': 0,
                    'order_id': 'order_id',
                    'order_pre_distance_raw': 0,
                    'order_pre_time_raw': 0,
                    'order_pre_time_raw_minutes': 0.0,
                    'order_tips': True,
                    'paid_cancel_tag': True,
                    'paid_supply': False,
                    'payment_decisions': False,
                    'payment_type': 'card',
                    'payment_type_changed_to_cash': False,
                    'point_b_changed': False,
                    'refund_tips': 290.0,
                    'refund_tips_minus': 1,
                    'several_ride_transactions': True,
                    'success_order_flg': False,
                    'sum_to_pay_ride': 291.0,
                    'sum_to_pay_tips': 10.0,
                    'surge_order_flg': False,
                    'tariff_currency': 'RUB',
                    'timezone': 'Asia/Yekaterinburg',
                    'transactions': (
                        'tran_191.0_RUB_hold_success;'
                        'tran_100.0_RUB_clear_success'
                    ),
                    'transportation_animals': False,
                    'user_locale': 'en',
                    'user_platform': 'iphone',
                    'user_to_pay_ride': 291.0,
                    'user_to_pay_tips': 10.0,
                    'user_type': 'general',
                    'waiting': 'Нет',
                    'waiting_bool': False,
                    'waiting_cost': 0,
                    'waiting_time_raw': 0,
                    'waiting_time_raw_minutes': 0.0,
                    'amount_cashback': 10.0,
                    'amount_charity': 15.0,
                    'multipoints': False,
                    'multiorder': False,
                    'time_request': 0.0,
                    'is_maas_order': True,
                    'maas_subscription_applied': False,
                },
                'status': 'ok',
            },
        ),
        (
            False,
            {'metadata': {'order_id': 'order_id'}},
            {
                '_id': 'order_id',
                'order': {
                    'user_phone_id': '539eb65be7e5b1f53980dfad',
                    'user_id': 'user_id1',
                    'user_locale': 'en',
                    'application': 'iphone',
                    'cashback_cost': 10.0,
                },
            },
            {'_id': 'order_id'},
            'order_id',
            {
                'metadata': {
                    'user_tag_name_1': True,
                    'user_tag_name_2': True,
                    'user_tag_name_3': False,
                    'application_platform': 'iphone',
                    'baby_seat_services': False,
                    'cancel_distance_raw': 0,
                    'cost_paid_supply': 0,
                    'country': 'rus',
                    'coupon': False,
                    'coupon_use_value': 0,
                    'coupon_used': False,
                    'created': '2018-06-15T12:34:00+0000',
                    'complete_rides': 0,
                    'phone_type': 'yandex',
                    'user_id': 'user_id1',
                    'user_phone': '+71111111111',
                    'user_phone_id': '539eb65be7e5b1f53980dfad',
                    'user_phone_pd_id': 'pd_id',
                    'dif_ordercost_surge_surgecharge': 0.0,
                    'door_to_door': False,
                    'driver_arrived': False,
                    'driver_late_time': 0.0,
                    'driver_waiting_time': 0,
                    'final_ride_duration': 0.0,
                    'final_transaction_status': 'no_transactions',
                    'fixed_price_order_flg': False,
                    'is_compensation': False,
                    'is_refund': False,
                    'moved_to_cash_by_antifraud': False,
                    'order_cost': 0,
                    'order_currency': 'RUB',
                    'order_distance_raw': 0,
                    'order_id': 'order_id',
                    'order_pre_distance_raw': 0,
                    'order_pre_time_raw': 0,
                    'order_pre_time_raw_minutes': 0.0,
                    'order_tips': False,
                    'paid_cancel_tag': False,
                    'paid_supply': False,
                    'payment_decisions': False,
                    'payment_type_changed_to_cash': False,
                    'point_b_changed': False,
                    'prom_on_order': False,
                    'several_ride_transactions': False,
                    'success_order_flg': False,
                    'surge_order_flg': False,
                    'tariff_currency': 'RUB',
                    'transportation_animals': False,
                    'user_locale': 'en',
                    'user_platform': 'iphone',
                    'user_type': 'general',
                    'waiting': 'Нет',
                    'waiting_bool': False,
                    'waiting_cost': 0,
                    'waiting_time_raw': 0,
                    'waiting_time_raw_minutes': 0.0,
                    'amount_cashback': 10.0,
                    'amount_charity': 15.0,
                    'multipoints': False,
                    'multiorder': False,
                    'time_request': 0.0,
                    'is_maas_order': True,
                    'maas_subscription_applied': False,
                },
                'status': 'ok',
            },
        ),
        (
            True,
            {'metadata': {'order_id': 'order_id'}},
            {
                '_id': 'order_id',
                'order': {
                    'user_phone_id': '539eb65be7e5b1f53980dfad',
                    'user_id': 'user_id1',
                    'user_locale': 'en',
                    'application': 'iphone',
                    'cashback_cost': 10.0,
                },
            },
            {'_id': 'order_id'},
            'order_id',
            {
                'metadata': {
                    'user_tag_name_1': True,
                    'user_tag_name_2': True,
                    'user_tag_name_3': True,
                    'application_platform': 'iphone',
                    'baby_seat_services': False,
                    'cancel_distance_raw': 0,
                    'cost_paid_supply': 0,
                    'country': 'rus',
                    'coupon': False,
                    'coupon_use_value': 0,
                    'coupon_used': False,
                    'created': '2018-06-15T12:34:00+0000',
                    'complete_rides': 0,
                    'phone_type': 'yandex',
                    'user_id': 'user_id1',
                    'user_phone': '+71111111111',
                    'user_phone_id': '539eb65be7e5b1f53980dfad',
                    'user_phone_pd_id': 'pd_id',
                    'dif_ordercost_surge_surgecharge': 0.0,
                    'door_to_door': False,
                    'driver_arrived': False,
                    'driver_late_time': 0.0,
                    'driver_waiting_time': 0,
                    'final_ride_duration': 0.0,
                    'final_transaction_status': 'no_transactions',
                    'fixed_price_order_flg': False,
                    'is_compensation': False,
                    'is_refund': False,
                    'moved_to_cash_by_antifraud': False,
                    'order_cost': 0,
                    'order_currency': 'RUB',
                    'order_distance_raw': 0,
                    'order_id': 'order_id',
                    'order_pre_distance_raw': 0,
                    'order_pre_time_raw': 0,
                    'order_pre_time_raw_minutes': 0.0,
                    'order_tips': False,
                    'paid_cancel_tag': False,
                    'paid_supply': False,
                    'payment_decisions': False,
                    'payment_type_changed_to_cash': False,
                    'point_b_changed': False,
                    'prom_on_order': False,
                    'several_ride_transactions': False,
                    'success_order_flg': False,
                    'surge_order_flg': False,
                    'tariff_currency': 'RUB',
                    'transportation_animals': False,
                    'user_locale': 'en',
                    'user_platform': 'iphone',
                    'user_type': 'general',
                    'waiting': 'Нет',
                    'waiting_bool': False,
                    'waiting_cost': 0,
                    'waiting_time_raw': 0,
                    'waiting_time_raw_minutes': 0.0,
                    'amount_cashback': 10.0,
                    'amount_charity': 15.0,
                    'multipoints': False,
                    'multiorder': False,
                    'time_request': 0.0,
                    'is_maas_order': True,
                    'maas_subscription_applied': False,
                },
                'status': 'ok',
            },
        ),
        (  # 25
            False,
            {
                'metadata': {
                    'user_phone': '+71111111111',
                    'phone_type': 'yandex',
                },
            },
            None,
            None,
            None,
            {
                'metadata': {
                    'user_phone': '+71111111111',
                    'phone_type': 'yandex',
                    'complete_rides': 0,
                    'user_tag_name_1': True,
                    'user_tag_name_2': True,
                    'user_tag_name_3': False,
                    'user_phone_pd_id': 'pd_id',
                    'user_phone_id': '539eb65be7e5b1f53980dfad',
                },
                'status': 'ok',
            },
        ),
        (
            True,
            {
                'metadata': {
                    'user_phone': '+71111111111',
                    'phone_type': 'yandex',
                },
            },
            None,
            None,
            None,
            {
                'metadata': {
                    'user_phone': '+71111111111',
                    'phone_type': 'yandex',
                    'complete_rides': 0,
                    'user_tag_name_1': True,
                    'user_tag_name_2': True,
                    'user_tag_name_3': True,
                    'user_phone_pd_id': 'pd_id',
                    'user_phone_id': '539eb65be7e5b1f53980dfad',
                },
                'status': 'ok',
            },
        ),
    ],
)
@pytest.mark.config(
    SUPPORT_INFO_EXTERNAL_META_QUERIES=True,
    SUPPORT_INFO_CHATTERBOX_TAGS_SEARCH=False,
    SUPPORT_INFO_META_DRIVER_TAGS_CONDITIONS=[
        {
            'external_tag': 'test_tag',
            'tag': 'test_tag',
            'name': 'driver_tag_name_1',
        },
        {
            'external_tag': 'support_tag',
            'tag': 'test_tag',
            'name': 'driver_tag_name_2',
        },
    ],
    SUPPORT_INFO_META_USER_TAGS_CONDITIONS=[
        {
            'external_tag': 'test_tag',
            'tag': 'test_tag',
            'name': 'user_tag_name_1',
        },
        {
            'external_tag': 'test_tag_2',
            'tag': 'test_tag',
            'name': 'user_tag_name_2',
        },
        {
            'external_tag': 'support_tag',
            'tag': 'test_tag',
            'name': 'user_tag_name_3',
        },
    ],
    SUPPORT_INFO_FILL_LEGACY_PERFORMER_FIELDS=False,
    SUPPORT_INFO_FETCH_USER_PHONE_PD_ID_TAGS=True,
    SUPPORT_INFO_KEEP_OWNER_DRIVER_FIELDS=False,
    USE_NEW_RESTRICTIONS_FOR_CONTRACTOR=True,
)
async def test_additional_meta(
        support_info_client,
        support_info_app,
        patch_aiohttp_session,
        patch_quality_control_cpp_empty,
        mock_billing_reports_empty,
        order_archive_mock,
        response_mock,
        mock_select_rows,
        mock_get_tags,
        mock_support_tags,
        mock_get_user_phones,
        mock_get_users,
        mock_personal,
        mockserver,
        mock_driver_profiles,
        mock_driver_trackstory,
        mock_driver_priority,
        mock_persey_payments,
        mock_taxi_fleet,
        mock_maas,
        url,
        headers,
        support_tags_enabled,
        data,
        order_proc_data,
        order_data,
        expected_order_id,
        expected_result,
):
    support_info_app.config.SUPPORT_INFO_FETCH_SUPPORT_TAGS = (
        support_tags_enabled
    )
    mock_get_tags(
        response={'tags': ['test_tag', 'grade_for_branding', 'silver']},
        tags_service='driver-tags',
    )
    mock_get_tags(
        response={
            'entities': [
                {'entity_type': 'user_phone_id', 'tags': ['test_tag']},
            ],
        },
        next_response={
            'entities': [
                {'entity_type': 'user_phone_pd_id', 'tags': ['test_tag_2']},
            ],
        },
        tags_service='passenger-tags',
    )
    mock_support_tags({'tags': ['support_tag', 'other_tag']})

    @mockserver.json_handler('/user-api/user_phones/by_number/retrieve_bulk')
    def _mock_user_api(request):
        return {
            'items': [
                {
                    'id': '5fb68e9f15a2887e0a040177',
                    'phone': '+70000000000',
                    'type': 'yandex',
                },
            ],
        }

    chatterbox_url = discovery.find_service('chatterbox').url

    @patch_aiohttp_session(chatterbox_url, 'POST')
    def _patch_request(method, url, **kwargs):
        return response_mock(json={'tasks': []})

    if order_proc_data:
        order_archive_mock.set_order_proc(order_proc_data)

    archive_api_url = support_info_app.settings.ARCHIVE_API_URL

    @patch_aiohttp_session(archive_api_url, 'POST')
    def _dummy_archive_api_request(method, url, **kwargs):
        assert kwargs['json']['id'] == expected_order_id
        assert url == archive_api_url + '/archive/order'
        if order_data:
            return response_mock(json={'doc': order_data})
        return response_mock(status=404)

    response = await support_info_client.post(url, json=data, headers=headers)
    assert response.status == 200
    result = await response.json()
    assert result == expected_result


@pytest.mark.now(NOW.isoformat())
@pytest.mark.config(SUPPORT_INFO_EXTERNAL_META_QUERIES=True)
@pytest.mark.parametrize(
    [
        'order_id',
        'mock_data',
        'expected_result',
        'expected_mock_request_calls',
    ],
    [
        pytest.param(
            'order_id',
            {'tasks': [{'id': 'chatterbox_id1'}, {'id': 'chatterbox_id2'}]},
            True,
            True,
        ),
        pytest.param(
            'order_id', {'tasks': [{'id': 'chatterbox_id3'}]}, False, True,
        ),
    ],
)
async def test_prom_on_order(
        support_info_client,
        support_info_app,
        patch_aiohttp_session,
        response_mock,
        order_id,
        mock_data,
        expected_result,
        expected_mock_request_calls,
):
    chatterbox_url = discovery.find_service('chatterbox').url

    @patch_aiohttp_session(chatterbox_url, 'POST')
    def _patch_request(method, url, **kwargs):
        assert url == chatterbox_url + '/v1/tasks/search/'
        return response_mock(json=mock_data)

    prom_on_order = await support_info_meta.get_prom_on_order(
        support_info_app, order_id,
    )

    assert bool(_patch_request.calls) == expected_mock_request_calls
    assert prom_on_order == expected_result


@pytest.mark.now(NOW.isoformat())
@pytest.mark.config(
    SUPPORT_INFO_DRIVER_PROTOCOL_META_QUERIES=True,
    USE_NEW_RESTRICTIONS_FOR_CONTRACTOR=True,
)
async def test_block_reasons(support_info_app):
    block_reasons = await support_info_meta.get_new_block_reasons(
        app=support_info_app, driver_uuid='driver_uuid', db_id='db_id',
    )
    assert block_reasons == {
        'checks': [
            {
                'id': 'temp',
                'type': 'block',
                'title': 'Доступ ограничен',
                'items': [{'id': 'dkk', 'title': 'Пройдите dkk'}],
            },
        ],
        'tariffs': [
            {
                'id': 'maybach',
                'reasons': [
                    {
                        'id': 'disabled_in_zone_category',
                        'title': 'Отключено парком',
                    },
                ],
            },
            {'id': 'econom', 'reasons': []},
        ],
    }


@pytest.mark.now(NOW.isoformat())
@pytest.mark.parametrize(
    [
        'data',
        'order_proc_data',
        'order_data',
        'expected_order_id',
        'expected_result',
        'user_api_request_url',
        'user_api_expected_body',
        'user_api_response',
    ],
    [
        (
            {
                'metadata': {
                    'user_phone': '+79250325273',
                    'phone_type': 'uber',
                },
                'use_last_order': True,
            },
            {
                '_id': 'some_order_id',
                'order': {
                    'user_phone_id': '000000000000000000000001',
                    'city': 'Moscow',
                    'user_id': 'some_user_id',
                    'user_locale': 'ru',
                },
            },
            {},
            'some_order_id',
            {
                'metadata': {
                    'city': 'moscow',
                    'complete_rides': 100,
                    'country': 'rus',
                    'phone_type': 'uber',
                    'user_locale': 'ru',
                    'user_phone': '+79250325273',
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'service_childchair_in_city': True,
                },
                'status': 'ok',
            },
            '/user_phones/by_number/retrieve',
            {
                'phone': '+79250325273',
                'type': 'uber',
                'primary_replica': False,
            },
            {
                'id': '539eb65be7e5b1f53980dfa9',
                'phone': '+79250325273',
                'type': 'uber',
                'stat': {'complete': 100, 'total': 120},
                'is_loyal': False,
                'is_taxi_staff': False,
                'is_yandex_staff': False,
            },
        ),
        (
            {'metadata': {'order_id': 'order_id_1'}},
            {
                '_id': 'order_id_1',
                'order': {
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'user_id': 'user_id_1',
                },
            },
            {'_id': 'order_id_1'},
            'order_id_1',
            {
                'metadata': {
                    'baby_seat_services': False,
                    'cancel_distance_raw': 0,
                    'cost_paid_supply': 0,
                    'country': 'rus',
                    'coupon': False,
                    'coupon_use_value': 0,
                    'coupon_used': False,
                    'created': '2018-06-15T12:34:00+0000',
                    'complete_rides': 0,
                    'phone_type': 'uber',
                    'user_id': 'user_id_1',
                    'user_phone': '+79250325273',
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'dif_ordercost_surge_surgecharge': 0.0,
                    'door_to_door': False,
                    'driver_arrived': False,
                    'driver_late_time': 0.0,
                    'driver_waiting_time': 0,
                    'final_ride_duration': 0.0,
                    'fixed_price_order_flg': False,
                    'final_transaction_status': 'no_transactions',
                    'is_compensation': False,
                    'is_refund': False,
                    'moved_to_cash_by_antifraud': False,
                    'order_cost': 0,
                    'order_currency': 'RUB',
                    'order_distance_raw': 0,
                    'order_id': 'order_id_1',
                    'order_pre_distance_raw': 0,
                    'order_pre_time_raw': 0,
                    'order_pre_time_raw_minutes': 0.0,
                    'order_tips': False,
                    'success_order_flg': False,
                    'paid_cancel_tag': False,
                    'paid_supply': False,
                    'payment_decisions': False,
                    'payment_type_changed_to_cash': False,
                    'point_b_changed': False,
                    'several_ride_transactions': False,
                    'surge_order_flg': False,
                    'tariff_currency': 'RUB',
                    'transportation_animals': False,
                    'user_type': 'general',
                    'waiting': 'Нет',
                    'waiting_bool': False,
                    'waiting_cost': 0,
                    'waiting_time_raw': 0,
                    'waiting_time_raw_minutes': 0.0,
                    'amount_cashback': 0,
                    'amount_charity': 0,
                    'multipoints': False,
                    'multiorder': False,
                    'time_request': 0.0,
                },
                'status': 'ok',
            },
            '/user_phones/get',
            {'id': '539eb65be7e5b1f53980dfa9', 'primary_replica': False},
            {
                'id': '539eb65be7e5b1f53980dfa9',
                'phone': '+79250325273',
                'type': 'uber',
                'stat': {},
                'is_loyal': False,
                'is_taxi_staff': False,
                'is_yandex_staff': False,
            },
        ),
    ],
)
async def test_additional_meta_user_api(
        support_info_client,
        support_info_app,
        patch_aiohttp_session,
        response_mock,
        mockserver,
        order_archive_mock,
        mock_select_rows,
        mock_get_users,
        mock_persey_payments,
        mock_taxi_fleet,
        data,
        order_proc_data,
        order_data,
        expected_order_id,
        expected_result,
        user_api_request_url,
        user_api_expected_body,
        user_api_response,
):
    if order_proc_data:
        order_archive_mock.set_order_proc(order_proc_data)
    archive_api_url = support_info_app.settings.ARCHIVE_API_URL

    @patch_aiohttp_session(archive_api_url, 'POST')
    def _dummy_archive_api_request(method, url, **kwargs):
        assert kwargs['json']['id'] == expected_order_id
        assert url == archive_api_url + '/archive/order'
        if order_data:
            return response_mock(json={'doc': order_data})
        return response_mock(status=404)

    @mockserver.json_handler('/user-api' + user_api_request_url)
    def _mock_user_api(request):
        assert request.json == user_api_expected_body
        return user_api_response

    response = await support_info_client.post(
        '/v1/get_additional_meta',
        json=data,
        headers={'YaTaxi-Api-Key': 'api-key'},
    )
    assert response.status == 200
    result = await response.json()
    assert result == expected_result


async def test_additional_meta_fallback(
        support_info_client,
        support_info_app,
        patch_aiohttp_session,
        order_archive_mock,
        mock_get_user_phones,
        mock_get_users,
        response_mock,
        mock_select_rows,
):
    data = {
        'metadata': {'user_phone': '+79250325273', 'phone_type': 'yandex'},
        'use_last_order': True,
    }

    order_proc_data = {
        '_id': 'some_order_id',
        'order': {
            'user_phone_id': '000000000000000000000001',
            'city': 'Moscow',
            'user_id': 'some_user_id',
            'user_locale': 'ru',
        },
    }
    order_archive_mock.set_order_proc(order_proc_data)

    order_data = {}

    archive_api_url = support_info_app.settings.ARCHIVE_API_URL

    @patch_aiohttp_session(archive_api_url, 'POST')
    def _dummy_archive_api_request(method, url, **kwargs):
        assert kwargs['json']['id'] == 'some_order_id'
        assert url == archive_api_url + '/archive/order'
        if order_data:
            return response_mock(json={'doc': order_data})
        return response_mock(status=404)

    response = await support_info_client.post(
        '/v1/get_additional_meta',
        json=data,
        headers={'YaTaxi-Api-Key': 'api-key'},
    )
    assert response.status == 200
    result = await response.json()
    assert result == {
        'metadata': {
            'city': 'moscow',
            'complete_rides': 0,
            'country': 'rus',
            'phone_type': 'yandex',
            'user_locale': 'ru',
            'user_phone': '+79250325273',
            'user_phone_id': '539eb65be7e5b1f53980dfaa',
            'service_childchair_in_city': True,
        },
        'status': 'ok',
    }


@pytest.mark.now(NOW.isoformat())
@pytest.mark.parametrize(
    ['url', 'headers'],
    [
        ('/v1/get_additional_meta', {'YaTaxi-Api-Key': 'api-key'}),
        ('/v1/enrich_meta', {}),
    ],
)
@pytest.mark.parametrize(
    [
        'data',
        'order_proc_data',
        'order_data',
        'expected_order_id',
        'expected_result',
    ],
    [
        (
            {
                'metadata': {
                    'order_id': 'order_id',
                    'driver_license': 'driver_license',
                    'park_db_id': 'some_park_id',
                    'eats_courier_id': '59de5222293145d09d31cd1604f8f656',
                    'priority_list': {
                        'Дезинфекция машины': 2,
                        'Поездки с музыкой': 2,
                    },
                },
            },
            {
                '_id': 'order_id',
                'order': {
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'user_id': 'user_id1',
                    'user_locale': 'en',
                    'city': 'Москва',
                    'performer': {
                        'car_number': 'car_number',
                        'phone': ['+791234', '+75678'],
                        'clid': '100500',
                        'uuid': 'driver_uuid',
                        'db_id': 'some_park_id',
                        'taxi_alias': {'id': 'alias_id_1'},
                        'tariff': {'class': 'ultima'},
                    },
                    'coupon': {
                        'id': '123',
                        'was_used': True,
                        'valid': True,
                        'value': 10,
                    },
                    'cost': 100,
                    'nz': 'erevan',
                    'request': {'comment': 'precomment'},
                    'cashback_cost': 10.0,
                },
            },
            {
                '_id': 'order_id',
                'payment_tech': {
                    'type': 'corp',
                    'user_to_pay': {'ride': 1234567, 'tips': 0},
                    'sum_to_pay': {'ride': 7654321, 'tips': 0},
                },
            },
            'order_id',
            {
                'metadata': {
                    'baby_seat_services': False,
                    'billing_status': False,
                    'cancel_distance_raw': 0,
                    'car_id': 'some_car_id',
                    'car_number': 'car_number',
                    'city': 'москва',
                    'clid': '100500',
                    'cost_paid_supply': 0,
                    'country': 'arm',
                    'coupon': True,
                    'coupon_use_value': 10,
                    'coupon_used': True,
                    'created': '2018-06-15T12:34:00+0000',
                    'complete_rides': 0,
                    'phone_type': 'uber',
                    'user_id': 'user_id1',
                    'user_phone': '+79250325273',
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'dif_ordercost_surge_surgecharge': 0.0,
                    'difference_fact_coupon_and_cost': -90,
                    'discount_ya_plus': False,
                    'door_to_door': False,
                    'driver_arrived': False,
                    'driver_late_time': 0.0,
                    'driver_license': 'driver_license',
                    'driver_locale': 'ru',
                    'driver_phone': '+791234',
                    'driver_uuid': 'driver_uuid',
                    'driver_waiting_time': 0,
                    'final_ride_duration': 0.0,
                    'fixed_price_order_flg': False,
                    'final_transaction_status': 'no_transactions_yet',
                    'grade_branding': False,
                    'integration_event': True,
                    'is_compensation': False,
                    'is_refund': False,
                    'moved_to_cash_by_antifraud': False,
                    'order_alias_id': 'alias_id_1',
                    'order_cost': 90,
                    'order_currency': 'RUB',
                    'order_distance_raw': 0,
                    'order_id': 'order_id',
                    'order_pre_distance_raw': 0,
                    'order_pre_time_raw': 0,
                    'order_pre_time_raw_minutes': 0.0,
                    'order_tips': False,
                    'success_order_flg': False,
                    'sum_to_pay_ride': 765.4321,
                    'sum_to_pay_tips': 0,
                    'paid_cancel_tag': False,
                    'paid_supply': False,
                    'park_driver_profile_id': 'some_park_id_driver_uuid',
                    'park_car_id': 'some_park_id_some_car_id',
                    'park_city': 'moscow',
                    'park_country': 'rus',
                    'park_db_id': 'some_park_id',
                    'park_name': 'park_name',
                    'park_phone': '+79123',
                    'payment_decisions': False,
                    'payment_type': 'corp',
                    'payment_type_changed_to_cash': False,
                    'point_b_changed': False,
                    'precomment': 'precomment',
                    'refund_tips': 122.4567,
                    'refund_tips_minus': 1,
                    'several_ride_transactions': False,
                    'surge_order_flg': False,
                    'tariff': 'ultima',
                    'tariff_currency': 'RUB',
                    'taximeter_version': '7.07',
                    'transportation_animals': False,
                    'unique_driver_id': 'some_unique_driver_id',
                    'user_locale': 'en',
                    'user_to_pay_ride': 123.4567,
                    'user_to_pay_tips': 0,
                    'user_type': 'corp',
                    'waiting': 'Нет',
                    'waiting_bool': False,
                    'waiting_cost': 0,
                    'waiting_time_raw': 0,
                    'waiting_time_raw_minutes': 0.0,
                    'yandex_provider': True,
                    'zone': 'erevan',
                    'performer_car_number': 'car_number',
                    'performer_clid': '100500',
                    'performer_driver_license': 'driver_license',
                    'performer_driver_locale': 'ru',
                    'performer_driver_phone': '+791234',
                    'performer_driver_uuid': 'driver_uuid',
                    'performer_park_city': 'moscow',
                    'performer_park_country': 'rus',
                    'performer_park_db_id': 'some_park_id',
                    'performer_park_driver_profile_id': (
                        'some_park_id_driver_uuid'
                    ),
                    'performer_park_name': 'park_name',
                    'performer_park_phone': '+79123',
                    'performer_taximeter_version': '7.07',
                    'performer_unique_driver_id': 'some_unique_driver_id',
                    'eats_courier_id': '59de5222293145d09d31cd1604f8f656',
                    'priority_list': {
                        'Дезинфекция машины': 2,
                        'Поездки с музыкой': 2,
                    },
                    'order_disp_status': 'some_reason',
                    'amount_cashback': 10.0,
                    'amount_charity': 15.0,
                    'multipoints': False,
                    'multiorder': False,
                    'time_request': 0.0,
                },
                'status': 'ok',
            },
        ),
        (
            {
                'suppress_conflict': True,
                'metadata': {
                    'order_id': 'order_id',
                    'driver_license': 'driver_license',
                    'user_phone': '+79099099009',
                    'park_db_id': 'some_park_id',
                },
            },
            {
                '_id': 'order_id',
                'order': {
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'user_id': 'user_id1',
                    'user_locale': 'en',
                    'city': 'Москва',
                    'performer': {
                        'car_number': 'car_number',
                        'phone': ['+791234', '+75678'],
                        'clid': '100500',
                        'uuid': 'driver_uuid',
                        'db_id': 'some_park_id',
                        'taxi_alias': {'id': 'alias_id_1'},
                        'tariff': {'class': 'ultima'},
                    },
                    'coupon': {
                        'id': '123',
                        'was_used': True,
                        'valid': True,
                        'value': 10,
                    },
                    'cost': 100,
                    'nz': 'erevan',
                    'request': {'comment': 'precomment'},
                    'cashback_cost': 10.0,
                },
            },
            {'_id': 'order_id', 'payment_tech': {'type': 'corp'}},
            'order_id',
            {
                'metadata': {
                    'baby_seat_services': False,
                    'cancel_distance_raw': 0,
                    'car_id': 'some_car_id',
                    'car_number': 'car_number',
                    'city': 'москва',
                    'clid': '100500',
                    'cost_paid_supply': 0,
                    'country': 'arm',
                    'coupon': True,
                    'coupon_use_value': 10,
                    'coupon_used': True,
                    'created': '2018-06-15T12:34:00+0000',
                    'customer_complete_rides': 0,
                    'customer_phone_type': 'uber',
                    'customer_user_id': 'user_id1',
                    'customer_user_phone': '+79250325273',
                    'customer_user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'dif_ordercost_surge_surgecharge': 0.0,
                    'difference_fact_coupon_and_cost': -90,
                    'discount_ya_plus': False,
                    'door_to_door': False,
                    'driver_arrived': False,
                    'driver_late_time': 0.0,
                    'driver_license': 'driver_license',
                    'driver_locale': 'ru',
                    'driver_phone': '+791234',
                    'driver_uuid': 'driver_uuid',
                    'driver_waiting_time': 0,
                    'final_ride_duration': 0.0,
                    'fixed_price_order_flg': False,
                    'final_transaction_status': 'no_transactions',
                    'grade_branding': False,
                    'integration_event': True,
                    'is_compensation': False,
                    'is_refund': False,
                    'moved_to_cash_by_antifraud': False,
                    'order_alias_id': 'alias_id_1',
                    'order_cost': 90,
                    'order_currency': 'RUB',
                    'order_distance_raw': 0,
                    'order_id': 'order_id',
                    'order_pre_distance_raw': 0,
                    'order_pre_time_raw': 0,
                    'order_pre_time_raw_minutes': 0.0,
                    'order_tips': False,
                    'success_order_flg': False,
                    'paid_cancel_tag': False,
                    'paid_supply': False,
                    'park_car_id': 'some_park_id_some_car_id',
                    'park_city': 'moscow',
                    'park_country': 'rus',
                    'park_db_id': 'some_park_id',
                    'park_driver_profile_id': 'some_park_id_driver_uuid',
                    'park_name': 'park_name',
                    'park_phone': '+79123',
                    'payment_decisions': False,
                    'payment_type': 'corp',
                    'payment_type_changed_to_cash': False,
                    'point_b_changed': False,
                    'precomment': 'precomment',
                    'several_ride_transactions': False,
                    'surge_order_flg': False,
                    'tariff': 'ultima',
                    'tariff_currency': 'RUB',
                    'taximeter_version': '7.07',
                    'transportation_animals': False,
                    'unique_driver_id': 'some_unique_driver_id',
                    'user_locale': 'en',
                    'user_phone': '+79099099009',
                    'user_type': 'corp',
                    'waiting': 'Нет',
                    'waiting_bool': False,
                    'waiting_cost': 0,
                    'waiting_time_raw': 0,
                    'waiting_time_raw_minutes': 0.0,
                    'yandex_provider': True,
                    'zone': 'erevan',
                    'performer_car_number': 'car_number',
                    'performer_clid': '100500',
                    'performer_driver_license': 'driver_license',
                    'performer_driver_locale': 'ru',
                    'performer_driver_phone': '+791234',
                    'performer_driver_uuid': 'driver_uuid',
                    'performer_park_city': 'moscow',
                    'performer_park_country': 'rus',
                    'performer_park_db_id': 'some_park_id',
                    'performer_park_driver_profile_id': (
                        'some_park_id_driver_uuid'
                    ),
                    'performer_park_name': 'park_name',
                    'performer_park_phone': '+79123',
                    'performer_taximeter_version': '7.07',
                    'performer_unique_driver_id': 'some_unique_driver_id',
                    'eats_courier_id': '59de5222293145d09d31cd1604f8f656',
                    'priority_list': {
                        'Дезинфекция машины': 2,
                        'Поездки с музыкой': 2,
                    },
                    'order_disp_status': 'some_reason',
                    'amount_cashback': 10.0,
                    'amount_charity': 15.0,
                    'multipoints': False,
                    'multiorder': False,
                    'time_request': 0.0,
                },
                'status': 'ok',
            },
        ),
        (
            {'metadata': {'order_id': 'order_id'}},
            {
                '_id': 'order_id',
                '_shard_id': 0,
                'changes': {'objects': []},
                'price_modifiers': {
                    'items': [
                        {
                            'reason': 'ya_plus',
                            'tariff_categories': ['comfortplus', 'ultima'],
                            'type': 'multiplier',
                            'value': 0.9,
                        },
                    ],
                },
                'order': {
                    'created': datetime.datetime(2019, 7, 2, 12, 2, 23),
                    'city': 'Moscow',
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'user_id': 'user_id1',
                    'user_locale': 'en',
                    'application': 'iphone',
                    'cashback_cost': 10.0,
                    'performer': {
                        'taxi_alias': {'id': 'order'},
                        'car_number': 'АА111А77',
                        'driver_license': 'права',
                        'clid': '100500',
                        'uuid': 'driver_uuid',
                        'driver_id': '999010_2eaf04fe6dec4330a6f29a6a7701c459',
                        'tariff': {
                            'class': 'comfortplus',
                            'currency': 'руб',
                            'id': 'tariff_id',
                        },
                        'db_id': 'some_park_id',
                    },
                    'pricing_data': {
                        'driver': {'price': {'total': 5000}},
                        'user': {
                            'meta': {
                                'setcar.show_surge': 2.0,
                                'surge_delta': 0.0,
                            },
                            'price': {'total': 5000},
                        },
                        'trip_information': {'distance': 25000, 'time': 500},
                    },
                    'request': {
                        'due': datetime.datetime(2019, 8, 2, 12, 2, 23),
                        'requirements': {
                            'animaltransport': True,
                            'seat': True,
                            'yellow_number': True,
                            'cargo_type': 'lcv_m',
                        },
                        'comment': 'text',
                        'source': {
                            'fullname': (
                                'Россия, Москва, улица Льва Толстого, 16'
                            ),
                            'locality': 'Москва',
                        },
                        'destinations': [
                            {
                                'fullname': (
                                    'Россия, Москва, улица Льва Толстого, 16'
                                ),
                                'locality': 'Москва',
                            },
                            {
                                'fullname': (
                                    'Россия, Ульяновск, '
                                    'улица Льва Толстого, 16'
                                ),
                                'locality': 'Ульяновск',
                                'geopoint': [45.0, 45.0],
                            },
                        ],
                        'payment': {'type': 'card'},
                        'corp': {'client_id': 'test_client_id'},
                    },
                    'feedback': {
                        'rating': 3,
                        'msg': 'ужасно',
                        'choices': {
                            'cancelled_reason': [
                                'driverrequest',
                                'droveaway',
                                'usererror',
                            ],
                        },
                    },
                    'cost': 4000,
                    'disp_cost': {
                        'disp_cost': 500,
                        'driver_cost': 700,
                        'taximeter_cost': 4000,
                        'operator_login': 'loginX',
                    },
                    'nz': 'test_nearest_zone',
                    'fixed_price': {'price': 600},
                    'status': 'finished',
                    'taxi_status': 'complete',
                },
                'order_info': {
                    'statistics': {
                        'status_updates': [{'t': 'complete', 'd': [46, 46]}],
                    },
                },
                'candidates': [
                    {
                        'alias_id': 'order',
                        'db_id': 'dbid123',
                        'car_number': 'АА111А77',
                        'driver_license': 'права',
                        'driver_id': '999010_2eaf04fe6dec4330a6f29a6a7701c459',
                        'tariff_class': 'comfortplus',
                        'ci': 'category_id',
                        'tariff_currency': 'руб',
                    },
                ],
                'performer': {'candidate_index': 0, 'park_id': 'park'},
            },
            {
                '_id': 'order_id',
                'request': {'source': {'geopoint': [44.0, 44.0]}},
                'payment_tech': {'type': 'corp'},
                'billing_tech': {
                    'transactions': [
                        {
                            'trust_payment_id': (
                                'embedded_with_umbrella_alias_id_tr_1'
                            ),
                            'payment_method_type': 'card',
                            'status': 'clear_success',
                            'holded': {'$date': '2018-01-11T12:00:00.0'},
                            'initial_sum': {'ride': 40000000},
                            'sum': {'ride': 40000000},
                            'refunds': [],
                            'billing_response': {
                                'payment_resp_code': 'not_enough_funds',
                            },
                        },
                    ],
                    'compensations': [],
                },
                'statistics': {
                    'travel_time': 564.1,
                    'travel_distance': 25012.0,
                    'cancel_time': 300,
                    'urgency': 180,
                    'driver_arrived': True,
                    'cancel_distance': 4600.0,
                    'driver_delay': 1000,
                    'start_waiting_time': datetime.datetime(
                        2019, 7, 2, 12, 2, 30,
                    ),
                    'start_transporting_time': datetime.datetime(
                        2019, 7, 2, 12, 3, 30,
                    ),
                },
                'status_change_positions': [
                    {'taxi_status': 'waiting', 'geopoint': [43.0, 43.0]},
                ],
            },
            'order_id',
            {
                'metadata': {
                    'created': '2018-06-15T12:34:00+0000',
                    'payment_error_code': 'not_enough_funds',
                    'payment_decisions': False,
                    'payment_type_changed': True,
                    'order_status': 'finished/complete',
                    'point_a_city': 'Москва',
                    'point_b_city': 'Ульяновск',
                    'point_a': 'Россия, Москва, улица Льва Толстого, 16',
                    'points_b': (
                        'Россия, Москва, улица Льва Толстого, 16; '
                        'Россия, Ульяновск, улица Льва Толстого, 16'
                    ),
                    'point_b_distance': 135824.34773455272,
                    'service_childchair_in_city': True,
                    'application_platform': 'iphone',
                    'baby_seat_services': False,
                    'cancel_distance_raw': 0,
                    'car_number': 'АА111А77',
                    'cargo_type': 'lcv_m',
                    'city': 'moscow',
                    'clid': '100500',
                    'corp_client_id': 'test_client_id',
                    'cost_paid_supply': 0,
                    'coupon': False,
                    'coupon_use_value': 0,
                    'coupon_used': False,
                    'complete_rides': 0,
                    'phone_type': 'uber',
                    'user_id': 'user_id1',
                    'user_phone': '+79250325273',
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'dif_ordercost_surge_surgecharge': 0.0,
                    'door_to_door': False,
                    'difference_fact_estimated_cost': 3400.0,
                    'discount_ya_plus': True,
                    'disp_cost': 500,
                    'distance_while_waiting': 137404,
                    'driver_arrived': True,
                    'driver_cost': 700,
                    'driver_id': '999010_2eaf04fe6dec4330a6f29a6a7701c459',
                    'driver_late_time': 0.0,
                    'driver_license': 'driver_license',
                    'driver_locale': 'ru',
                    'driver_phone': '+791234',
                    'driver_uuid': 'driver_uuid',
                    'driver_waiting_time': 0,
                    'final_ride_duration': 0.0,
                    'final_transaction_status': 'clear_success',
                    'fixed_price': 600,
                    'fixed_price_order_flg': True,
                    'is_compensation': False,
                    'is_refund': False,
                    'moved_to_cash_by_antifraud': False,
                    'order_alias_id': 'order',
                    'order_cost': 4000.0,
                    'order_currency': 'руб',
                    'order_date': '02.08',
                    'order_date_ymd': '2019-08-02',
                    'order_distance_raw': 0,
                    'order_due_time': 1564736543,
                    'order_id': 'order_id',
                    'order_pre_cost': 5000,
                    'order_pre_distance': 25000,
                    'order_pre_distance_raw': 25000,
                    'order_pre_time': 500,
                    'order_pre_time_raw': 500,
                    'order_pre_time_raw_minutes': 8.333333333333334,
                    'order_time': '15:02',
                    'order_tips': False,
                    'paid_cancel_tag': False,
                    'paid_supply': False,
                    'park_city': 'moscow',
                    'park_country': 'rus',
                    'park_db_id': 'some_park_id',
                    'park_driver_profile_id': 'some_park_id_driver_uuid',
                    'park_name': 'park_name',
                    'park_phone': '+79123',
                    'payment_type': 'corp',
                    'payment_type_changed_to_cash': False,
                    'point_b_changed': False,
                    'precomment': 'text',
                    'several_ride_transactions': False,
                    'success_order_flg': True,
                    'surge_order_flg': True,
                    'surge': 2,
                    'tariff': 'comfortplus',
                    'tariff_currency': 'руб',
                    'tariff_id': 'tariff_id',
                    'taximeter_cost': 4000,
                    'taximeter_version': '7.07',
                    'time_cancel_order': 2,
                    'transactions': 'tran_4000.0_руб_clear_success',
                    'transportation_animals': True,
                    'unique_driver_id': 'some_unique_driver_id',
                    'user_locale': 'en',
                    'user_platform': 'iphone',
                    'user_type': 'corp',
                    'waiting': 'Нет',
                    'waiting_bool': False,
                    'waiting_cost': 0,
                    'waiting_time_raw': 0,
                    'waiting_time_raw_minutes': 0.0,
                    'zone': 'test_nearest_zone',
                    'performer_car_number': 'АА111А77',
                    'performer_clid': '100500',
                    'performer_driver_license': 'driver_license',
                    'performer_driver_locale': 'ru',
                    'performer_driver_phone': '+791234',
                    'performer_driver_uuid': 'driver_uuid',
                    'performer_park_city': 'moscow',
                    'performer_park_country': 'rus',
                    'performer_park_db_id': 'some_park_id',
                    'performer_park_driver_profile_id': (
                        'some_park_id_driver_uuid'
                    ),
                    'performer_park_name': 'park_name',
                    'performer_park_phone': '+79123',
                    'performer_taximeter_version': '7.07',
                    'performer_unique_driver_id': 'some_unique_driver_id',
                    'eats_courier_id': '59de5222293145d09d31cd1604f8f656',
                    'priority_list': {
                        'Дезинфекция машины': 2,
                        'Поездки с музыкой': 2,
                    },
                    'order_disp_status': 'some_reason',
                    'amount_cashback': 10.0,
                    'amount_charity': 15.0,
                    'multipoints': False,
                    'multiorder': False,
                    'time_request': 0.0,
                },
                'status': 'ok',
            },
        ),
        (
            {
                'metadata': {
                    'order_id': 'order_id',
                    'driver_license': 'driver_license_1',
                    'eats_courier_id': '59de5222293145d09d31cd1604f8f656',
                },
            },
            {
                '_id': 'order_id',
                'order': {
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'performer': {
                        'car_number': 'car_number',
                        'phone': ['+791234', '+75678'],
                        'clid': '100500',
                        'uuid': 'driver_uuid',
                        'db_id': 'some_park_id',
                        'taxi_alias': {'id': 'alias_id_1'},
                        'tariff': {'class': 'ultima'},
                    },
                },
            },
            {},
            'order_id',
            {
                'metadata': {
                    'driver_license': 'driver_license_1',
                    'order_id': 'order_id',
                    'eats_courier_id': '59de5222293145d09d31cd1604f8f656',
                },
                'status': 'conflict',
            },
        ),
    ],
)
@pytest.mark.config(
    SUPPORT_INFO_CHATTERBOX_TAGS_SEARCH=False,
    SUPPORT_INFO_FILL_LEGACY_PERFORMER_FIELDS=True,
    SUPPORT_INFO_KEEP_OWNER_DRIVER_FIELDS=False,
)
async def test_additional_meta_legacy_performer(
        support_info_client,
        support_info_app,
        patch_aiohttp_session,
        patch_quality_control_cpp_empty,
        mock_billing_reports_empty,
        order_archive_mock,
        response_mock,
        mock_select_rows,
        mock_get_tags,
        mock_get_user_phones,
        mock_get_users,
        mock_personal,
        mockserver,
        mock_driver_profiles,
        mock_driver_trackstory,
        mock_driver_priority,
        mock_persey_payments,
        mock_taxi_fleet,
        url,
        headers,
        data,
        order_proc_data,
        order_data,
        expected_order_id,
        expected_result,
):
    @mockserver.json_handler('/user-api/user_phones/by_number/retrieve_bulk')
    def _mock_user_api(request):
        return {
            'items': [
                {
                    'id': '5fb68e9f15a2887e0a040177',
                    'phone': '+70000000000',
                    'type': 'yandex',
                },
            ],
        }

    if order_proc_data:
        order_archive_mock.set_order_proc(order_proc_data)

    archive_api_url = support_info_app.settings.ARCHIVE_API_URL

    @patch_aiohttp_session(archive_api_url, 'POST')
    def _dummy_archive_api_request(method, url, **kwargs):
        assert kwargs['json']['id'] == expected_order_id
        assert url == archive_api_url + '/archive/order'
        if order_data:
            return response_mock(json={'doc': order_data})
        return response_mock(status=404)

    response = await support_info_client.post(url, json=data, headers=headers)
    assert response.status == 200
    result = await response.json()
    assert result == expected_result


@pytest.mark.now(NOW.isoformat())
@pytest.mark.parametrize(
    ['url', 'headers'],
    [
        ('/v1/get_additional_meta', {'YaTaxi-Api-Key': 'api-key'}),
        ('/v1/enrich_meta', {}),
    ],
)
@pytest.mark.parametrize(
    [
        'data',
        'order_proc_data',
        'order_data',
        'expected_order_id',
        'expected_result',
    ],
    [
        (
            {
                'metadata': {
                    'order_id': 'order_id',
                    'driver_license': 'driver_license',
                    'park_db_id': 'some_park_id',
                },
            },
            {
                '_id': 'order_id',
                'order': {
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'user_id': 'user_id1',
                    'user_locale': 'en',
                    'city': 'Москва',
                    'performer': {
                        'car_number': 'car_number',
                        'phone': ['+791234', '+75678'],
                        'clid': '100503',
                        'uuid': 'driver_uuid3',
                        'db_id': 'some_park_id3',
                        'taxi_alias': {'id': 'alias_id_1'},
                        'tariff': {'class': 'ultima'},
                    },
                    'coupon': {
                        'id': '123',
                        'was_used': True,
                        'valid': True,
                        'value': 10,
                    },
                    'cost': 100,
                    'nz': 'erevan',
                    'request': {'comment': 'precomment'},
                    'cashback_cost': 10.0,
                },
            },
            {
                '_id': 'order_id',
                'payment_tech': {
                    'type': 'corp',
                    'user_to_pay': {'ride': 1234567, 'tips': 0},
                    'sum_to_pay': {'ride': 7654321, 'tips': 0},
                },
            },
            'order_id',
            {
                'metadata': {
                    'baby_seat_services': False,
                    'billing_status': False,
                    'cancel_distance_raw': 0,
                    'car_id': 'some_car_id',
                    'car_number': '123XYZ',
                    'city': 'москва',
                    'clid': '100500',
                    'cost_paid_supply': 0,
                    'country': 'arm',
                    'coupon': True,
                    'coupon_use_value': 10,
                    'coupon_used': True,
                    'created': '2018-06-15T12:34:00+0000',
                    'complete_rides': 0,
                    'phone_type': 'uber',
                    'user_id': 'user_id1',
                    'user_phone': '+79250325273',
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'dif_ordercost_surge_surgecharge': 0.0,
                    'difference_fact_coupon_and_cost': -90,
                    'discount_ya_plus': False,
                    'door_to_door': False,
                    'driver_arrived': False,
                    'driver_late_time': 0.0,
                    'driver_license': 'driver_license',
                    'driver_locale': 'ru',
                    'driver_phone': '+791234',
                    'driver_uuid': 'driver_uuid',
                    'driver_waiting_time': 0,
                    'final_ride_duration': 0.0,
                    'fixed_price_order_flg': False,
                    'final_transaction_status': 'no_transactions_yet',
                    'grade_branding': False,
                    'integration_event': True,
                    'is_compensation': False,
                    'is_refund': False,
                    'moved_to_cash_by_antifraud': False,
                    'order_alias_id': 'alias_id_1',
                    'order_cost': 90,
                    'order_currency': 'RUB',
                    'order_distance_raw': 0,
                    'order_id': 'order_id',
                    'order_pre_distance_raw': 0,
                    'order_pre_time_raw': 0,
                    'order_pre_time_raw_minutes': 0.0,
                    'order_tips': False,
                    'success_order_flg': False,
                    'sum_to_pay_ride': 765.4321,
                    'sum_to_pay_tips': 0,
                    'paid_cancel_tag': False,
                    'paid_supply': False,
                    'park_driver_profile_id': 'some_park_id_driver_uuid',
                    'park_car_id': 'some_park_id_some_car_id',
                    'park_city': 'moscow',
                    'park_country': 'rus',
                    'park_db_id': 'some_park_id',
                    'park_name': 'park_name',
                    'park_phone': '+79123',
                    'payment_decisions': False,
                    'payment_type': 'corp',
                    'payment_type_changed_to_cash': False,
                    'point_b_changed': False,
                    'precomment': 'precomment',
                    'refund_tips': 122.4567,
                    'refund_tips_minus': 1,
                    'several_ride_transactions': False,
                    'surge_order_flg': False,
                    'tariff': 'ultima',
                    'tariff_currency': 'RUB',
                    'taximeter_version': '7.07',
                    'transportation_animals': False,
                    'unique_driver_id': 'some_unique_driver_id',
                    'user_locale': 'en',
                    'user_to_pay_ride': 123.4567,
                    'user_to_pay_tips': 0,
                    'user_type': 'corp',
                    'waiting': 'Нет',
                    'waiting_bool': False,
                    'waiting_cost': 0,
                    'waiting_time_raw': 0,
                    'waiting_time_raw_minutes': 0.0,
                    'yandex_provider': True,
                    'zone': 'erevan',
                    'performer_car_number': 'car_number',
                    'performer_clid': '100503',
                    'performer_driver_license': 'DRIVER_LICENSE',
                    'performer_driver_locale': 'ru',
                    'performer_driver_phone': '+791234',
                    'performer_driver_uuid': 'driver_uuid3',
                    'performer_park_city': 'moscow',
                    'performer_park_country': 'rus',
                    'performer_park_db_id': 'some_park_id3',
                    'performer_park_driver_profile_id': (
                        'some_park_id3_driver_uuid3'
                    ),
                    'performer_park_name': 'park_name3',
                    'performer_park_phone': '+7912333',
                    'performer_taximeter_version': '7.07',
                    'performer_unique_driver_id': 'some_unique_driver_id3',
                    'eats_courier_id': '59de5222293145d09d31cd1604f8f656',
                    'priority_list': {
                        'Дезинфекция машины': 2,
                        'Поездки с музыкой': 2,
                    },
                    'order_disp_status': 'some_reason',
                    'amount_cashback': 10.0,
                    'amount_charity': 15.0,
                    'multipoints': False,
                    'multiorder': False,
                    'time_request': 0.0,
                },
                'status': 'ok',
            },
        ),
        (
            {
                'metadata': {
                    'order_id': 'order_id',
                    'driver_uuid': 'driver_uuid',
                },
            },
            {
                '_id': 'order_id',
                'order': {
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'user_id': 'user_id1',
                    'user_locale': 'en',
                    'city': 'Москва',
                    'performer': {
                        'car_number': 'car_number',
                        'phone': ['+791234', '+75678'],
                        'clid': '100503',
                        'uuid': 'driver_uuid3',
                        'db_id': 'some_park_id3',
                        'taxi_alias': {'id': 'alias_id_1'},
                        'tariff': {'class': 'ultima'},
                    },
                    'coupon': {
                        'id': '123',
                        'was_used': True,
                        'valid': True,
                        'value': 10,
                    },
                    'cost': 100,
                    'nz': 'erevan',
                    'request': {'comment': 'precomment'},
                    'cashback_cost': 10.0,
                    'multiorder_order_number': 0,
                },
            },
            {
                '_id': 'order_id',
                'payment_tech': {
                    'type': 'corp',
                    'user_to_pay': {'ride': 1234567, 'tips': 0},
                    'sum_to_pay': {'ride': 7654321, 'tips': 0},
                },
            },
            'order_id',
            {
                'metadata': {
                    'baby_seat_services': False,
                    'billing_status': False,
                    'cancel_distance_raw': 0,
                    'car_id': 'some_car_id',
                    'car_number': '123XYZ',
                    'city': 'москва',
                    'clid': '100500',
                    'cost_paid_supply': 0,
                    'country': 'arm',
                    'coupon': True,
                    'coupon_use_value': 10,
                    'coupon_used': True,
                    'created': '2018-06-15T12:34:00+0000',
                    'complete_rides': 0,
                    'phone_type': 'uber',
                    'user_id': 'user_id1',
                    'user_phone': '+79250325273',
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'dif_ordercost_surge_surgecharge': 0.0,
                    'difference_fact_coupon_and_cost': -90,
                    'discount_ya_plus': False,
                    'door_to_door': False,
                    'driver_arrived': False,
                    'driver_late_time': 0.0,
                    'driver_license': 'driver_license',
                    'driver_locale': 'ru',
                    'driver_phone': '+791234',
                    'driver_uuid': 'driver_uuid',
                    'driver_waiting_time': 0,
                    'final_ride_duration': 0.0,
                    'fixed_price_order_flg': False,
                    'final_transaction_status': 'no_transactions_yet',
                    'grade_branding': False,
                    'integration_event': True,
                    'is_compensation': False,
                    'is_refund': False,
                    'moved_to_cash_by_antifraud': False,
                    'order_alias_id': 'alias_id_1',
                    'order_cost': 90,
                    'order_currency': 'RUB',
                    'order_distance_raw': 0,
                    'order_id': 'order_id',
                    'order_pre_distance_raw': 0,
                    'order_pre_time_raw': 0,
                    'order_pre_time_raw_minutes': 0.0,
                    'order_tips': False,
                    'success_order_flg': False,
                    'sum_to_pay_ride': 765.4321,
                    'sum_to_pay_tips': 0,
                    'paid_cancel_tag': False,
                    'paid_supply': False,
                    'park_driver_profile_id': 'some_park_id_driver_uuid',
                    'park_car_id': 'some_park_id_some_car_id',
                    'park_city': 'moscow',
                    'park_country': 'rus',
                    'park_db_id': 'some_park_id',
                    'park_name': 'park_name',
                    'park_phone': '+79123',
                    'payment_decisions': False,
                    'payment_type': 'corp',
                    'payment_type_changed_to_cash': False,
                    'point_b_changed': False,
                    'precomment': 'precomment',
                    'refund_tips': 122.4567,
                    'refund_tips_minus': 1,
                    'several_ride_transactions': False,
                    'surge_order_flg': False,
                    'tariff': 'ultima',
                    'tariff_currency': 'RUB',
                    'taximeter_version': '7.07',
                    'transportation_animals': False,
                    'unique_driver_id': 'some_unique_driver_id',
                    'user_locale': 'en',
                    'user_to_pay_ride': 123.4567,
                    'user_to_pay_tips': 0,
                    'user_type': 'corp',
                    'waiting': 'Нет',
                    'waiting_bool': False,
                    'waiting_cost': 0,
                    'waiting_time_raw': 0,
                    'waiting_time_raw_minutes': 0.0,
                    'yandex_provider': True,
                    'zone': 'erevan',
                    'performer_car_number': 'car_number',
                    'performer_clid': '100503',
                    'performer_driver_license': 'DRIVER_LICENSE',
                    'performer_driver_locale': 'ru',
                    'performer_driver_phone': '+791234',
                    'performer_driver_uuid': 'driver_uuid3',
                    'performer_park_city': 'moscow',
                    'performer_park_country': 'rus',
                    'performer_park_db_id': 'some_park_id3',
                    'performer_park_driver_profile_id': (
                        'some_park_id3_driver_uuid3'
                    ),
                    'performer_park_name': 'park_name3',
                    'performer_park_phone': '+7912333',
                    'performer_taximeter_version': '7.07',
                    'performer_unique_driver_id': 'some_unique_driver_id3',
                    'eats_courier_id': '59de5222293145d09d31cd1604f8f656',
                    'priority_list': {
                        'Дезинфекция машины': 2,
                        'Поездки с музыкой': 2,
                    },
                    'order_disp_status': 'some_reason',
                    'amount_cashback': 10.0,
                    'amount_charity': 15.0,
                    'multipoints': False,
                    'multiorder': True,
                    'time_request': 0.0,
                },
                'status': 'ok',
            },
        ),
        (
            {
                'metadata': {
                    'order_id': 'order_id',
                    'driver_license': 'driver_license',
                    'park_db_id': 'some_park_id',
                },
                'suppress_conflict': True,
            },
            {
                '_id': 'order_id',
                'order': {
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'user_id': 'user_id1',
                    'user_locale': 'en',
                    'city': 'Москва',
                    'performer': {
                        'car_number': 'car_number',
                        'phone': ['+791234', '+75678'],
                        'clid': '100503',
                        'uuid': 'driver_uuid3',
                        'db_id': 'some_park_id3',
                        'taxi_alias': {'id': 'alias_id_1'},
                        'tariff': {'class': 'ultima'},
                    },
                    'coupon': {
                        'id': '123',
                        'was_used': True,
                        'valid': True,
                        'value': 10,
                    },
                    'cost': 100,
                    'nz': 'erevan',
                    'request': {'comment': 'precomment'},
                    'cashback_cost': 10.0,
                    'multiorder_order_number': 0,
                },
            },
            {
                '_id': 'order_id',
                'payment_tech': {
                    'type': 'corp',
                    'user_to_pay': {'ride': 1234567, 'tips': 0},
                    'sum_to_pay': {'ride': 7654321, 'tips': 0},
                },
            },
            'order_id',
            {
                'metadata': {
                    'baby_seat_services': False,
                    'billing_status': False,
                    'cancel_distance_raw': 0,
                    'car_id': 'some_car_id',
                    'car_number': 'car_number',
                    'city': 'москва',
                    'clid': '100503',
                    'cost_paid_supply': 0,
                    'country': 'arm',
                    'coupon': True,
                    'coupon_use_value': 10,
                    'coupon_used': True,
                    'created': '2018-06-15T12:34:00+0000',
                    'complete_rides': 0,
                    'phone_type': 'uber',
                    'user_id': 'user_id1',
                    'user_phone': '+79250325273',
                    'user_phone_id': '539eb65be7e5b1f53980dfa9',
                    'dif_ordercost_surge_surgecharge': 0.0,
                    'difference_fact_coupon_and_cost': -90,
                    'discount_ya_plus': False,
                    'door_to_door': False,
                    'driver_arrived': False,
                    'driver_late_time': 0.0,
                    'driver_license': 'DRIVER_LICENSE',
                    'driver_locale': 'ru',
                    'driver_phone': '+791234',
                    'driver_uuid': 'driver_uuid3',
                    'driver_waiting_time': 0,
                    'final_ride_duration': 0.0,
                    'fixed_price_order_flg': False,
                    'final_transaction_status': 'no_transactions_yet',
                    'grade_branding': False,
                    'integration_event': True,
                    'is_compensation': False,
                    'is_refund': False,
                    'moved_to_cash_by_antifraud': False,
                    'order_alias_id': 'alias_id_1',
                    'order_cost': 90,
                    'order_currency': 'RUB',
                    'order_distance_raw': 0,
                    'order_id': 'order_id',
                    'order_pre_distance_raw': 0,
                    'order_pre_time_raw': 0,
                    'order_pre_time_raw_minutes': 0.0,
                    'order_tips': False,
                    'success_order_flg': False,
                    'sum_to_pay_ride': 765.4321,
                    'sum_to_pay_tips': 0,
                    'paid_cancel_tag': False,
                    'paid_supply': False,
                    'park_driver_profile_id': 'some_park_id3_driver_uuid3',
                    'park_car_id': 'some_park_id_some_car_id',
                    'park_city': 'moscow',
                    'park_country': 'rus',
                    'park_db_id': 'some_park_id3',
                    'park_name': 'park_name3',
                    'park_phone': '+7912333',
                    'payment_decisions': False,
                    'payment_type': 'corp',
                    'payment_type_changed_to_cash': False,
                    'point_b_changed': False,
                    'precomment': 'precomment',
                    'refund_tips': 122.4567,
                    'refund_tips_minus': 1,
                    'several_ride_transactions': False,
                    'surge_order_flg': False,
                    'tariff': 'ultima',
                    'tariff_currency': 'RUB',
                    'taximeter_version': '7.07',
                    'transportation_animals': False,
                    'unique_driver_id': 'some_unique_driver_id3',
                    'user_locale': 'en',
                    'user_to_pay_ride': 123.4567,
                    'user_to_pay_tips': 0,
                    'user_type': 'corp',
                    'waiting': 'Нет',
                    'waiting_bool': False,
                    'waiting_cost': 0,
                    'waiting_time_raw': 0,
                    'waiting_time_raw_minutes': 0.0,
                    'yandex_provider': True,
                    'zone': 'erevan',
                    'performer_car_number': 'car_number',
                    'performer_clid': '100503',
                    'performer_driver_license': 'DRIVER_LICENSE',
                    'performer_driver_locale': 'ru',
                    'performer_driver_phone': '+791234',
                    'performer_driver_uuid': 'driver_uuid3',
                    'performer_park_city': 'moscow',
                    'performer_park_country': 'rus',
                    'performer_park_db_id': 'some_park_id3',
                    'performer_park_driver_profile_id': (
                        'some_park_id3_driver_uuid3'
                    ),
                    'performer_park_name': 'park_name3',
                    'performer_park_phone': '+7912333',
                    'performer_taximeter_version': '7.07',
                    'performer_unique_driver_id': 'some_unique_driver_id3',
                    'eats_courier_id': '59de5222293145d09d31cd1604f8f656',
                    'priority_list': {
                        'Дезинфекция машины': 2,
                        'Поездки с музыкой': 2,
                    },
                    'order_disp_status': 'some_reason',
                    'amount_cashback': 10.0,
                    'amount_charity': 15.0,
                    'multipoints': False,
                    'multiorder': True,
                    'time_request': 0.0,
                },
                'status': 'ok',
            },
        ),
    ],
)
@pytest.mark.config(
    SUPPORT_INFO_CHATTERBOX_TAGS_SEARCH=False,
    SUPPORT_INFO_FILL_LEGACY_PERFORMER_FIELDS=True,
    SUPPORT_INFO_KEEP_OWNER_DRIVER_FIELDS=True,
)
async def test_additional_meta_keep_owner_driver_fields(
        support_info_client,
        support_info_app,
        patch_aiohttp_session,
        patch_quality_control_cpp_empty,
        mock_billing_reports_empty,
        order_archive_mock,
        response_mock,
        mock_select_rows,
        mock_get_tags,
        mock_get_user_phones,
        mock_get_users,
        mock_personal,
        mockserver,
        mock_driver_profiles,
        mock_driver_trackstory,
        mock_driver_priority,
        mock_persey_payments,
        mock_taxi_fleet,
        url,
        headers,
        data,
        order_proc_data,
        order_data,
        expected_order_id,
        expected_result,
):
    @mockserver.json_handler('/user-api/user_phones/by_number/retrieve_bulk')
    def _mock_user_api(request):
        return {
            'items': [
                {
                    'id': '5fb68e9f15a2887e0a040177',
                    'phone': '+70000000000',
                    'type': 'yandex',
                },
            ],
        }

    if order_proc_data:
        order_archive_mock.set_order_proc(order_proc_data)

    archive_api_url = support_info_app.settings.ARCHIVE_API_URL

    @patch_aiohttp_session(archive_api_url, 'POST')
    def _dummy_archive_api_request(method, url, **kwargs):
        assert kwargs['json']['id'] == expected_order_id
        assert url == archive_api_url + '/archive/order'
        if order_data:
            return response_mock(json={'doc': order_data})
        return response_mock(status=404)

    response = await support_info_client.post(url, json=data, headers=headers)
    assert response.status == 200
    result = await response.json()
    assert result == expected_result
