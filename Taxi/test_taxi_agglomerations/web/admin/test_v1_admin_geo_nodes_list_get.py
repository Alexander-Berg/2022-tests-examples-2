import pytest

PARAMETRIZE: list = [
    pytest.param(
        {},
        200,
        {
            'items': [
                {
                    'currency': 'KZT',
                    'hierarchy_type': 'BR',
                    'name': 'br_kazakhstan',
                    'tanker_key': 'name.br_kazakhstan',
                    'name_en': 'Kazakhstan',
                    'name_ru': 'Казахстан',
                    'node_type': 'country',
                    'parents': ['br_root'],
                    'region_id': '159',
                },
                {
                    'children': ['br_moscow_adm', 'br_moscow_middle_region'],
                    'hierarchy_type': 'BR',
                    'name': 'br_moscow',
                    'tanker_key': 'name.br_moscow',
                    'name_en': 'Moscow',
                    'name_ru': 'Москва',
                    'node_type': 'agglomeration',
                    'oebs_mvp_id': 'MSKc',
                    'operational_managers': ['susloparov'],
                    'macro_managers': ['mikhailra'],
                    'parents': ['br_moskovskaja_obl', 'fi_root', 'op_root'],
                    'meta_tags': ['agglomeration_with_only_br_parent'],
                },
                {
                    'hierarchy_type': 'BR',
                    'name': 'br_moscow_adm',
                    'tanker_key': 'name.br_moscow_adm',
                    'name_en': 'Moscow (adm)',
                    'name_ru': 'Москва (адм)',
                    'node_type': 'node',
                    'oebs_mvp_id': 'MSKc',
                    'parents': ['br_moscow'],
                    'tariff_zones': ['boryasvo', 'moscow', 'vko'],
                    'region_id': '213',
                },
                {
                    'hierarchy_type': 'BR',
                    'name': 'br_moscow_middle_region',
                    'tanker_key': 'name.br_moscow_middle_region',
                    'name_en': 'Moscow (Middle Region)',
                    'oebs_mvp_id': 'br_moscow_oebs_mvp_id',
                    'name_ru': 'Москва (среднее)',
                    'node_type': 'node',
                    'parents': ['br_moscow'],
                },
                {
                    'children': ['br_moscow'],
                    'hierarchy_type': 'BR',
                    'name': 'br_moskovskaja_obl',
                    'tanker_key': 'name.br_moskovskaja_obl',
                    'name_en': 'Moscow Region',
                    'name_ru': 'Московская область',
                    'node_type': 'node',
                    'parents': ['br_tsentralnyj_fo'],
                    'region_id': '1',
                },
                {
                    'children': ['br_russia', 'br_kazakhstan'],
                    'hierarchy_type': 'BR',
                    'name': 'br_root',
                    'tanker_key': 'name.br_root',
                    'name_en': 'Basic Hierarchy',
                    'name_ru': 'Базовая иерархия',
                    'node_type': 'root',
                },
                {
                    'children': ['br_tsentralnyj_fo'],
                    'currency': 'RUB',
                    'hierarchy_type': 'BR',
                    'name': 'br_russia',
                    'tanker_key': 'name.br_russia',
                    'name_en': 'Russia',
                    'name_ru': 'Россия',
                    'node_type': 'country',
                    'operational_managers': ['berenda'],
                    'parents': ['br_root'],
                    'region_id': '225',
                },
                {
                    'children': ['br_moskovskaja_obl'],
                    'hierarchy_type': 'BR',
                    'name': 'br_tsentralnyj_fo',
                    'tanker_key': 'name.br_tsentralnyj_fo',
                    'name_en': 'Central Federal District',
                    'name_ru': 'Центральный ФО',
                    'node_type': 'node',
                    'parents': ['br_russia'],
                    'region_id': '3',
                    'tags': ['federal district'],
                },
                {
                    'hierarchy_type': 'FI',
                    'name': 'fi_emea',
                    'tanker_key': 'name.fi_emea',
                    'name_en': 'EMEA',
                    'name_ru': 'EMEA',
                    'node_type': 'node',
                    'parents': ['fi_root'],
                },
                {
                    'children': ['br_moscow', 'fi_emea'],
                    'hierarchy_type': 'FI',
                    'name': 'fi_root',
                    'tanker_key': 'name.fi_root',
                    'name_en': 'Financial Regions',
                    'name_ru': 'Финансовые регионы',
                    'node_type': 'root',
                },
                {
                    'children': ['br_moscow'],
                    'hierarchy_type': 'OP',
                    'name': 'op_root',
                    'tanker_key': 'name.op_root',
                    'name_en': 'Operational hierarchy',
                    'name_ru': 'Операционная иерархия',
                    'node_type': 'root',
                },
            ],
        },
        id='without_filters',
    ),
    pytest.param(
        {'hierarchy_type': 'BR'},
        200,
        {
            'items': [
                {
                    'currency': 'KZT',
                    'hierarchy_type': 'BR',
                    'name': 'br_kazakhstan',
                    'tanker_key': 'name.br_kazakhstan',
                    'name_en': 'Kazakhstan',
                    'name_ru': 'Казахстан',
                    'node_type': 'country',
                    'parents': ['br_root'],
                    'region_id': '159',
                },
                {
                    'children': ['br_moscow_adm', 'br_moscow_middle_region'],
                    'hierarchy_type': 'BR',
                    'name': 'br_moscow',
                    'tanker_key': 'name.br_moscow',
                    'name_en': 'Moscow',
                    'name_ru': 'Москва',
                    'node_type': 'agglomeration',
                    'oebs_mvp_id': 'MSKc',
                    'operational_managers': ['susloparov'],
                    'macro_managers': ['mikhailra'],
                    'parents': ['br_moskovskaja_obl', 'fi_root', 'op_root'],
                    'meta_tags': ['agglomeration_with_only_br_parent'],
                },
                {
                    'hierarchy_type': 'BR',
                    'name': 'br_moscow_adm',
                    'tanker_key': 'name.br_moscow_adm',
                    'name_en': 'Moscow (adm)',
                    'name_ru': 'Москва (адм)',
                    'node_type': 'node',
                    'oebs_mvp_id': 'MSKc',
                    'parents': ['br_moscow'],
                    'tariff_zones': ['boryasvo', 'moscow', 'vko'],
                    'region_id': '213',
                },
                {
                    'hierarchy_type': 'BR',
                    'name': 'br_moscow_middle_region',
                    'tanker_key': 'name.br_moscow_middle_region',
                    'oebs_mvp_id': 'br_moscow_oebs_mvp_id',
                    'name_en': 'Moscow (Middle Region)',
                    'name_ru': 'Москва (среднее)',
                    'node_type': 'node',
                    'parents': ['br_moscow'],
                },
                {
                    'children': ['br_moscow'],
                    'hierarchy_type': 'BR',
                    'name': 'br_moskovskaja_obl',
                    'tanker_key': 'name.br_moskovskaja_obl',
                    'name_en': 'Moscow Region',
                    'name_ru': 'Московская область',
                    'node_type': 'node',
                    'parents': ['br_tsentralnyj_fo'],
                    'region_id': '1',
                },
                {
                    'children': ['br_russia', 'br_kazakhstan'],
                    'hierarchy_type': 'BR',
                    'name': 'br_root',
                    'tanker_key': 'name.br_root',
                    'name_en': 'Basic Hierarchy',
                    'name_ru': 'Базовая иерархия',
                    'node_type': 'root',
                },
                {
                    'children': ['br_tsentralnyj_fo'],
                    'currency': 'RUB',
                    'hierarchy_type': 'BR',
                    'name': 'br_russia',
                    'tanker_key': 'name.br_russia',
                    'name_en': 'Russia',
                    'name_ru': 'Россия',
                    'node_type': 'country',
                    'operational_managers': ['berenda'],
                    'parents': ['br_root'],
                    'region_id': '225',
                },
                {
                    'children': ['br_moskovskaja_obl'],
                    'hierarchy_type': 'BR',
                    'name': 'br_tsentralnyj_fo',
                    'tanker_key': 'name.br_tsentralnyj_fo',
                    'name_en': 'Central Federal District',
                    'name_ru': 'Центральный ФО',
                    'node_type': 'node',
                    'parents': ['br_russia'],
                    'region_id': '3',
                    'tags': ['federal district'],
                },
            ],
        },
        id='hierarchy_type_filter',
    ),
    pytest.param(
        {'hierarchy_type': 'BR', 'node_types': 'root,country'},
        200,
        {
            'items': [
                {
                    'currency': 'KZT',
                    'hierarchy_type': 'BR',
                    'name': 'br_kazakhstan',
                    'tanker_key': 'name.br_kazakhstan',
                    'name_en': 'Kazakhstan',
                    'name_ru': 'Казахстан',
                    'node_type': 'country',
                    'parents': ['br_root'],
                    'region_id': '159',
                },
                {
                    'children': ['br_russia', 'br_kazakhstan'],
                    'hierarchy_type': 'BR',
                    'name': 'br_root',
                    'tanker_key': 'name.br_root',
                    'name_en': 'Basic Hierarchy',
                    'name_ru': 'Базовая иерархия',
                    'node_type': 'root',
                },
                {
                    'children': ['br_tsentralnyj_fo'],
                    'currency': 'RUB',
                    'hierarchy_type': 'BR',
                    'name': 'br_russia',
                    'tanker_key': 'name.br_russia',
                    'name_en': 'Russia',
                    'name_ru': 'Россия',
                    'node_type': 'country',
                    'operational_managers': ['berenda'],
                    'parents': ['br_root'],
                    'region_id': '225',
                },
            ],
        },
        id='hierarchy_type_and_node_types_filters',
    ),
    pytest.param(
        {'parent_name': 'br_root'},
        200,
        {
            'items': [
                {
                    'currency': 'KZT',
                    'hierarchy_type': 'BR',
                    'name': 'br_kazakhstan',
                    'tanker_key': 'name.br_kazakhstan',
                    'name_en': 'Kazakhstan',
                    'name_ru': 'Казахстан',
                    'node_type': 'country',
                    'parents': ['br_root'],
                    'region_id': '159',
                },
                {
                    'children': ['br_tsentralnyj_fo'],
                    'currency': 'RUB',
                    'hierarchy_type': 'BR',
                    'name': 'br_russia',
                    'tanker_key': 'name.br_russia',
                    'name_en': 'Russia',
                    'name_ru': 'Россия',
                    'node_type': 'country',
                    'operational_managers': ['berenda'],
                    'parents': ['br_root'],
                    'region_id': '225',
                },
            ],
        },
        id='parent_name_filter',
    ),
    pytest.param(
        {'parent_name': 'br_invalid'},
        200,
        {'items': []},
        id='invalid_parent_name_filter',
    ),
    pytest.param(
        {'parent_name': 'br_root', 'names': 'br_kazakhstan,br_moscow'},
        200,
        {
            'items': [
                {
                    'currency': 'KZT',
                    'hierarchy_type': 'BR',
                    'name': 'br_kazakhstan',
                    'tanker_key': 'name.br_kazakhstan',
                    'name_en': 'Kazakhstan',
                    'name_ru': 'Казахстан',
                    'node_type': 'country',
                    'parents': ['br_root'],
                    'region_id': '159',
                },
            ],
        },
        id='parent_name_and_names_filters',
    ),
    pytest.param(
        {'tariff_zones': 'moscow,some_with_\'backtick'},
        200,
        {
            'items': [
                {
                    'hierarchy_type': 'BR',
                    'name': 'br_moscow_adm',
                    'tanker_key': 'name.br_moscow_adm',
                    'name_en': 'Moscow (adm)',
                    'name_ru': 'Москва (адм)',
                    'node_type': 'node',
                    'oebs_mvp_id': 'MSKc',
                    'parents': ['br_moscow'],
                    'tariff_zones': ['boryasvo', 'moscow', 'vko'],
                    'region_id': '213',
                },
            ],
        },
        id='by_tariff_zone',
    ),
    pytest.param(
        {'hierarchy_type': 'BR', 'names': 'br_moscow,br_kazakhstan'},
        200,
        {
            'items': [
                {
                    'currency': 'KZT',
                    'hierarchy_type': 'BR',
                    'name': 'br_kazakhstan',
                    'tanker_key': 'name.br_kazakhstan',
                    'name_en': 'Kazakhstan',
                    'name_ru': 'Казахстан',
                    'node_type': 'country',
                    'parents': ['br_root'],
                    'region_id': '159',
                },
                {
                    'children': ['br_moscow_adm', 'br_moscow_middle_region'],
                    'hierarchy_type': 'BR',
                    'name': 'br_moscow',
                    'tanker_key': 'name.br_moscow',
                    'name_en': 'Moscow',
                    'name_ru': 'Москва',
                    'node_type': 'agglomeration',
                    'oebs_mvp_id': 'MSKc',
                    'operational_managers': ['susloparov'],
                    'macro_managers': ['mikhailra'],
                    'parents': ['br_moskovskaja_obl', 'fi_root', 'op_root'],
                    'meta_tags': ['agglomeration_with_only_br_parent'],
                },
            ],
        },
        id='hierarchy_type_and_names_filters',
    ),
    pytest.param(
        {'hierarchy_type': 'FI'},
        200,
        {
            'items': [
                {
                    'hierarchy_type': 'FI',
                    'name': 'fi_emea',
                    'tanker_key': 'name.fi_emea',
                    'name_en': 'EMEA',
                    'name_ru': 'EMEA',
                    'node_type': 'node',
                    'parents': ['fi_root'],
                },
                {
                    'hierarchy_type': 'FI',
                    'name': 'fi_root',
                    'tanker_key': 'name.fi_root',
                    'name_en': 'Financial Regions',
                    'name_ru': 'Финансовые регионы',
                    'node_type': 'root',
                    'children': ['br_moscow', 'fi_emea'],
                },
            ],
        },
        id='hierarchy_type_fi_filter',
    ),
    pytest.param(
        {'hierarchy_type': 'OP'},
        200,
        {
            'items': [
                {
                    'hierarchy_type': 'OP',
                    'name': 'op_root',
                    'tanker_key': 'name.op_root',
                    'name_en': 'Operational hierarchy',
                    'name_ru': 'Операционная иерархия',
                    'node_type': 'root',
                    'children': ['br_moscow'],
                },
            ],
        },
        id='hierarchy_type_op_filter',
    ),
    ({'hierarchy_type': 'INVALID'}, 200, {'items': []}),
]


@pytest.mark.parametrize(
    'query, expected_status, expected_content', PARAMETRIZE,
)
@pytest.mark.filldb()
async def test_v1_admin_geo_nodes_list_get(
        web_app_client, query, expected_status, expected_content,
):
    response = await web_app_client.get(
        'v1/admin/geo-nodes/list/', params=query,
    )
    assert response.status == expected_status
    assert await response.json() == expected_content
