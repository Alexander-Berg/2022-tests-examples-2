#pragma once

/* THIS FILE IS AUTOGENERATED, DON'T EDIT! */

#include <api_base/cache_dumper_component.hpp>

#include <api_over_db/cache.hpp>
#include <api_over_db/client_cache.hpp>
#include <api_over_db/dump_context.hpp>

#include <taxi_config/taxi_config.hpp>

namespace api_over_db::components {

namespace replica1 {

struct DumperTraits {
  static constexpr const char* kComponentName = "some1-dump-component";

  using CacheType = api_over_db::components::replica1::Cache;

  using CacheModel = api_over_db::components::replica1::CacheModel;

  static constexpr const api_over_db::DumpContext& kDumpContext =
      api_over_db::replica1::kDumpContext;

  static constexpr const char* kPeriodicTaskName = "dumper-replica1-task";

  static constexpr bool kClientMode = false;

  using TaxiConfig = ::taxi_config::TaxiConfig;
};

using CacheDumper = api_over_db::components::CacheDumper<DumperTraits>;

}
namespace replica2 {

struct DumperTraits {
  static constexpr const char* kComponentName = "some2-dump-component";

  using CacheType = api_over_db::components::replica2::Cache;

  using CacheModel = api_over_db::components::replica2::CacheModel;

  static constexpr const api_over_db::DumpContext& kDumpContext =
      api_over_db::replica2::kDumpContext;

  static constexpr const char* kPeriodicTaskName = "dumper-replica2-task";

  static constexpr bool kClientMode = false;

  using TaxiConfig = ::taxi_config::TaxiConfig;
};

using CacheDumper = api_over_db::components::CacheDumper<DumperTraits>;

}
namespace replica3 {

struct DumperTraits {
  static constexpr const char* kComponentName = "some3-dump-component";

  using CacheType = api_over_db::components::replica3::Cache;

  using CacheModel = api_over_db::components::replica3::CacheModel;

  static constexpr const api_over_db::DumpContext& kDumpContext =
      api_over_db::replica3::kDumpContext;

  static constexpr const char* kPeriodicTaskName = "dumper-replica3-task";

  static constexpr bool kClientMode = false;

  using TaxiConfig = ::taxi_config::TaxiConfig;
};

using CacheDumper = api_over_db::components::CacheDumper<DumperTraits>;

}
}
