{
  "name": "calc_surge",
  "stages": [
    {
      "conditions": [],
      "in_bindings": [],
      "name": "fetch_settings",
      "resources": [
        {
          "name": "places_settings"
        }
      ],
      "source_code": "return {places_settings: {}}"
    },
    {
      "conditions": [],
      "in_bindings": [
        {
          "domain": "input",
          "query": "places"
        },
        {
          "domain": "resource",
          "query": "places_settings"
        },
        {
          "domain": "input",
          "query": "request_id"
        },
        {
          "domain": "input",
          "query": "geohash"
        }
      ],
      "name": "fetch_counters",
      "resources": [
        {
          "name": "eda_supply"
        }
      ],
      "source_code": "let supply_params = [];\nfor (let i in places) {\n  let place = places[i];\n  let params = places_settings[place.place_id][place.zone_id];\n  supply_params.push({\n request_id: request_id,\n   geohash: geohash,\n  place_id: place.place_id,\n    region_id: params.region_id,\n    time_quants: 1\n  });\n}\nreturn {eda_supply: supply_params};"
    },
    {
      "conditions": [],
      "in_bindings": [
        {
          "domain": "input",
          "query": "places.*{idx:place}"
        },
        {
          "domain": "resource",
          "query": "eda_supply[place.place_id][place.zone_id]{place_supply}"
        }
      ],
      "name": "save_counters",
      "out_bindings": [
        {
          "alias": "data",
          "query": "places_out[idx]"
        }
      ],
      "source_code": "return {data: {place_id: place.place_id, zone_id: place.zone_id, result: {total: 0, extra: {place_supply: place_supply}}}};"
    }
  ],
  "state": "active"
}
