{
  "experiments": [
    {
      "clauses": [
        {
          "enabled": true,
          "extension_method": "replace",
          "is_paired_signal": false,
          "is_signal": false,
          "is_tech_group": false,
          "predicate": {
            "init": {
              "arg_name": "order_status",
              "set": [
                "created",
                "payed"
              ],
              "set_elem_type": "string"
            },
            "type": "in_set"
          },
          "title": "1",
          "value": {
            "actions": [
              {
                "payload": {
                  "delay_sec": 0,
                  "voice_line": "sorry_restaurant_not_confirmed"
                },
                "type": "eater_robocall"
              },
              {
                "payload": {
                  "channels": [
                    "push",
                    "taxi_push"
                  ],
                  "notification_code": "lateness.no_confirmed"
                },
                "type": "eater_notification"
              }
            ]
          }
        },
        {
          "enabled": true,
          "extension_method": "replace",
          "is_paired_signal": false,
          "is_signal": false,
          "is_tech_group": false,
          "predicate": {
            "init": {
              "arg_name": "delivery_type",
              "arg_type": "string",
              "value": "marketplace"
            },
            "type": "eq"
          },
          "title": "1",
          "value": {
            "actions": [
              {
                "payload": {
                  "delay_sec": 0,
                  "voice_line": "sorry_order_on_the_way"
                },
                "type": "eater_robocall"
              },
              {
                "payload": {
                  "channels": [
                    "push",
                    "taxi_push"
                  ],
                  "notification_code": "lateness.order_on_the_way"
                },
                "type": "eater_notification"
              }
            ]
          }
        },
        {
          "enabled": true,
          "extension_method": "replace",
          "is_paired_signal": false,
          "is_signal": false,
          "is_tech_group": false,
          "predicate": {
            "init": {
              "arg_name": "courier_status",
              "arg_type": "string",
              "value": "is_not_assigned"
            },
            "type": "eq"
          },
          "title": "1",
          "value": {
            "actions": [
              {
                "payload": {
                  "delay_sec": 0,
                  "voice_line": "sorry_courier_not_assigned"
                },
                "type": "eater_robocall"
              },
              {
                "payload": {
                  "channels": [
                    "push",
                    "taxi_push"
                  ],
                  "notification_code": "lateness.courier_not_assigned"
                },
                "type": "eater_notification"
              }
            ]
          }
        },
        {
          "enabled": true,
          "extension_method": "replace",
          "is_paired_signal": false,
          "is_signal": false,
          "is_tech_group": false,
          "predicate": {
            "init": {
              "arg_name": "courier_status",
              "arg_type": "string",
              "value": "is_not_started"
            },
            "type": "eq"
          },
          "title": "1",
          "value": {
            "actions": [
              {
                "payload": {
                  "delay_sec": 0,
                  "voice_line": "sorry_courier_not_started"
                },
                "type": "eater_robocall"
              },
              {
                "payload": {
                  "channels": [
                    "push",
                    "taxi_push"
                  ],
                  "notification_code": "lateness.courier_not_started"
                },
                "type": "eater_notification"
              }
            ]
          }
        },
        {
          "enabled": true,
          "extension_method": "replace",
          "is_paired_signal": false,
          "is_signal": false,
          "is_tech_group": false,
          "predicate": {
            "init": {
              "arg_name": "courier_status",
              "arg_type": "string",
              "value": "on_the_way"
            },
            "type": "eq"
          },
          "title": "1",
          "value": {
            "actions": [
              {
                "payload": {
                  "delay_sec": 0,
                  "voice_line": "sorry_courier_on_the_way"
                },
                "type": "eater_robocall"
              },
              {
                "payload": {
                  "channels": [
                    "push",
                    "taxi_push"
                  ],
                  "notification_code": "lateness.courier_on_the_way"
                },
                "type": "eater_notification"
              }
            ]
          }
        },
        {
          "enabled": true,
          "extension_method": "replace",
          "is_paired_signal": false,
          "is_signal": false,
          "is_tech_group": false,
          "predicate": {
            "init": {
              "arg_name": "order_status",
              "arg_type": "string",
              "value": "confirmed"
            },
            "type": "eq"
          },
          "title": "1",
          "value": {
            "actions": [
              {
                "payload": {
                  "delay_sec": 0,
                  "voice_line": "sorry_order_on_the_way"
                },
                "type": "eater_robocall"
              },
              {
                "payload": {
                  "channels": [
                    "push",
                    "taxi_push"
                  ],
                  "notification_code": "lateness.order_on_the_way"
                },
                "type": "eater_notification"
              }
            ]
          }
        }
      ],
      "match": {
        "consumers": [
          {
            "name": "eats_proactive_support/lateness_detector"
          }
        ],
        "enabled": true,
        "predicate": {
          "init": {},
          "type": "true"
        }
      },
      "name": "eats_proactive_support_lateness_detector_actions"
    }
  ]
}
