{
  "configs": [
    {
      "$view": {
        "auditorium": "custom",
        "consumers": [
          "driver-scoring/driver-scoring",
          "driver-scoring/driver-bonuses"
        ],
        "from": "1920-03-12T12:33:05.000Z",
        "from_time": "15:33",
        "has_default_value": true,
        "has_fallback": false,
        "request_id": "bbc6aa407e9b4ab685627058ef02edec",
        "to": "2120-03-12T12:33:05.000Z",
        "to_time": "15:33",
        "type": "configs"
      },
      "clauses": [
        {
          "hasSignalClause": false,
          "is_paired_signal": false,
          "is_signal": false,
          "predicate": {
            "init": {
              "predicates": [
                {
                  "init": {
                    "arg_name": "intent",
                    "arg_type": "string",
                    "value": "dispatch-buffer"
                  },
                  "type": "eq"
                },
                {
                  "init": {
                    "arg_name": "zone",
                    "arg_type": "string",
                    "value": "moscow"
                  },
                  "type": "eq"
                }
              ]
            },
            "json": "{\n  \"init\": {\n    \"predicates\": [\n      {\n        \"init\": {\n          \"value\": \"dispatch-buffer\",\n          \"arg_name\": \"intent\",\n          \"arg_type\": \"string\"\n        },\n        \"type\": \"eq\"\n      },\n      {\n        \"init\": {\n          \"value\": \"moscow\",\n          \"arg_name\": \"zone\",\n          \"arg_type\": \"string\"\n        },\n        \"type\": \"eq\"\n      }\n    ]\n  },\n  \"type\": \"all_of\"\n}",
            "method": "interface",
            "query": "",
            "type": "all_of"
          },
          "title": "dispatch-buffer moscow",
          "value": {
            "bonus-10": {
              "enabled": true,
              "module": "js"
            }
          }
        },
        {
          "hasSignalClause": false,
          "is_paired_signal": false,
          "is_signal": false,
          "predicate": {
            "init": {
              "predicates": [
                {
                  "init": {
                    "arg_name": "intent",
                    "arg_type": "string",
                    "value": "eta"
                  },
                  "type": "eq"
                },
                {
                  "init": {
                    "arg_name": "allowed_classes",
                    "set_elem_type": "string",
                    "value": "child_tariff"
                  },
                  "type": "contains"
                }
              ]
            },
            "json": "{\n  \"init\": {\n    \"predicates\": [\n      {\n        \"init\": {\n          \"value\": \"eta\",\n          \"arg_name\": \"intent\",\n          \"arg_type\": \"string\"\n        },\n        \"type\": \"eq\"\n      },\n      {\n        \"init\": {\n          \"value\": \"child_tariff\",\n          \"arg_name\": \"allowed_classes\",\n          \"set_elem_type\": \"string\"\n        },\n        \"type\": \"contains\"\n      }\n    ]\n  },\n  \"type\": \"all_of\"\n}",
            "method": "interface",
            "query": "",
            "type": "all_of"
          },
          "title": "eta child_tariff",
          "value": {
            "bonus-20": {
              "enabled": true,
              "module": "js"
            }
          }
        },
        {
          "hasSignalClause": false,
          "is_paired_signal": false,
          "is_signal": false,
          "predicate": {
            "init": {
              "predicates": [
                {
                  "init": {
                    "arg_name": "intent",
                    "arg_type": "string",
                    "value": "direct-assignment"
                  },
                  "type": "eq"
                },
                {
                  "init": {
                    "arg_name": "order_id",
                    "arg_type": "string",
                    "value": "experimental_order_id"
                  },
                  "type": "eq"
                }
              ]
            },
            "json": "{\n  \"init\": {\n    \"predicates\": [\n      {\n        \"init\": {\n          \"value\": \"direct-assignment\",\n          \"arg_name\": \"intent\",\n          \"arg_type\": \"string\"\n        },\n        \"type\": \"eq\"\n      },\n      {\n        \"init\": {\n          \"value\": \"experimental_order_id\",\n          \"arg_name\": \"order_id\",\n          \"arg_type\": \"string\"\n        },\n        \"type\": \"eq\"\n      }\n    ]\n  },\n  \"type\": \"all_of\"\n}",
            "method": "interface",
            "query": "",
            "type": "all_of"
          },
          "title": "direct-assignment experimental_order_id",
          "value": {
            "bonus-30": {
              "enabled": true,
              "module": "js"
            }
          }
        },
        {
          "hasSignalClause": false,
          "is_paired_signal": false,
          "is_signal": false,
          "predicate": {
            "init": {
              "arg_name": "intent",
              "arg_type": "string",
              "value": "dispatch-buffer"
            },
            "json": "{\n  \"init\": {\n    \"value\": \"dispatch-buffer\",\n    \"arg_name\": \"intent\",\n    \"arg_type\": \"string\"\n  },\n  \"type\": \"eq\"\n}",
            "method": "interface",
            "query": "",
            "type": "eq"
          },
          "title": "dispatch-buffer",
          "value": {
            "bonus-40": {
              "enabled": true,
              "module": "js"
            }
          }
        },
        {
          "is_paired_signal": false,
          "is_signal": false,
          "predicate": {
            "init": {
              "arg_name": "intent",
              "arg_type": "string",
              "value": "eta"
            },
            "json": "{\n  \"init\": {\n    \"value\": \"eta\",\n    \"arg_name\": \"intent\",\n    \"arg_type\": \"string\"\n  },\n  \"type\": \"eq\"\n}",
            "method": "interface",
            "query": "",
            "type": "eq"
          },
          "title": "eta",
          "value": {
            "bonus-50": {
              "enabled": true,
              "module": "js"
            }
          }
        }
      ],
      "closed": false,
      "default_value": "{}",
      "description": "Замена конфига DRIVER_BONUSES_BY_INTENT",
      "last_modified_at": 70642,
      "match": {
        "action_time": {
          "from": "1920-03-12T15:33:05+0300",
          "to": "2120-03-12T15:33:05+0300"
        },
        "consumers": [
          {
            "name": "driver-scoring/driver-scoring"
          },
          {
            "name": "driver-scoring/driver-bonuses"
          }
        ],
        "enabled": true,
        "predicate": {
          "init": {},
          "json": "{\n  \"init\": {},\n  \"type\": \"true\"\n}",
          "method": "interface",
          "query": "",
          "type": "true"
        },
        "schema": "description: Бонусы для расчета скоринга водителя\ndefault: {}\nschema:\n  type: object\n  additionalProperties:\n    $ref: '#/definitions/Bonus'\n\n  definitions:\n    Module:\n      description: >\n        Тип модуля для расчета бонуса.\n        Поддерживаемые типы: cpp и js\n      type: string\n      enum:\n        - cpp\n        - js\n\n    Bonus:\n      description: >\n        Параметры модуля расчета бонуса\n        * enabled - расчитывать бонус в скоринге;\n        * module - какой модуль расчета использовать (cpp/Скриптовый);\n        * fallback-module - какой модуль расчета использовать как фолбек\n          в случае исключения, брошенного в module.\n      type: object\n      additionalProperties: false\n      required:\n        - enabled\n        - module\n      properties:\n        enabled:\n          type: boolean\n        module:\n          $ref: '#/definitions/Module'\n        fallback-module:\n          $ref: '#/definitions/Module'\n"
      },
      "name": "driver_bonuses",
      "owners": [
        "alex-tsarkov"
      ]
    }
  ]
}
