/* THIS FILE IS AUTOGENERATED, DON'T EDIT! */

#pragma once

#include <memory>
#include <type_traits>

#include <userver/components/component_fwd.hpp>
#include <userver/concurrent/background_task_storage_fwd.hpp>
#include <userver/dynamic_config/source.hpp>
#include <userver/utils/statistics/metrics_storage_fwd.hpp>

#include <codegen/impl/caches.hpp>
#include <custom/dependencies.hpp>

#include <yt-logger/logger_fwd.hpp>

namespace handlers {

struct Dependencies final {
  dynamic_config::Snapshot config;
  utils::statistics::MetricsStoragePtr metrics;
  concurrent::BackgroundTaskStorage& bts;
  custom::Dependencies::Extra extra;

  ::yt_logger::LoggerPtr yt_logger;
};

class DependenciesFactory final {
 public:
  DependenciesFactory(const components::ComponentConfig&,
                      const components::ComponentContext&);
  ~DependenciesFactory();

  Dependencies GetDependencies() const;

 private:
  const dynamic_config::Source config_source_;
  utils::statistics::MetricsStoragePtr metrics_storage_;
  mutable concurrent::BackgroundTaskStorageFastPimpl bts_;
  custom::Dependencies custom_dependencies_;
  ::yt_logger::LoggerPtr yt_logger_;
};

}  // namespace handlers
