{
  "configs": [
    {
      "clauses": [
        {
          "alias": "1",
          "enabled": true,
          "extension_method": "replace",
          "is_paired_signal": false,
          "is_signal": false,
          "predicate": {
            "init": {
              "arg_name": "place_id",
              "arg_type": "int",
              "value": 1
            },
            "type": "eq"
          },
          "title": "1",
          "value": {
            "lavka_info": {
              "load_level": 5,
              "minimum_order": 5,
              "surge_level": 5
            },
            "marketplace_info": {
              "additional_time_percents": 20,
              "load_level": 90,
              "surge_level": 3
            },
            "native_info": {
              "busy": 0,
              "delivery_fee": 100.0,
              "free": 0,
              "load_level": 80,
              "show_radius": 33.0,
              "surge_level": 2
            }
          }
        },
        {
          "alias": "2",
          "enabled": true,
          "extension_method": "replace",
          "is_paired_signal": false,
          "is_signal": false,
          "predicate": {
            "init": {
              "arg_name": "place_id",
              "arg_type": "int",
              "value": 2
            },
            "type": "eq"
          },
          "title": "2",
          "value": {
            "marketplace_info": {
              "additional_time_percents": 30,
              "load_level": 85,
              "surge_level": 3
            },
            "native_info": {
              "busy": 0,
              "delivery_fee": 199.0,
              "free": 0,
              "load_level": 85,
              "show_radius": 100.0,
              "surge_level": 3
            }
          }
        },
        {
          "alias": "3",
          "enabled": true,
          "extension_method": "replace",
          "is_paired_signal": false,
          "is_signal": false,
          "predicate": {
            "init": {
              "arg_name": "place_id",
              "arg_type": "int",
              "value": 3
            },
            "type": "eq"
          },
          "title": "3",
          "value": {
            "taxi_info": {
              "delivery_fee": 39.9,
              "show_radius": 150.0,
              "surge_level": 4
            }
          }
        }
      ],
      "created": "2021-04-27T11:58:37.094975+03:00",
      "default_value": {
        "for_all": false,
        "marketplace_info": {
          "additional_time_percents": 0,
          "load_level": 0,
          "surge_level": 0
        },
        "place_id": 0
      },
      "enable_debug": false,
      "last_manual_update": "2021-04-27T12:49:21.450654+03:00",
      "match": {
        "action_time": {},
        "consumers": [
          {
            "name": "eats-surge-resolver/places-info"
          }
        ],
        "enabled": true,
        "predicate": {
          "init": {},
          "type": "true"
        },
        "schema": "type: object\nrequired:\n  - for_all\n  - place_id\n  - native_info\n  - lavka_info\n  - marketplace_info\nadditionalProperties: false\nproperties:\n  for_all:\n    type: boolean\n    description: Если true, то подменяем значения для ВСЕХ ресторанов, иначе, только\n      для ресторана placeId\n  place_id:\n    type: integer\n    description: ID ресторана, для которого мы подменяем значения при forAll == false\n  native_info:\n    type: object\n    additionalProperties: false\n    required:\n      - surge_level\n      - load_level\n      - delivery_fee\n    properties:\n      surge_level:\n        type: integer\n        description: Уровень суржа в курьерской зоне\n        minimum: 0\n      load_level:\n        type: integer\n        description: Уровень загрузки ресторана\n        minimum: 0\n        example: 97\n      delivery_fee:\n        type: number\n        description: Дополнительная стоимость доставки\n        minimum: 0\n  lavka_info:\n    type: object\n    additionalProperties: false\n    required:\n      - surge_level\n      - load_level\n      - minimum_order\n    properties:\n      surge_level:\n        type: integer\n        description: Уровень суржа в лавке\n        minimum: 0\n      load_level:\n        type: integer\n        description: Уровень загрузки лавки\n        minimum: 0\n        example: 99\n      minimum_order:\n        type: integer\n        description: Минимальный размер корзины\n        example: 10\n        minimum: 0\n  marketplace_info:\n    type: object\n    additionalProperties: false\n    required:\n      - surge_level\n      - load_level\n      - additional_time_percents\n    properties:\n      surge_level:\n        type: integer\n        description: Уровень суржа в курьерской зоне\n        minimum: 0\n      load_level:\n        type: integer\n        description: Уровень загрузки ресторана\n        minimum: 0\n        example: 98\n      additional_time_percents:\n        type: integer\n        description: Процент дополнительного времени доставки\n        example: 10\n        minimum: 0"
      },
      "name": "eats_surge_resolver_places_info",
      "owners": [
        "enz0jke"
      ],
      "removed": false,
      "self_ok": false,
      "st_tickets": [],
      "trait_tags": [],
      "watchers": []
    }
  ]
}
