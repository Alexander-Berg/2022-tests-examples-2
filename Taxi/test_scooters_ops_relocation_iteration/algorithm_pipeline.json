{
  "consumer": "scooters-ops-relocation-algorithm",
  "name": "simple",
  "stages": [
    {
      "conditions": [],
      "in_bindings": [
        {
          "domain": "input",
          "query": {
            "operations": [
              {
                "property_name": "region"
              }
            ]
          }
        }
      ],
      "name": "fetch_scooters_by_region",
      "optional": false,
      "resources": [
        {
          "field": "scooters",
          "name": "scooters"
        }
      ],
      "source_code": "return {scooters: {region: region}};"
    },
    {
      "conditions": [],
      "in_bindings": [
        {
          "domain": "input",
          "query": {
            "operations": [
              {
                "property_name": "region"
              }
            ]
          }
        }
      ],
      "name": "fetch_parking_places_by_region",
      "optional": false,
      "resources": [
        {
          "field": "parking_places",
          "name": "parking_places"
        }
      ],
      "source_code": "return {parking_places: {region: region}};"
    },
    {
      "conditions": [],
      "in_bindings": [
        {
          "domain": "resource",
          "query": {
            "operations": [
              {
                "property_name": "scooters"
              }
            ]
          }
        },
        {
          "domain": "resource",
          "query": {
            "operations": [
              {
                "property_name": "parking_places"
              }
            ]
          }
        },
        {
          "children": [
            {
              "query": {
                "operations": [
                  {
                    "alias": "dynamic_config_value",
                    "property_name": "some_config_name"
                  }
                ]
              }
            }
          ],
          "domain": "resource",
          "query": {
            "operations": [
              {
                "property_name": "dynamic_config"
              }
            ]
          }
        }
      ],
      "name": "calc_relocation_algorithm",
      "optional": false,
      "out_bindings": [
        {
          "alias": "scooters_to_relocate",
          "query": "scooters_to_relocate"
        },
        {
          "alias": "parking_places_to_dropoff",
          "query": "parking_places_to_dropoff"
        }
      ],
      "source_code": "let scooters_to_relocate = [];\nlet parking_places_to_dropoff = [];\n\nfor (let idx in scooters.scooters) {\n  scooters_to_relocate.push({\n    id: scooters.scooters[idx].id,\n    score: 1,\n    location: scooters.scooters[idx].location,\n    parking_place: scooters.scooters[idx].parking_place === undefined ? null : scooters.scooters[idx].parking_place\n  });\n}\n\nfor (let idx in parking_places.parking_places) {\n  parking_places_to_dropoff.push({\n    id: parking_places.parking_places[idx].id,\n    scooters_to_dropoff: 1,\n    location: parking_places.parking_places[idx].location,\n    extra: {hello: 'me', dynamic_config_value: dynamic_config_value},\n    stats: parking_places.parking_places[idx].stats\n });\n}\n\nreturn {\n  scooters_to_relocate: scooters_to_relocate,\n  parking_places_to_dropoff: parking_places_to_dropoff};"
    }
  ],
  "state": "active"
}
