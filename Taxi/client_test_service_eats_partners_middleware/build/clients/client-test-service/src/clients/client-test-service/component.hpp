/* THIS FILE IS AUTOGENERATED, DON'T EDIT! */

// This file was generated from file(s):
// taxi/schemas/schemas/services/client-test-service/api/api-3.0.yaml,
// taxi/schemas/schemas/services/client-test-service/api/api.yaml

#pragma once

#include <userver/clients/http/request.hpp>
#include <userver/components/component_config.hpp>
#include <userver/components/component_context.hpp>
#include <userver/components/loggable_component_base.hpp>
#include <userver/concurrent/async_event_channel.hpp>
#include <userver/dynamic_config/source.hpp>
#include <userver/rcu/rcu_map.hpp>

#include <clients/client-test-service/client_fwd.hpp>
#include <clients/http.hpp>
#include <clients/impl/endpoint_info.hpp>

namespace components {
class Secdist;
class StatisticsStorage;
class StatisticsReachClient;
}

namespace clients::client_test_service {

namespace impl {
class ClientImpl;
}

class Component final: public components::LoggableComponentBase {
 public:
  static constexpr const char* kName{"client-test-service-client"};

  Component(const ::components::ComponentConfig& config,
            const ::components::ComponentContext& context);

  ~Component();

  Client& GetClient() noexcept;

  Client& GetClientFor(std::string base_url);

  static yaml_config::Schema GetStaticConfigSchema();

 private:
  void OnConfigUpdate(const ::dynamic_config::Snapshot& config);

  std::shared_ptr<impl::ClientImpl> GetOrCreateClient(
      std::string base_url, std::optional<std::string> proxy,
      std::optional<http::ProxyAuthType> proxy_auth_type);

  ::dynamic_config::Source config_;
  ::components::Http& http_;
  ::components::StatisticsStorage& statistics_storage_;
  ::components::StatisticsReachClient& statistics_reach_client_;
  const std::string body_log_level_;
  const int body_log_limit_;
  ::rcu::RcuMap<::clients::impl::EndpointInfo, impl::ClientImpl> clients_;
  std::shared_ptr<impl::ClientImpl> main_client_;
  ::concurrent::AsyncEventSubscriberScope config_subscriber_;
};

}

template <>
inline constexpr bool ::components::kHasValidate<
    clients::client_test_service::Component> = true;
