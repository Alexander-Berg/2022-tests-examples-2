{
  "consumer": "taxi-surge",
  "name": "default",
  "stages": [
    {
      "args": [],
      "in_bindings": [
        {
          "domain": "resource",
          "query": "zone"
        }
      ],
      "name": "is_in_zone",
      "source_code": "return zone != null;"
    },
    {
      "conditions": [
        {
          "args": [],
          "predicate": "is_in_zone",
          "type": "predicate"
        }
      ],
      "name": "group0",
      "stages": [
        {
          "conditions": [],
          "in_bindings": [
            {
              "domain": "input",
              "query": "request.user_id"
            },
            {
              "domain": "input",
              "query": "layer_meta"
            }
          ],
          "name": "resource_fetch",
          "optional": true,
          "resources": [
            {
              "field": "candidates",
              "name": "count_by_categories"
            }
          ],
          "source_code": "return {candidates: {request: {point: [1.0, 2.0], allowed_classes: [], limit: 400, max_distance: 2500}, layer_meta: layer_meta}};"
        },
        {
          "conditions": [],
          "in_bindings": [
            {
              "domain": "input",
              "query": "layer_meta"
            },
            {
              "domain": "input",
              "query": "required_categories.*{:category}"
            },
            {
              "domain": "resource",
              "query": "zone.experiment.rules[category]{rules}"
            },
            {
              "domain": "resource",
              "query": "candidates.generic[category].total"
            }
          ],
          "name": "main",
          "optional": false,
          "out_bindings": [
            {
              "alias": "data",
              "query": "classes[category]"
            }
          ],
          "source_code": "if (!layer_meta) { throw 'no layer_meta'; } return {data: {name: category, calculation_meta: {counts: {total: total, free: 0, free_chain: 0, pins: 0, radius: 1000}}, value_raw: 1.0, surge: {value: rules && rules.surge_value ? rules.surge_value : 1.0}}};"
        }
      ]
    }
  ],
  "state": "active"
}
