{
  "consumer": "taxi-surge",
  "global_scope": {
    "source_code": "const kEconom = 'econom'"
  },
  "id": "0",
  "name": "validation_test",
  "stages": [
    {
      "conditions": [],
      "in_bindings": [],
      "name": "resource_fetch",
      "optional": false,
      "resources": [
        {
          "field": "candidates",
          "name": "count_by_categories"
        }
      ],
      "source_code": "if (!kEconom) {throw 'unable to obtain global variable: kEconom';}\nreturn {candidates: {request: {allowed_classes: [kEconom], limit: 400, max_distance: 2500, point: [10, 10]}}}"
    },
    {
      "conditions": [],
      "in_bindings": [
        {
          "domain": "resource",
          "query": "zone"
        }
      ],
      "name": "logic_stage",
      "optional": false,
      "out_bindings": [
        {
          "children": [
            {
              "alias": "surge",
              "query": "surge"
            },
            {
              "alias": "name",
              "query": "name"
            },
            {
              "alias": "value_raw",
              "query": "value_raw"
            },
            {
              "alias": "calculation_meta",
              "query": "calculation_meta"
            }
          ],
          "query": "classes.econom"
        }
      ],
      "source_code": "/*check prefetched resource 'zone'*/ log.info_ex('base_class: ' + zone.base_class); return {surge: {value: 1}, name: \"econom\", value_raw: 1, calculation_meta: {}};"
    }
  ]
}
