import pytest

# generated by tvmknife unittest service -s 555 -d 2013862
MOCK_TICKET = (
    '3:serv:CBAQ__________9_IgcIqwQQpvV6:EUzFgbeCAT29QM-NLGLN_AqsdUjmYKqfRp3ro'
    'W0wshJ24mfterKkJreq8enxxHlNhdDXgfoiFUyJnfczG10pUjh_gmri_hNx0PqJHsjiFXckrq'
    'RUQ5dnCdOVCSddRS3RWcaChohXlz1F15NhYKY17pjj2ZyMEawBYK5qquQnsao'
)


@pytest.mark.skipif(
    True,
    reason='Override for TVM is not used anymore. Enable if going to use it',
)
@pytest.mark.parametrize(
    'sign_ticket, allow_skip_tvm2, response_code',
    [
        (MOCK_TICKET, False, 200),
        ('wrong-ticket', False, 401),
        (None, False, 401),
        (MOCK_TICKET, True, 200),
        ('wrong-ticket', True, 401),
        (None, True, 200),
    ],
)
async def test_manual_tvm(
        mockserver,
        resources,
        load_yaml,
        endpoints,
        taxi_api_proxy,
        sign_ticket,
        allow_skip_tvm2,
        response_code,
        taxi_config,
):
    upstream = mockserver.json_handler('/upstream')(lambda request: {})

    await resources.safely_create_resource(
        resource_id='upstream', url=mockserver.url('upstream'), method='post',
    )

    endpoint = load_yaml('endpoint.yaml')
    if allow_skip_tvm2:
        endpoint['skip-tvm'] = True
    await endpoints.safely_create_endpoint('/endpoint/', get_handler=endpoint)

    # call the endpoint

    taxi_config.set(TVM_ENABLED=True)
    await taxi_api_proxy.invalidate_caches()

    headers = {}
    if sign_ticket is not None:
        headers['X-Ya-Service-Ticket'] = sign_ticket
    response = await taxi_api_proxy.get('/endpoint/', headers=headers)
    assert response.status_code == response_code
    if response_code == 200:
        assert upstream.times_called == 1
    else:
        assert upstream.times_called == 0
