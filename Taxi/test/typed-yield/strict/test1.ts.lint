import {call as callRenamed, select} from 'typed-redux-saga';
import {fork} from 'redux-saga/effects';

const typedPromise = Promise.resolve(1);
const anyPromise: any = Promise.resolve(1);

const obj = {
    *method() {

    }
}

export function * onLoad() {
    yield* select();

    yield* fork();

    yield call();
    ~~~~~~~~~~~~ [use_typed_generator]

    yield* call();

    yield select();
    ~~~~~~~~~~~~~~ [yield]

    yield callRenamed();
    ~~~~~~~~~~~~~~~~~~~ [yield]

    yield callRenamed(typedPromise)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ [yield]

    yield obj.method(typedPromise);
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ [use_typed_generator]

    yield typedPromise;
    ~~~~~~~~~~~~~~~~~~ [use_typed_generator]

    yield anyPromise;
    ~~~~~~~~~~~~~~~~ [use_typed_generator]

    yield callRenamed(function * () {
    ~~~~~~~~~~~~~~~~~~~~~~~~~~
        yield select();
~~~~~~~~~~~~~~~~~~~~~~~
        ~~~~~~~~~~~~~~ [yield]
    })
~~~~~~ [yield]
}

[yield]: yield -> yield*
[use_typed_generator]: use typed-redux-saga generator