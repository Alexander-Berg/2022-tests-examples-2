##HEADER
accident_id: '635eda0e-b458-466b-8c34-40e05857ee02'
run_id: '12345'
task: 'cpi_network'
creation_dttm: '20180402000002'
##DESCRIPTION
Exception message: Some source tables for operation don't exist:
  home/taxi-dwh/public/qc/adjust/2018-03-20
  home/taxi-dwh/public/qc/adjust/2018-03-21

Exception type: <class 'nile.nodes.table.PartiallyMissingSourceTablesError'>
Python version: Python 2.7.6: /usr/bin/python


---------------====== Original traceback ======------------------

Traceback (most recent call last):
  File "/usr/lib/python2.7/runpy.py", line 162, in _run_module_as_main
    "__main__", fname, loader, pkg_name)
  File "/usr/lib/python2.7/runpy.py", line 72, in _run_code
    exec code in run_globals
  File "/home/robot-taxi-stat/etl/layer/yt/summary/cpi_network/cost/loader.py", line 30, in <module>
    load(period, args.dst_prefix)
  File "/home/robot-taxi-stat/etl/layer/yt/summary/cpi_network/cost/loader.py", line 19, in load
    result_path=meta.buffer_path()
  File "/home/robot-taxi-stat/etl/layer/yt/summary/cpi_network/cost/impl.py", line 72, in calculate
    adjust_measures=adjust_measures
  File "/home/robot-taxi-stat/etl/layer/yt/summary/cpi_network/performance_impl.py", line 288, in calculate
    job.run()
  File "/usr/lib/python2.7/dist-packages/nile/api/v1/job.py", line 154, in run
    execution_plan.run()
  File "/usr/lib/python2.7/dist-packages/nile/drivers/yt/execution_plan.py", line 109, in run
    self._observe_until_someone_exits()
  File "/usr/lib/python2.7/dist-packages/nile/drivers/yt/execution_plan.py", line 176, in _observe_until_someone_exits
    progress.raise_for_state()
  File "/usr/lib/python2.7/dist-packages/nile/utils/async.py", line 66, in _run
    self.function(*self.args, **self.kws)
  File "/usr/lib/python2.7/dist-packages/nile/drivers/common/execution_plan.py", line 80, in prepare
    self.prepare_commands()
  File "/usr/lib/python2.7/dist-packages/nile/drivers/common/execution_plan.py", line 130, in prepare_commands
    command.prepare()
  File "/usr/lib/python2.7/dist-packages/nile/drivers/yt/command.py", line 295, in prepare
    self.input_yt_format
  File "/usr/lib/python2.7/dist-packages/nile/drivers/yt/command.py", line 314, in optimize_source_paths
    paths = self.source_table_paths
  File "/usr/lib/python2.7/dist-packages/nile/utils/misc.py", line 411, in wrapper
    self._cache[prop_name] = method(self)
  File "/usr/lib/python2.7/dist-packages/nile/drivers/common/command.py", line 53, in source_table_paths
    return get_source_table_paths(self.driver, self.source_tables)
  File "/usr/lib/python2.7/dist-packages/nile/drivers/common/path/utils.py", line 136, in get_source_table_paths
    driver, remote_input_table_paths
  File "/usr/lib/python2.7/dist-packages/nile/drivers/common/path/utils.py", line 41, in ignore_missing_paths
    _convert_paths(missing_paths)
PartiallyMissingSourceTablesError: Some source tables for operation don't exist:
  home/taxi-dwh/public/qc/adjust/2018-03-20
  home/taxi-dwh/public/qc/adjust/2018-03-21


---------------====== Detailed traceback ======------------------

Traceback (most recent call last):

------------------------------
/usr/lib/python2.7/runpy.py:
 in _run_module_as_main(mod_name = 'layer.yt.summary.cpi_network.cost.loader', alter_argv = 1)

     160 sys.argv[0] = fname
     161 return _run_code(code, main_globals, None,
  -> 162 "__main__", fname, loader, pkg_name)
     163
     164 def run_module(mod_name, init_globals=None,

Vars:
  fname = '/home/robot-taxi-stat/etl/layer/yt/summary/cpi_network/cost/loader.py'
  loader = <pkgutil.ImpLoader instance at 0x7f675f2fe320>
  pkg_name = 'layer.yt.summary.cpi_network.cost'

------------------------------
/usr/lib/python2.7/runpy.py:
 in _run_code(code = <code object <module> at 0x7f6764ca4f30, file "/...r/yt/summary/cpi_network/cost/loader.py", line 1>, run_globals = {'SummaryCPINetworkCost': <class 'layer.yt.summary.cpi_network.cost.table.SummaryCPINetworkCost'>, 'YTMeta': <class 'lib.yt.meta.YTMeta'>, '__builtins__': <module '__builtin__' (built-in)>, '__doc__': None, '__file__': '/home/robot-taxi-stat/etl/layer/yt/summary/cpi_network/cost/loader.py', '__loader__': <pkgutil.ImpLoader instance>, '__name__': '__main__', '__package__': 'layer.yt.summary.cpi_network.cost', 'args': Namespace(chunk_size=None, dst_prefix='//home/ta..., start_date=datetime.datetime(2018, 2, 1, 0, 0)), 'calculate': <function calculate>, ...}, init_globals = None, mod_name = '__main__', mod_fname = '/home/robot-taxi-stat/etl/layer/yt/summary/cpi_network/cost/loader.py', mod_loader = <pkgutil.ImpLoader instance>, pkg_name = 'layer.yt.summary.cpi_network.cost')

      70 __loader__ = mod_loader,
      71 __package__ = pkg_name)
   -> 72 exec code in run_globals
      73 return run_globals
      74

Vars:
  code = <code object <module> at 0x7f6764ca4f30, file "/home/robot-taxi-stat/etl/layer/yt/summary/cpi_network/cost/loader.py", line 1>
  run_globals = {'SummaryCPINetworkCost': layer.yt.summary.cpi_network.cost.table.SummaryCPINetworkCost,
                 'YTMeta': lib.yt.meta.YTMeta,
                 '__builtins__': <module '__builtin__' (built-in)>,
                 '__doc__': None,
                 '__file__': '/home/robot-taxi-stat/etl/layer/yt/summary/cpi_network/cost/loader.py',
                 '__loader__': <pkgutil.ImpLoader instance at 0x7f675f2fe320>,
                 '__name__': '__main__',
                 '__package__': 'layer.yt.summary.cpi_network.cost',
                 'args': Namespace(chunk_size=None, dst_prefix='//home/taxi-dwh', end_date=datetime.datetime(2018, 3, 21, 0, 0), month=None, src_prefix='//home/taxi-dwh', start_date=datetime.datetime(2018, 2, 1, 0, 0)),
                 'calculate': <function layer.yt.summary.cpi_network.cost.impl.calculate>,
                 'dtu': <module 'lib.datetime_utils' from '/home/robot-taxi-stat/etl/lib/datetime_utils.pyc'>,
                 'etl': <module 'lib.yt.etl' from '/home/robot-taxi-stat/etl/lib/yt/etl.pyc'>,
                 'load': <function __main__.load>,
                 'parse': <function lib.arguments.parse>,
                 'period': <lib.datetime_utils.Period at 0x7f67572b0f10>}

------------------------------
/home/robot-taxi-stat/etl/layer/yt/summary/cpi_network/cost/loader.py:
 in <module>()

      26 if __name__ == '__main__':
      27 args = parse()
      28 assert dtu.get_start_of_month(args.start_date) == args.start_date
      29 for period in dtu.calendar_month_periods(args.start_date, args.end_date):
   -> 30 load(period, args.dst_prefix)

Vars:
  load = <function __main__.load>
  period = <lib.datetime_utils.Period at 0x7f67572b0f10>
  args = Namespace(chunk_size=None, dst_prefix='//home/taxi-dwh', end_date=datetime.datetime(2018, 3, 21, 0, 0), month=None, src_prefix='//home/taxi-dwh', start_date=datetime.datetime(2018, 2, 1, 0, 0))
  args.dst_prefix = '//home/taxi-dwh'

------------------------------
/home/robot-taxi-stat/etl/layer/yt/summary/cpi_network/cost/loader.py:
 in load(period = <lib.datetime_utils.Period object>, dst_prefix = '//home/taxi-dwh')

      17 calculate(
      18 period,
   -> 19 result_path=meta.buffer_path()
      20 )
      21

Vars:
  result_path is undefined
  meta = <lib.yt.meta.YTMeta at 0x7f675730e390>
  meta.buffer_path = <bound method YTMeta.buffer_path of <lib.yt.meta.YTMeta object at 0x7f675730e390>>

------------------------------
/home/robot-taxi-stat/etl/layer/yt/summary/cpi_network/cost/impl.py:
 in calculate(period = <lib.datetime_utils.Period object>, result_path = '//home/taxi-dwh/etl/buffer/summary/cpi_network/cost/2018-03')

      69 result_path=result_path,
      70 job_name='TAXIDWH: CPI Network Cost',
      71 aggregate_adjust=_get_agg_api_adjust_data,
   -> 72 adjust_measures=adjust_measures
      73 )

Vars:
  adjust_measures = {'click': 'adj_api_click_cnt',
                     'first_order': 'adj_api_first_order_cnt',
                     'install': 'adj_api_install_cnt',
                     'session': 'adj_api_session_cnt'}

------------------------------
/home/robot-taxi-stat/etl/layer/yt/summary/cpi_network/performance_impl.py:
 in calculate(period = <lib.datetime_utils.Period object>, result_path = '//home/taxi-dwh/etl/buffer/summary/cpi_network/cost/2018-03', job_name = 'TAXIDWH: CPI Network Cost', aggregate_adjust = <function _get_agg_api_adjust_data>, adjust_measures = {'click': 'adj_api_click_cnt', 'first_order': 'adj_api_first_order_cnt', 'install': 'adj_api_install_cnt', 'session': 'adj_api_session_cnt'})

     284 .reduce(_MetricsCalculator(adjust_measures))\
     285 .filter(nf.custom(_any_not_zero, *adjust_measures.values()))\
     286 .put(result_path)
     287
  -> 288 job.run()

Vars:
  job = Job 'TAXIDWH: CPI Network Cost':
            remote_input_table_output = RemoteInputTable(
                path=Path('//home/taxi-dwh/public/qc/adjust/{2018-03-01..2018-03-21}'),
                ignore_missing=False)
            map_output = remote_input_table_output | Map(
                operator=Operator(
                    function=GeneratorAdapter(
                        generator=<function layer.yt.summary.cpi_network.cost.impl._prepare_adj_api_record>),
                    name='_prepare_adj_api_record',
                    outputs=('output',),
                    input_format=Records(),
                    output_format=Records(),
                    files=frozenset({TableFile(
                                   path=Path('//home/taxi-dwh/ods/handbook/cpi_network/monthly_limit'),
                                   filename='monthly_limit',
                                   fileformat='yson')}),
                    consumes_full_input=True,
                    hints=_Hints()),
                files=(TableFile(
                     path=Path('//home/taxi-dwh/ods/handbook/cpi_network/monthly_limit'),
                     filename='monthly_limit',
                     fileformat='yson'),),
                intensity='data',
                memory_limit=None,
                ordered=False,
                enable_row_index=False)
            group_fields_output = map_output | GroupFields(fields=('utm_source', 'platform', 'utm_content', 'msk_dt'))
            aggregate_output = group_fields_output | Aggregate(
                aggregators={'adj_api_click_cnt': SimpleAggregatorDescription(SumAggregator(clicks)),
                 'adj_api_first_order_cnt': SimpleAggregatorDescription(SumAggregator(new_customers)),
                 'adj_api_install_cnt': SimpleAggregatorDescription(SumAggregator(installs)),
                 'adj_api_session_cnt': SimpleAggregatorDescription(SumAggregator(sessions))},
                intensity='default',
                memory_limit=None)
            map2_output = aggregate_output | Map(
                operator=Operator(
                    function=GeneratorAdapter(
                        generator=<function layer.yt.summary.cpi_network.performance_impl._join_with_cost_handbook>),
                    name='_join_with_cost_handbook',
                    outputs=('output',),
                    input_format=Records(),
                    output_format=Records(),
                    files=frozenset({TableFile(
                                   path=Path('//tmp/yt_wrapper/table_storage/aCplEv0oqS'),
                                   filename='cost',
                                   fileformat='yson')}),
                    consumes_full_input=True,
                    hints=_Hints()),
                files=(TableFile(
                     path=Path('//tmp/yt_wrapper/table_storage/aCplEv0oqS'),
                     filename='cost',
                     fileformat='yson'),),
                intensity='data',
                memory_limit=None,
                ordered=False,
                enable_row_index=False)
            map3_output = map2_output | Map(
                operator=Operator(
                    function=GeneratorAdapter(
                        generator=<function layer.yt.summary.cpi_network.performance_impl._join_with_limit_handbook>),
                    name='_join_with_limit_handbook',
                    outputs=('output',),
                    input_format=Records(),
                    output_format=Records(),
                    files=frozenset({TableFile(
                                   path=Path('//home/taxi-dwh/ods/handbook/cpi_network/monthly_limit'),
                                   filename='monthly_limit',
                                   fileformat='yson')}),
                    consumes_full_input=True,
                    hints=_Hints()),
                files=(TableFile(
                     path=Path('//home/taxi-dwh/ods/handbook/cpi_network/monthly_limit'),
                     filename='monthly_limit',
                     fileformat='yson'),),
                intensity='data',
                memory_limit=None,
                ordered=False,
                enable_row_index=False)
            map4_output = map3_output | Map(
                operator=Operator(
                    function=GeneratorAdapter(
                        generator=<layer.yt.summary.marketing_performance.mappers.NullToZeroMapper at 0x7f674e4c4f10>),
                    name='NullToZeroMapper',
                    outputs=('output',),
                    input_format=Records(),
                    output_format=Records(),
                    files=frozenset(),
                    consumes_full_input=True,
                    hints=_Hints()),
                files=(),
                intensity='data',
                memory_limit=None,
                ordered=False,
                enable_row_index=False)
            project_output = map4_output | Project(<Keyword extractor from `parsed_log_line`(exclude ['date'])>)
            group_fields2_output = project_output | GroupFields(fields=('utm_source', 'platform', 'utm_content'))
            grouped_sort_output = group_fields2_output | GroupedSort(fields=('msk_dt',))
            reduce_output = grouped_sort_output | Reduce(
                operator=Operator(
                    function=GeneratorAdapter(
                        generator=<layer.yt.summary.cpi_network.performance_impl._MetricsCalculator at 0x7f674e472610>),
                    name='_MetricsCalculator',
                    outputs=('output',),
                    input_format=Records(),
                    output_format=Records(),
                    files=frozenset(),
                    consumes_full_input=True,
                    hints=_Hints()),
                files=(),
                intensity='default',
                memory_limit=None)
            filter_output = reduce_output | Filter(log=generic-yson-log, fields=[], filters=[...])
            filter_output | RemoteOutputTable(
                path=Path('//home/taxi-dwh/etl/buffer/summary/cpi_network/cost/2018-03'),
                allow_override=True)

  job.run = <bound method Job.run of Job(driver=YTDriver(proxy='hahn.yt.yandex.net', token='...', pool='taxi-dwh-priority', clean_cache=False), name='TAXIDWH: CPI Network Cost', uuid_by_name=False, environment=Environment(templates={'tmp': '$tmp_root/by-uuid/$job_uuid', 'job_root': '$home/$job_name', 'title': 'Nile job $job_name (step $current_step / $total_steps)', 'tmp_root': 'tmp/nile/$user_name', 'job_name': 'TAXIDWH: CPI Network Cost', 'checkpoints_root': '$tmp/checkpoints', 'tmp_pretty': '$tmp_root/by-name/$job_name', 'user_name': u'robot-taxi-stat', 'job_uuid': '9a151f56-2e09-11e8-ae77-69ca15549f42', 'tmp_files': '$tmp/files'}, files=frozenset([]), run_command_prefix=None, default_memory_limit=512, default_add_to_archive=True, default_mode='records', publish_settings={'default_allow_change_job': False, 'default_statface_job': None}, base_files=frozenset([]), operations_environment={}, base_package_paths=('/usr/lib/python2.7/dist-packages/nile/wheelhouse', '/usr/lib/python2.7/d
 ist-packages/cyson/wheelhouse', '/usr/lib/python2.7/dist-packages/tdigest_bindings/wheelhouse', '/usr/lib/python2.7/dist-packages/qb2/wheelhouse', '/usr/lib/python2.7/dist-packages/signurl_bindings/wheelhouse', '/usr/lib/python2.7/dist-packages/metrikatraficsource_bindings/wheelhouse'), reference_date='2018-03-21', packages=frozenset([DevelopPackage(path='/home/robot-taxi-stat/etl', add_to_archive=None), Package(requirement='enum34', path=None, add_to_archive=None), Package(requirement='transliterate', path=None, add_to_archive=None), Package(requirement='bson', path=None, add_to_archive=None), Package(requirement='pytz', path=None, add_to_archive=None)]), base_packages=frozenset(['qb2', 'signurl_bindings', 'nile', 'cyson', 'metrikatraficsource_bindings', 'python_tdigest_bindings', 'decorator']), yt_spec_defaults={}, auto_increase_memory_limit=True, package_paths=(), parallel_operations_limit=10, compression_level=Shape({'final_tables': 'normal', 'tmp_tables': 'lightest'}), merge_st
 rategy=Shape({'final_tables': 'always', 'tmp_tables': 'default'}), python_binary='python'), default_cluster_environment=Environment(templates={'checkpoints_root': '$tmp/checkpoints', 'tmp': '$tmp_root/by-uuid/$job_uuid', 'title': 'Nile job $job_name (step $current_step / $total_steps)', 'tmp_pretty': '$tmp_root/by-name/$job_name', 'tmp_root': 'tmp/nile/$user_name', 'user_name': u'robot-taxi-stat', 'tmp_files': '$tmp/files'}, files=frozenset([]), run_command_prefix=None, default_memory_limit=512, default_add_to_archive=True, default_mode='records', publish_settings={'default_allow_change_job': False, 'default_statface_job': None}, base_files=frozenset([]), operations_environment={}, base_package_paths=('/usr/lib/python2.7/dist-packages/nile/wheelhouse', '/usr/lib/python2.7/dist-packages/cyson/wheelhouse', '/usr/lib/python2.7/dist-packages/tdigest_bindings/wheelhouse', '/usr/lib/python2.7/dist-packages/qb2/wheelhouse', '/usr/lib/python2.7/dist-packages/signurl_bindings/wheelhouse', '/
 usr/lib/python2.7/dist-packages/metrikatraficsource_bindings/wheelhouse'), reference_date='2018-03-21', packages=frozenset([]), base_packages=frozenset(['qb2', 'signurl_bindings', 'nile', 'cyson', 'metrikatraficsource_bindings', 'python_tdigest_bindings', 'decorator']), yt_spec_defaults={}, auto_increase_memory_limit=True, package_paths=(), parallel_operations_limit=1, compression_level=Shape({'final_tables': 'normal', 'tmp_tables': 'lightest'}), merge_strategy=Shape({'final_tables': 'always', 'tmp_tables': 'default'}), python_binary='python'))>

------------------------------
/usr/lib/python2.7/dist-packages/nile/api/v1/job.py:
 in run(self = Job(driver=YTDriver(proxy='hahn.yt.yandex.net', ...mp_tables': 'default'}), python_binary='python')), checkpoints = (), store_checkpoints = True, hide_command = False, skip_publish = False)

     152 with CustomSysArgv(sys_argv):
     153 try:
  -> 154 execution_plan.run()
     155 except Exception:
     156 exc_info = sys.exc_info()

Vars:
  execution_plan = <nile.drivers.yt.execution_plan.YTExecutionPlan at 0x7f674e41c490>
  execution_plan.run = <bound method YTExecutionPlan.run of <nile.drivers.yt.execution_plan.YTExecutionPlan object at 0x7f674e41c490>>

------------------------------
/usr/lib/python2.7/dist-packages/nile/drivers/yt/execution_plan.py:
 in run(self = <nile.drivers.yt.execution_plan.YTExecutionPlan object>)

     107 while self.queues_manager.has_more_work:
     108 self._schedule_operations()
  -> 109 self._observe_until_someone_exits()
     110 except KeyboardInterrupt:
     111 self._abort_operations()

Vars:
  self = <nile.drivers.yt.execution_plan.YTExecutionPlan at 0x7f674e41c490>
  self._observe_until_someone_exits = <bound method YTExecutionPlan._observe_until_someone_exits of <nile.drivers.yt.execution_plan.YTExecutionPlan object at 0x7f674e41c490>>

------------------------------
/usr/lib/python2.7/dist-packages/nile/drivers/yt/execution_plan.py:
 in _observe_until_someone_exits(self = <nile.drivers.yt.execution_plan.YTExecutionPlan object>)

     174 if not progress.has_finished_with_success:
     175 self._abort_operations()
  -> 176 progress.raise_for_state()
     177
     178 progress.finish()

Vars:
  progress = <nile.drivers.common.progress.OneShotCommandProgress at 0x7f674e40bad0>
  progress.raise_for_state = <bound method OneShotCommandProgress.raise_for_state of <nile.drivers.common.progress.OneShotCommandProgress object at 0x7f674e40bad0>>

------------------------------
/usr/lib/python2.7/dist-packages/nile/utils/async.py:
 in _run(self = <nile.utils.async.AsyncCall object>)

      64 self._notify('start')
      65 try:
   -> 66 self.function(*self.args, **self.kws)
      67 except BaseException:
      68 self._notify('exception', exc_info=sys.exc_info(), is_alive=False)

Vars:
  self = <nile.utils.async.AsyncCall at 0x7f674e40b410>
  self.function = <bound method YTExecutionPlan.prepare of <nile.drivers.yt.execution_plan.YTExecutionPlan object at 0x7f674e41c490>>
  self.args = ()
  self.kws = {}

------------------------------
/usr/lib/python2.7/dist-packages/nile/drivers/common/execution_plan.py:
 in prepare(self = <nile.drivers.yt.execution_plan.YTExecutionPlan object>)

      78 def prepare(self):
      79 with PicklableBuiltins():
   -> 80 self.prepare_commands()
      81
      82 self.collect_removable_tmpdirs()

Vars:
  self = <nile.drivers.yt.execution_plan.YTExecutionPlan at 0x7f674e41c490>
  self.prepare_commands = <bound method YTExecutionPlan.prepare_commands of <nile.drivers.yt.execution_plan.YTExecutionPlan object at 0x7f674e41c490>>

------------------------------
/usr/lib/python2.7/dist-packages/nile/drivers/common/execution_plan.py:
 in prepare_commands(self = <nile.drivers.yt.execution_plan.YTExecutionPlan object>)

     128 logger.debug_value(command=command)
     129
  -> 130 command.prepare()
     131
     132 def collect_removable_tmpdirs(self):

Vars:
  command = YTMap(
                driver=YTDriver(
                    proxy='hahn.yt.yandex.net',
                    token='...',
                    pool='taxi-dwh-priority',
                    clean_cache=False),
                environment=Environment(
                    templates={'checkpoints_root': '$tmp/checkpoints',
                     'job_name': 'TAXIDWH: CPI Network Cost',
                     'job_root': '$home/$job_name',
                     'job_uuid': '9a151f56-2e09-11e8-ae77-69ca15549f42',
                     'title': 'Nile job $job_name (step $current_step / $total_steps)',
                     'tmp': '$tmp_root/by-uuid/$job_uuid',
                     'tmp_files': '$tmp/files',
                     'tmp_pretty': '$tmp_root/by-name/$job_name',
                     'tmp_root': 'tmp/nile/$user_name',
                     'user_name': u'robot-taxi-stat'},
                    files=frozenset(),
                    run_command_prefix=None,
                    default_memory_limit=512,
                    default_add_to_archive=True,
                    default_mode='records',
                    publish_settings={'default_allow_change_job': False,
                     'default_statface_job': None},
                    base_files=frozenset(),
                    operations_environment={},
                    base_package_paths=('/usr/lib/python2.7/dist-packages/nile/wheelhouse',
                     '/usr/lib/python2.7/dist-packages/cyson/wheelhouse',
                     '/usr/lib/python2.7/dist-packages/tdigest_bindings/wheelhouse',
                     '/usr/lib/python2.7/dist-packages/qb2/wheelhouse',
                     '/usr/lib/python2.7/dist-packages/signurl_bindings/wheelhouse',
                     '/usr/lib/python2.7/dist-packages/metrikatraficsource_bindings/wheelhouse'),
                    reference_date='2018-03-21',
                    packages=frozenset({DevelopPackage(
                                   path='/home/robot-taxi-stat/etl',
                                   add_to_archive=None),
                               Package(requirement='bson', path=None, add_to_archive=None),
                               Package(
                                   requirement='enum34',
                                   path=None,
                                   add_to_archive=None),
                               Package(requirement='pytz', path=None, add_to_archive=None),
                               Package(
                                   requirement='transliterate',
                                   path=None,
                                   add_to_archive=None)}),
                    base_packages=frozenset({'cyson',
                               'decorator',
                               'metrikatraficsource_bindings',
                               'nile',
                               'python_tdigest_bindings',
                               'qb2',
                               'signurl_bindings'}),
                    yt_spec_defaults={},
                    auto_increase_memory_limit=True,
                    package_paths=(),
                    parallel_operations_limit=10,
                    compression_level=Shape(
                        {'final_tables': 'normal', 'tmp_tables': 'lightest'}),
                    merge_strategy=Shape(
                        {'final_tables': 'always', 'tmp_tables': 'default'}),
                    python_binary='python'),
                operation=Map(
                    operator=Pipe(
                        source_operation=Map(
                            operator=Operator(
                                function=GeneratorAdapter(
                                    generator=<function layer.yt.summary.cpi_network.cost.impl._prepare_adj_api_record>),
                                name='_prepare_adj_api_record',
                                outputs=('output',),
                                input_format=Records(),
                                output_format=Records(),
                                files=frozenset({TableFile(
                                               path=Path('//home/taxi-dwh/ods/handbook/cpi_network/monthly_limit'),
                                               filename='monthly_limit',
                                               fileformat='yson')}),
                                consumes_full_input=True,
                                hints=_Hints()),
                            files=(TableFile(
                                 path=Path('//home/taxi-dwh/ods/handbook/cpi_network/monthly_limit'),
                                 filename='monthly_limit',
                                 fileformat='yson'),),
                            intensity='data',
                            memory_limit=None,
                            ordered=False,
                            enable_row_index=False),
                        target_operation=GroupCombine(
                            group=GroupFields(
                                fields=('utm_source',
                                 'platform',
                                 'utm_content',
                                 'msk_dt')),
                            combine=Combine(
                                description=MetaAggregatorDescription(adj_api_session_cnt=SumAggregator(sessions), adj_api_click_cnt=SumAggregator(clicks), adj_api_first_order_cnt=SumAggregator(new_customers), adj_api_install_cnt=SumAggregator(installs)),
                                method='map_combiner',
                                intensity='default',
                                memory_limit=None)),
                        files=frozenset({TableFile(
                                       path=Path('//home/taxi-dwh/ods/handbook/cpi_network/monthly_limit'),
                                       filename='monthly_limit',
                                       fileformat='yson')})),
                    files=(),
                    intensity='data',
                    memory_limit=None,
                    ordered=False,
                    enable_row_index=False),
                source_tables=[RemoteInputTable(
                     path=Path('//home/taxi-dwh/public/qc/adjust/{2018-03-01..2018-03-21}'),
                     ignore_missing=False)],
                destination_tables=[PreparedTempOutputTable(
                     path=Path('tmp/nile/robot-taxi-stat/by-uuid/9a151f56-2e09-11e8-ae77-69ca15549f42/tmp-0'),
                     row_count_limit=None,
                     compression_level='lightest')])
  command.prepare = <bound method YTMap.prepare of YTMap(driver=YTDriver(proxy='hahn.yt.yandex.net', token='...', pool='taxi-dwh-priority', clean_cache=False), environment=Environment(templates={'tmp': '$tmp_root/by-uuid/$job_uuid', 'job_root': '$home/$job_name', 'title': 'Nile job $job_name (step $current_step / $total_steps)', 'tmp_root': 'tmp/nile/$user_name', 'job_name': 'TAXIDWH: CPI Network Cost', 'checkpoints_root': '$tmp/checkpoints', 'tmp_pretty': '$tmp_root/by-name/$job_name', 'user_name': u'robot-taxi-stat', 'job_uuid': '9a151f56-2e09-11e8-ae77-69ca15549f42', 'tmp_files': '$tmp/files'}, files=frozenset([]), run_command_prefix=None, default_memory_limit=512, default_add_to_archive=True, default_mode='records', publish_settings={'default_allow_change_job': False, 'default_statface_job': None}, base_files=frozenset([]), operations_environment={}, base_package_paths=('/usr/lib/python2.7/dist-packages/nile/wheelhouse', '/usr/lib/python2.7/dist-packages/cyson/wheelhouse', '/usr/
 lib/python2.7/dist-packages/tdigest_bindings/wheelhouse', '/usr/lib/python2.7/dist-packages/qb2/wheelhouse', '/usr/lib/python2.7/dist-packages/signurl_bindings/wheelhouse', '/usr/lib/python2.7/dist-packages/metrikatraficsource_bindings/wheelhouse'), reference_date='2018-03-21', packages=frozenset([DevelopPackage(path='/home/robot-taxi-stat/etl', add_to_archive=None), Package(requirement='enum34', path=None, add_to_archive=None), Package(requirement='transliterate', path=None, add_to_archive=None), Package(requirement='bson', path=None, add_to_archive=None), Package(requirement='pytz', path=None, add_to_archive=None)]), base_packages=frozenset(['qb2', 'signurl_bindings', 'nile', 'cyson', 'metrikatraficsource_bindings', 'python_tdigest_bindings', 'decorator']), yt_spec_defaults={}, auto_increase_memory_limit=True, package_paths=(), parallel_operations_limit=10, compression_level=Shape({'final_tables': 'normal', 'tmp_tables': 'lightest'}), merge_strategy=Shape({'final_tables': 'always'
 , 'tmp_tables': 'default'}), python_binary='python'), operation=Map(operator=Pipe(source_operation=Map(operator=Operator(function=GeneratorAdapter(generator=<function _prepare_adj_api_record at 0x7f675730fb90>), name='_prepare_adj_api_record', outputs=('output',), input_format=Records(), output_format=Records(), files=frozenset([TableFile(path=Path('//home/taxi-dwh/ods/handbook/cpi_network/monthly_limit'), filename='monthly_limit', fileformat='yson')]), consumes_full_input=True, hints=_Hints()), files=(TableFile(path=Path('//home/taxi-dwh/ods/handbook/cpi_network/monthly_limit'), filename='monthly_limit', fileformat='yson'),), intensity='data', memory_limit=None, ordered=False, enable_row_index=False), target_operation=GroupCombine(group=GroupFields(fields=('utm_source', 'platform', 'utm_content', 'msk_dt')), combine=Combine(description=MetaAggregatorDescription(adj_api_session_cnt=SumAggregator(sessions), adj_api_click_cnt=SumAggregator(clicks), adj_api_first_order_cnt=SumAggregato
 r(new_customers), adj_api_install_cnt=SumAggregator(installs)), method='map_combiner', intensity='default', memory_limit=None)), files=frozenset([TableFile(path=Path('//home/taxi-dwh/ods/handbook/cpi_network/monthly_limit'), filename='monthly_limit', fileformat='yson')])), files=(), intensity='data', memory_limit=None, ordered=False, enable_row_index=False), source_tables=[RemoteInputTable(path=Path('//home/taxi-dwh/public/qc/adjust/{2018-03-01..2018-03-21}'), ignore_missing=False)], destination_tables=[PreparedTempOutputTable(path=Path('tmp/nile/robot-taxi-stat/by-uuid/9a151f56-2e09-11e8-ae77-69ca15549f42/tmp-0'), row_count_limit=None, compression_level='lightest')])>

------------------------------
/usr/lib/python2.7/dist-packages/nile/drivers/yt/command.py:
 in prepare(self = YTMap(driver=YTDriver(proxy='hahn.yt.yandex.net'...count_limit=None, compression_level='lightest')]))

     293
     294 self.optimized_source_table_paths = self.optimize_source_paths(
  -> 295 self.input_yt_format
     296 )
     297

Vars:
  self = YTMap(
             driver=YTDriver(
                 proxy='hahn.yt.yandex.net',
                 token='...',
                 pool='taxi-dwh-priority',
                 clean_cache=False),
             environment=Environment(
                 templates={'checkpoints_root': '$tmp/checkpoints',
                  'job_name': 'TAXIDWH: CPI Network Cost',
                  'job_root': '$home/$job_name',
                  'job_uuid': '9a151f56-2e09-11e8-ae77-69ca15549f42',
                  'title': 'Nile job $job_name (step $current_step / $total_steps)',
                  'tmp': '$tmp_root/by-uuid/$job_uuid',
                  'tmp_files': '$tmp/files',
                  'tmp_pretty': '$tmp_root/by-name/$job_name',
                  'tmp_root': 'tmp/nile/$user_name',
                  'user_name': u'robot-taxi-stat'},
                 files=frozenset(),
                 run_command_prefix=None,
                 default_memory_limit=512,
                 default_add_to_archive=True,
                 default_mode='records',
                 publish_settings={'default_allow_change_job': False,
                  'default_statface_job': None},
                 base_files=frozenset(),
                 operations_environment={},
                 base_package_paths=('/usr/lib/python2.7/dist-packages/nile/wheelhouse',
                  '/usr/lib/python2.7/dist-packages/cyson/wheelhouse',
                  '/usr/lib/python2.7/dist-packages/tdigest_bindings/wheelhouse',
                  '/usr/lib/python2.7/dist-packages/qb2/wheelhouse',
                  '/usr/lib/python2.7/dist-packages/signurl_bindings/wheelhouse',
                  '/usr/lib/python2.7/dist-packages/metrikatraficsource_bindings/wheelhouse'),
                 reference_date='2018-03-21',
                 packages=frozenset({DevelopPackage(
                                path='/home/robot-taxi-stat/etl',
                                add_to_archive=None),
                            Package(requirement='bson', path=None, add_to_archive=None),
                            Package(
                                requirement='enum34',
                                path=None,
                                add_to_archive=None),
                            Package(requirement='pytz', path=None, add_to_archive=None),
                            Package(
                                requirement='transliterate',
                                path=None,
                                add_to_archive=None)}),
                 base_packages=frozenset({'cyson',
                            'decorator',
                            'metrikatraficsource_bindings',
                            'nile',
                            'python_tdigest_bindings',
                            'qb2',
                            'signurl_bindings'}),
                 yt_spec_defaults={},
                 auto_increase_memory_limit=True,
                 package_paths=(),
                 parallel_operations_limit=10,
                 compression_level=Shape(
                     {'final_tables': 'normal', 'tmp_tables': 'lightest'}),
                 merge_strategy=Shape(
                     {'final_tables': 'always', 'tmp_tables': 'default'}),
                 python_binary='python'),
             operation=Map(
                 operator=Pipe(
                     source_operation=Map(
                         operator=Operator(
                             function=GeneratorAdapter(
                                 generator=<function layer.yt.summary.cpi_network.cost.impl._prepare_adj_api_record>),
                             name='_prepare_adj_api_record',
                             outputs=('output',),
                             input_format=Records(),
                             output_format=Records(),
                             files=frozenset({TableFile(
                                            path=Path('//home/taxi-dwh/ods/handbook/cpi_network/monthly_limit'),
                                            filename='monthly_limit',
                                            fileformat='yson')}),
                             consumes_full_input=True,
                             hints=_Hints()),
                         files=(TableFile(
                              path=Path('//home/taxi-dwh/ods/handbook/cpi_network/monthly_limit'),
                              filename='monthly_limit',
                              fileformat='yson'),),
                         intensity='data',
                         memory_limit=None,
                         ordered=False,
                         enable_row_index=False),
                     target_operation=GroupCombine(
                         group=GroupFields(
                             fields=('utm_source',
                              'platform',
                              'utm_content',
                              'msk_dt')),
                         combine=Combine(
                             description=MetaAggregatorDescription(adj_api_session_cnt=SumAggregator(sessions), adj_api_click_cnt=SumAggregator(clicks), adj_api_first_order_cnt=SumAggregator(new_customers), adj_api_install_cnt=SumAggregator(installs)),
                             method='map_combiner',
                             intensity='default',
                             memory_limit=None)),
                     files=frozenset({TableFile(
                                    path=Path('//home/taxi-dwh/ods/handbook/cpi_network/monthly_limit'),
                                    filename='monthly_limit',
                                    fileformat='yson')})),
                 files=(),
                 intensity='data',
                 memory_limit=None,
                 ordered=False,
                 enable_row_index=False),
             source_tables=[RemoteInputTable(
                  path=Path('//home/taxi-dwh/public/qc/adjust/{2018-03-01..2018-03-21}'),
                  ignore_missing=False)],
             destination_tables=[PreparedTempOutputTable(
                  path=Path('tmp/nile/robot-taxi-stat/by-uuid/9a151f56-2e09-11e8-ae77-69ca15549f42/tmp-0'),
                  row_count_limit=None,
                  compression_level='lightest')])
  self.input_yt_format = <"boolean_as_string"=%false;"ignore_inner_attributes"=%false;"always_create_attributes"=%false;"format"="binary";>"yson"

------------------------------
/usr/lib/python2.7/dist-packages/nile/drivers/yt/command.py:
 in optimize_source_paths(self = YTMap(driver=YTDriver(proxy='hahn.yt.yandex.net'...count_limit=None, compression_level='lightest')]), yt_format = <"boolean_as_string"=%false;"ignore_inner_attrib...eate_attributes"=%false;"format"="binary";>"yson")

     312 columns, key_slices = get_qb2_slices(self.driver, self.environment, operator)
     313
  -> 314 paths = self.source_table_paths
     315
     316 is_yson_format = yt_format.name() == 'yson'

Vars:
  paths is undefined
  self = YTMap(
             driver=YTDriver(
                 proxy='hahn.yt.yandex.net',
                 token='...',
                 pool='taxi-dwh-priority',
                 clean_cache=False),
             environment=Environment(
                 templates={'checkpoints_root': '$tmp/checkpoints',
                  'job_name': 'TAXIDWH: CPI Network Cost',
                  'job_root': '$home/$job_name',
                  'job_uuid': '9a151f56-2e09-11e8-ae77-69ca15549f42',
                  'title': 'Nile job $job_name (step $current_step / $total_steps)',
                  'tmp': '$tmp_root/by-uuid/$job_uuid',
                  'tmp_files': '$tmp/files',
                  'tmp_pretty': '$tmp_root/by-name/$job_name',
                  'tmp_root': 'tmp/nile/$user_name',
                  'user_name': u'robot-taxi-stat'},
                 files=frozenset(),
                 run_command_prefix=None,
                 default_memory_limit=512,
                 default_add_to_archive=True,
                 default_mode='records',
                 publish_settings={'default_allow_change_job': False,
                  'default_statface_job': None},
                 base_files=frozenset(),
                 operations_environment={},
                 base_package_paths=('/usr/lib/python2.7/dist-packages/nile/wheelhouse',
                  '/usr/lib/python2.7/dist-packages/cyson/wheelhouse',
                  '/usr/lib/python2.7/dist-packages/tdigest_bindings/wheelhouse',
                  '/usr/lib/python2.7/dist-packages/qb2/wheelhouse',
                  '/usr/lib/python2.7/dist-packages/signurl_bindings/wheelhouse',
                  '/usr/lib/python2.7/dist-packages/metrikatraficsource_bindings/wheelhouse'),
                 reference_date='2018-03-21',
                 packages=frozenset({DevelopPackage(
                                path='/home/robot-taxi-stat/etl',
                                add_to_archive=None),
                            Package(requirement='bson', path=None, add_to_archive=None),
                            Package(
                                requirement='enum34',
                                path=None,
                                add_to_archive=None),
                            Package(requirement='pytz', path=None, add_to_archive=None),
                            Package(
                                requirement='transliterate',
                                path=None,
                                add_to_archive=None)}),
                 base_packages=frozenset({'cyson',
                            'decorator',
                            'metrikatraficsource_bindings',
                            'nile',
                            'python_tdigest_bindings',
                            'qb2',
                            'signurl_bindings'}),
                 yt_spec_defaults={},
                 auto_increase_memory_limit=True,
                 package_paths=(),
                 parallel_operations_limit=10,
                 compression_level=Shape(
                     {'final_tables': 'normal', 'tmp_tables': 'lightest'}),
                 merge_strategy=Shape(
                     {'final_tables': 'always', 'tmp_tables': 'default'}),
                 python_binary='python'),
             operation=Map(
                 operator=Pipe(
                     source_operation=Map(
                         operator=Operator(
                             function=GeneratorAdapter(
                                 generator=<function layer.yt.summary.cpi_network.cost.impl._prepare_adj_api_record>),
                             name='_prepare_adj_api_record',
                             outputs=('output',),
                             input_format=Records(),
                             output_format=Records(),
                             files=frozenset({TableFile(
                                            path=Path('//home/taxi-dwh/ods/handbook/cpi_network/monthly_limit'),
                                            filename='monthly_limit',
                                            fileformat='yson')}),
                             consumes_full_input=True,
                             hints=_Hints()),
                         files=(TableFile(
                              path=Path('//home/taxi-dwh/ods/handbook/cpi_network/monthly_limit'),
                              filename='monthly_limit',
                              fileformat='yson'),),
                         intensity='data',
                         memory_limit=None,
                         ordered=False,
                         enable_row_index=False),
                     target_operation=GroupCombine(
                         group=GroupFields(
                             fields=('utm_source',
                              'platform',
                              'utm_content',
                              'msk_dt')),
                         combine=Combine(
                             description=MetaAggregatorDescription(adj_api_session_cnt=SumAggregator(sessions), adj_api_click_cnt=SumAggregator(clicks), adj_api_first_order_cnt=SumAggregator(new_customers), adj_api_install_cnt=SumAggregator(installs)),
                             method='map_combiner',
                             intensity='default',
                             memory_limit=None)),
                     files=frozenset({TableFile(
                                    path=Path('//home/taxi-dwh/ods/handbook/cpi_network/monthly_limit'),
                                    filename='monthly_limit',
                                    fileformat='yson')})),
                 files=(),
                 intensity='data',
                 memory_limit=None,
                 ordered=False,
                 enable_row_index=False),
             source_tables=[RemoteInputTable(
                  path=Path('//home/taxi-dwh/public/qc/adjust/{2018-03-01..2018-03-21}'),
                  ignore_missing=False)],
             destination_tables=[PreparedTempOutputTable(
                  path=Path('tmp/nile/robot-taxi-stat/by-uuid/9a151f56-2e09-11e8-ae77-69ca15549f42/tmp-0'),
                  row_count_limit=None,
                  compression_level='lightest')])

------------------------------
/usr/lib/python2.7/dist-packages/nile/utils/misc.py:
 in wrapper(self = YTMap(driver=YTDriver(proxy='hahn.yt.yandex.net'...count_limit=None, compression_level='lightest')]))

     409 if self._cache is None:
     410 self._cache = {}
  -> 411 self._cache[prop_name] = method(self)
     412 return self._cache[prop_name]
     413

Vars:
  self = YTMap(
             driver=YTDriver(
                 proxy='hahn.yt.yandex.net',
                 token='...',
                 pool='taxi-dwh-priority',
                 clean_cache=False),
             environment=Environment(
                 templates={'checkpoints_root': '$tmp/checkpoints',
                  'job_name': 'TAXIDWH: CPI Network Cost',
                  'job_root': '$home/$job_name',
                  'job_uuid': '9a151f56-2e09-11e8-ae77-69ca15549f42',
                  'title': 'Nile job $job_name (step $current_step / $total_steps)',
                  'tmp': '$tmp_root/by-uuid/$job_uuid',
                  'tmp_files': '$tmp/files',
                  'tmp_pretty': '$tmp_root/by-name/$job_name',
                  'tmp_root': 'tmp/nile/$user_name',
                  'user_name': u'robot-taxi-stat'},
                 files=frozenset(),
                 run_command_prefix=None,
                 default_memory_limit=512,
                 default_add_to_archive=True,
                 default_mode='records',
                 publish_settings={'default_allow_change_job': False,
                  'default_statface_job': None},
                 base_files=frozenset(),
                 operations_environment={},
                 base_package_paths=('/usr/lib/python2.7/dist-packages/nile/wheelhouse',
                  '/usr/lib/python2.7/dist-packages/cyson/wheelhouse',
                  '/usr/lib/python2.7/dist-packages/tdigest_bindings/wheelhouse',
                  '/usr/lib/python2.7/dist-packages/qb2/wheelhouse',
                  '/usr/lib/python2.7/dist-packages/signurl_bindings/wheelhouse',
                  '/usr/lib/python2.7/dist-packages/metrikatraficsource_bindings/wheelhouse'),
                 reference_date='2018-03-21',
                 packages=frozenset({DevelopPackage(
                                path='/home/robot-taxi-stat/etl',
                                add_to_archive=None),
                            Package(requirement='bson', path=None, add_to_archive=None),
                            Package(
                                requirement='enum34',
                                path=None,
                                add_to_archive=None),
                            Package(requirement='pytz', path=None, add_to_archive=None),
                            Package(
                                requirement='transliterate',
                                path=None,
                                add_to_archive=None)}),
                 base_packages=frozenset({'cyson',
                            'decorator',
                            'metrikatraficsource_bindings',
                            'nile',
                            'python_tdigest_bindings',
                            'qb2',
                            'signurl_bindings'}),
                 yt_spec_defaults={},
                 auto_increase_memory_limit=True,
                 package_paths=(),
                 parallel_operations_limit=10,
                 compression_level=Shape(
                     {'final_tables': 'normal', 'tmp_tables': 'lightest'}),
                 merge_strategy=Shape(
                     {'final_tables': 'always', 'tmp_tables': 'default'}),
                 python_binary='python'),
             operation=Map(
                 operator=Pipe(
                     source_operation=Map(
                         operator=Operator(
                             function=GeneratorAdapter(
                                 generator=<function layer.yt.summary.cpi_network.cost.impl._prepare_adj_api_record>),
                             name='_prepare_adj_api_record',
                             outputs=('output',),
                             input_format=Records(),
                             output_format=Records(),
                             files=frozenset({TableFile(
                                            path=Path('//home/taxi-dwh/ods/handbook/cpi_network/monthly_limit'),
                                            filename='monthly_limit',
                                            fileformat='yson')}),
                             consumes_full_input=True,
                             hints=_Hints()),
                         files=(TableFile(
                              path=Path('//home/taxi-dwh/ods/handbook/cpi_network/monthly_limit'),
                              filename='monthly_limit',
                              fileformat='yson'),),
                         intensity='data',
                         memory_limit=None,
                         ordered=False,
                         enable_row_index=False),
                     target_operation=GroupCombine(
                         group=GroupFields(
                             fields=('utm_source',
                              'platform',
                              'utm_content',
                              'msk_dt')),
                         combine=Combine(
                             description=MetaAggregatorDescription(adj_api_session_cnt=SumAggregator(sessions), adj_api_click_cnt=SumAggregator(clicks), adj_api_first_order_cnt=SumAggregator(new_customers), adj_api_install_cnt=SumAggregator(installs)),
                             method='map_combiner',
                             intensity='default',
                             memory_limit=None)),
                     files=frozenset({TableFile(
                                    path=Path('//home/taxi-dwh/ods/handbook/cpi_network/monthly_limit'),
                                    filename='monthly_limit',
                                    fileformat='yson')})),
                 files=(),
                 intensity='data',
                 memory_limit=None,
                 ordered=False,
                 enable_row_index=False),
             source_tables=[RemoteInputTable(
                  path=Path('//home/taxi-dwh/public/qc/adjust/{2018-03-01..2018-03-21}'),
                  ignore_missing=False)],
             destination_tables=[PreparedTempOutputTable(
                  path=Path('tmp/nile/robot-taxi-stat/by-uuid/9a151f56-2e09-11e8-ae77-69ca15549f42/tmp-0'),
                  row_count_limit=None,
                  compression_level='lightest')])
  self._cache = {'script': <nile.drivers.common.script.Script at 0x7f674e3fc5d0>}
  prop_name = 'source_table_paths'
  method = <function nile.drivers.common.command.source_table_paths>

------------------------------
/usr/lib/python2.7/dist-packages/nile/drivers/common/command.py:
 in source_table_paths(self = YTMap(driver=YTDriver(proxy='hahn.yt.yandex.net'...count_limit=None, compression_level='lightest')]))

      51 return []
      52
   -> 53 return get_source_table_paths(self.driver, self.source_tables)
      54
      55 @cached_property

Vars:
  global get_source_table_paths = <function nile.drivers.common.path.utils.get_source_table_paths>
  self = YTMap(
             driver=YTDriver(
                 proxy='hahn.yt.yandex.net',
                 token='...',
                 pool='taxi-dwh-priority',
                 clean_cache=False),
             environment=Environment(
                 templates={'checkpoints_root': '$tmp/checkpoints',
                  'job_name': 'TAXIDWH: CPI Network Cost',
                  'job_root': '$home/$job_name',
                  'job_uuid': '9a151f56-2e09-11e8-ae77-69ca15549f42',
                  'title': 'Nile job $job_name (step $current_step / $total_steps)',
                  'tmp': '$tmp_root/by-uuid/$job_uuid',
                  'tmp_files': '$tmp/files',
                  'tmp_pretty': '$tmp_root/by-name/$job_name',
                  'tmp_root': 'tmp/nile/$user_name',
                  'user_name': u'robot-taxi-stat'},
                 files=frozenset(),
                 run_command_prefix=None,
                 default_memory_limit=512,
                 default_add_to_archive=True,
                 default_mode='records',
                 publish_settings={'default_allow_change_job': False,
                  'default_statface_job': None},
                 base_files=frozenset(),
                 operations_environment={},
                 base_package_paths=('/usr/lib/python2.7/dist-packages/nile/wheelhouse',
                  '/usr/lib/python2.7/dist-packages/cyson/wheelhouse',
                  '/usr/lib/python2.7/dist-packages/tdigest_bindings/wheelhouse',
                  '/usr/lib/python2.7/dist-packages/qb2/wheelhouse',
                  '/usr/lib/python2.7/dist-packages/signurl_bindings/wheelhouse',
                  '/usr/lib/python2.7/dist-packages/metrikatraficsource_bindings/wheelhouse'),
                 reference_date='2018-03-21',
                 packages=frozenset({DevelopPackage(
                                path='/home/robot-taxi-stat/etl',
                                add_to_archive=None),
                            Package(requirement='bson', path=None, add_to_archive=None),
                            Package(
                                requirement='enum34',
                                path=None,
                                add_to_archive=None),
                            Package(requirement='pytz', path=None, add_to_archive=None),
                            Package(
                                requirement='transliterate',
                                path=None,
                                add_to_archive=None)}),
                 base_packages=frozenset({'cyson',
                            'decorator',
                            'metrikatraficsource_bindings',
                            'nile',
                            'python_tdigest_bindings',
                            'qb2',
                            'signurl_bindings'}),
                 yt_spec_defaults={},
                 auto_increase_memory_limit=True,
                 package_paths=(),
                 parallel_operations_limit=10,
                 compression_level=Shape(
                     {'final_tables': 'normal', 'tmp_tables': 'lightest'}),
                 merge_strategy=Shape(
                     {'final_tables': 'always', 'tmp_tables': 'default'}),
                 python_binary='python'),
             operation=Map(
                 operator=Pipe(
                     source_operation=Map(
                         operator=Operator(
                             function=GeneratorAdapter(
                                 generator=<function layer.yt.summary.cpi_network.cost.impl._prepare_adj_api_record>),
                             name='_prepare_adj_api_record',
                             outputs=('output',),
                             input_format=Records(),
                             output_format=Records(),
                             files=frozenset({TableFile(
                                            path=Path('//home/taxi-dwh/ods/handbook/cpi_network/monthly_limit'),
                                            filename='monthly_limit',
                                            fileformat='yson')}),
                             consumes_full_input=True,
                             hints=_Hints()),
                         files=(TableFile(
                              path=Path('//home/taxi-dwh/ods/handbook/cpi_network/monthly_limit'),
                              filename='monthly_limit',
                              fileformat='yson'),),
                         intensity='data',
                         memory_limit=None,
                         ordered=False,
                         enable_row_index=False),
                     target_operation=GroupCombine(
                         group=GroupFields(
                             fields=('utm_source',
                              'platform',
                              'utm_content',
                              'msk_dt')),
                         combine=Combine(
                             description=MetaAggregatorDescription(adj_api_session_cnt=SumAggregator(sessions), adj_api_click_cnt=SumAggregator(clicks), adj_api_first_order_cnt=SumAggregator(new_customers), adj_api_install_cnt=SumAggregator(installs)),
                             method='map_combiner',
                             intensity='default',
                             memory_limit=None)),
                     files=frozenset({TableFile(
                                    path=Path('//home/taxi-dwh/ods/handbook/cpi_network/monthly_limit'),
                                    filename='monthly_limit',
                                    fileformat='yson')})),
                 files=(),
                 intensity='data',
                 memory_limit=None,
                 ordered=False,
                 enable_row_index=False),
             source_tables=[RemoteInputTable(
                  path=Path('//home/taxi-dwh/public/qc/adjust/{2018-03-01..2018-03-21}'),
                  ignore_missing=False)],
             destination_tables=[PreparedTempOutputTable(
                  path=Path('tmp/nile/robot-taxi-stat/by-uuid/9a151f56-2e09-11e8-ae77-69ca15549f42/tmp-0'),
                  row_count_limit=None,
                  compression_level='lightest')])
  self.driver = YTDriver(
                    proxy='hahn.yt.yandex.net',
                    token='...',
                    pool='taxi-dwh-priority',
                    clean_cache=False)
  self.source_tables = [RemoteInputTable(
                            path=Path('//home/taxi-dwh/public/qc/adjust/{2018-03-01..2018-03-21}'),
                            ignore_missing=False)]

------------------------------
/usr/lib/python2.7/dist-packages/nile/drivers/common/path/utils.py:
 in get_source_table_paths(driver = YTDriver(proxy='hahn.yt.yandex.net', token='...', pool='taxi-dwh-priority', clean_cache=False), source_tables = [RemoteInputTable(path=Path('//home/taxi-dwh/publ...{2018-03-01..2018-03-21}'), ignore_missing=False)])

     134
     135 remote_input_table_paths = ignore_missing_paths(
  -> 136 driver, remote_input_table_paths
     137 )
     138

Vars:
  driver = YTDriver(
               proxy='hahn.yt.yandex.net',
               token='...',
               pool='taxi-dwh-priority',
               clean_cache=False)
  remote_input_table_paths = [YTPath(
                                  path='home/taxi-dwh/public/qc/adjust/2018-03-01',
                                  client=YTClient(
                                      proxy='hahn.yt.yandex.net',
                                      token='...',
                                      pool='taxi-dwh-priority'),
                                  simplify=True,
                                  attributes={'_ignore_missing': False}),
                              YTPath(
                                  path='home/taxi-dwh/public/qc/adjust/2018-03-02',
                                  client=YTClient(
                                      proxy='hahn.yt.yandex.net',
                                      token='...',
                                      pool='taxi-dwh-priority'),
                                  simplify=True,
                                  attributes={'_ignore_missing': False}),
                              YTPath(
                                  path='home/taxi-dwh/public/qc/adjust/2018-03-03',
                                  client=YTClient(
                                      proxy='hahn.yt.yandex.net',
                                      token='...',
                                      pool='taxi-dwh-priority'),
                                  simplify=True,
                                  attributes={'_ignore_missing': False}),
                              YTPath(
                                  path='home/taxi-dwh/public/qc/adjust/2018-03-04',
                                  client=YTClient(
                                      proxy='hahn.yt.yandex.net',
                                      token='...',
                                      pool='taxi-dwh-priority'),
                                  simplify=True,
                                  attributes={'_ignore_missing': False}),
                              YTPath(
                                  path='home/taxi-dwh/public/qc/adjust/2018-03-05',
                                  client=YTClient(
                                      proxy='hahn.yt.yandex.net',
                                      token='...',
                                      pool='taxi-dwh-priority'),
                                  simplify=True,
                                  attributes={'_ignore_missing': False}),
                              YTPath(
                                  path='home/taxi-dwh/public/qc/adjust/2018-03-06',
                                  client=YTClient(
                                      proxy='hahn.yt.yandex.net',
                                      token='...',
                                      pool='taxi-dwh-priority'),
                                  simplify=True,
                                  attributes={'_ignore_missing': False}),
                              YTPath(
                                  path='home/taxi-dwh/public/qc/adjust/2018-03-07',
                                  client=YTClient(
                                      proxy='hahn.yt.yandex.net',
                                      token='...',
                                      pool='taxi-dwh-priority'),
                                  simplify=True,
                                  attributes={'_ignore_missing': False}),
                              YTPath(
                                  path='home/taxi-dwh/public/qc/adjust/2018-03-08',
                                  client=YTClient(
                                      proxy='hahn.yt.yandex.net',
                                      token='...',
                                      pool='taxi-dwh-priority'),
                                  simplify=True,
                                  attributes={'_ignore_missing': False}),
                              YTPath(
                                  path='home/taxi-dwh/public/qc/adjust/2018-03-09',
                                  client=YTClient(
                                      proxy='hahn.yt.yandex.net',
                                      token='...',
                                      pool='taxi-dwh-priority'),
                                  simplify=True,
                                  attributes={'_ignore_missing': False}),
                              YTPath(
                                  path='home/taxi-dwh/public/qc/adjust/2018-03-10',
                                  client=YTClient(
                                      proxy='hahn.yt.yandex.net',
                                      token='...',
                                      pool='taxi-dwh-priority'),
                                  simplify=True,
                                  attributes={'_ignore_missing': False}),
                              YTPath(
                                  path='home/taxi-dwh/public/qc/adjust/2018-03-11',
                                  client=YTClient(
                                      proxy='hahn.yt.yandex.net',
                                      token='...',
                                      pool='taxi-dwh-priority'),
                                  simplify=True,
                                  attributes={'_ignore_missing': False}),
                              YTPath(
                                  path='home/taxi-dwh/public/qc/adjust/2018-03-12',
                                  client=YTClient(
                                      proxy='hahn.yt.yandex.net',
                                      token='...',
                                      pool='taxi-dwh-priority'),
                                  simplify=True,
                                  attributes={'_ignore_missing': False}),
                              YTPath(
                                  path='home/taxi-dwh/public/qc/adjust/2018-03-13',
                                  client=YTClient(
                                      proxy='hahn.yt.yandex.net',
                                      token='...',
                                      pool='taxi-dwh-priority'),
                                  simplify=True,
                                  attributes={'_ignore_missing': False}),
                              YTPath(
                                  path='home/taxi-dwh/public/qc/adjust/2018-03-14',
                                  client=YTClient(
                                      proxy='hahn.yt.yandex.net',
                                      token='...',
                                      pool='taxi-dwh-priority'),
                                  simplify=True,
                                  attributes={'_ignore_missing': False}),
                              YTPath(
                                  path='home/taxi-dwh/public/qc/adjust/2018-03-15',
                                  client=YTClient(
                                      proxy='hahn.yt.yandex.net',
                                      token='...',
                                      pool='taxi-dwh-priority'),
                                  simplify=True,
                                  attributes={'_ignore_missing': False}),
                              YTPath(
                                  path='home/taxi-dwh/public/qc/adjust/2018-03-16',
                                  client=YTClient(
                                      proxy='hahn.yt.yandex.net',
                                      token='...',
                                      pool='taxi-dwh-priority'),
                                  simplify=True,
                                  attributes={'_ignore_missing': False}),
                              YTPath(
                                  path='home/taxi-dwh/public/qc/adjust/2018-03-17',
                                  client=YTClient(
                                      proxy='hahn.yt.yandex.net',
                                      token='...',
                                      pool='taxi-dwh-priority'),
                                  simplify=True,
                                  attributes={'_ignore_missing': False}),
                              YTPath(
                                  path='home/taxi-dwh/public/qc/adjust/2018-03-18',
                                  client=YTClient(
                                      proxy='hahn.yt.yandex.net',
                                      token='...',
                                      pool='taxi-dwh-priority'),
                                  simplify=True,
                                  attributes={'_ignore_missing': False}),
                              YTPath(
                                  path='home/taxi-dwh/public/qc/adjust/2018-03-19',
                                  client=YTClient(
                                      proxy='hahn.yt.yandex.net',
                                      token='...',
                                      pool='taxi-dwh-priority'),
                                  simplify=True,
                                  attributes={'_ignore_missing': False}),
                              YTPath(
                                  path='home/taxi-dwh/public/qc/adjust/2018-03-20',
                                  client=YTClient(
                                      proxy='hahn.yt.yandex.net',
                                      token='...',
                                      pool='taxi-dwh-priority'),
                                  simplify=True,
                                  attributes={'_ignore_missing': False}),
                              YTPath(
                                  path='home/taxi-dwh/public/qc/adjust/2018-03-21',
                                  client=YTClient(
                                      proxy='hahn.yt.yandex.net',
                                      token='...',
                                      pool='taxi-dwh-priority'),
                                  simplify=True,
                                  attributes={'_ignore_missing': False})]

------------------------------
/usr/lib/python2.7/dist-packages/nile/drivers/common/path/utils.py:
 in ignore_missing_paths(driver = YTDriver(proxy='hahn.yt.yandex.net', token='...', pool='taxi-dwh-priority', clean_cache=False), paths = [YTPath(path='home/taxi-dwh/public/qc/adjust/2018...lify=True, attributes={'_ignore_missing': False}), YTPath(path='home/taxi-dwh/public/qc/adjust/2018...lify=True, attributes={'_ignore_missing': False}), YTPath(path='home/taxi-dwh/public/qc/adjust/2018...lify=True, attributes={'_ignore_missing': False}), YTPath(path='home/taxi-dwh/public/qc/adjust/2018...lify=True, attributes={'_ignore_missing': False}), YTPath(path='home/taxi-dwh/public/qc/adjust/2018...lify=True, attributes={'_ignore_missing': False}), YTPath(path='home/taxi-dwh/public/qc/adjust/2018...lify=True, attributes={'_ignore_missing': False}), YTPath(path='home/taxi-dwh/public/qc/adjust/2018...lify=True, attributes={'_ignore_missing': False}), YTPath(path='home/taxi-dwh/public/qc/adjust/2018...lify=True, attributes={'_ignore_missing': False}), YTPath(path='home/taxi-dwh/public/qc/adjust
 /2018...lify=True, attributes={'_ignore_missing': False}), YTPath(path='home/taxi-dwh/public/qc/adjust/2018...lify=True, attributes={'_ignore_missing': False}), YTPath(path='home/taxi-dwh/public/qc/adjust/2018...lify=True, attributes={'_ignore_missing': False}), YTPath(path='home/taxi-dwh/public/qc/adjust/2018...lify=True, attributes={'_ignore_missing': False}), YTPath(path='home/taxi-dwh/public/qc/adjust/2018...lify=True, attributes={'_ignore_missing': False}), YTPath(path='home/taxi-dwh/public/qc/adjust/2018...lify=True, attributes={'_ignore_missing': False}), YTPath(path='home/taxi-dwh/public/qc/adjust/2018...lify=True, attributes={'_ignore_missing': False}), YTPath(path='home/taxi-dwh/public/qc/adjust/2018...lify=True, attributes={'_ignore_missing': False}), YTPath(path='home/taxi-dwh/public/qc/adjust/2018...lify=True, attributes={'_ignore_missing': False}), YTPath(path='home/taxi-dwh/public/qc/adjust/2018...lify=True, attributes={'_ignore_missing': False}), YTPath(path='home/ta
 xi-dwh/public/qc/adjust/2018...lify=True, attributes={'_ignore_missing': False}), YTPath(path='home/taxi-dwh/public/qc/adjust/2018...lify=True, attributes={'_ignore_missing': False}), ...])

      39 if missing_paths:
      40 raise PartiallyMissingSourceTablesError(
   -> 41 _convert_paths(missing_paths)
      42 )
      43

Vars:
  global _convert_paths = <function nile.drivers.common.path.utils._convert_paths>
  missing_paths = {YTPath(
                       path='home/taxi-dwh/public/qc/adjust/2018-03-20',
                       client=YTClient(
                           proxy='hahn.yt.yandex.net',
                           token='...',
                           pool='taxi-dwh-priority'),
                       simplify=True,
                       attributes={'_ignore_missing': False}),
                   YTPath(
                       path='home/taxi-dwh/public/qc/adjust/2018-03-21',
                       client=YTClient(
                           proxy='hahn.yt.yandex.net',
                           token='...',
                           pool='taxi-dwh-priority'),
                       simplify=True,
                       attributes={'_ignore_missing': False})}


---------====== Detailed exception attributes ======-------------

args = ()
message = ''
paths = ['home/taxi-dwh/public/qc/adjust/2018-03-20', 'home/taxi-dwh/public/qc/adjust/2018-03-21']
title = "Some source tables for operation don't exist"
