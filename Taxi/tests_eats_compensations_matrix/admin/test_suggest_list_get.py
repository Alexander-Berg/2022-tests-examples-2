async def test_group_list_get(taxi_eats_compensations_matrix, mockserver):
    response = await taxi_eats_compensations_matrix.get(
        '/eats-compensations-matrix/v1/admin/suggest/list/',
    )
    assert response.json() == {
        'situation_order_type': [
            'native',
            'lavka',
            'shop',
            'pharmacy',
            'bk_logist',
            'retail',
        ],
        'situation_order_delivery_type': [
            'marketplace',
            'our_delivery',
            'pickup',
        ],
        'situation_violation_level': ['low', 'medium', 'high'],
        'situation_responsible': [
            'company',
            'place',
            'place_or_courier',
            'courier',
            'fate',
        ],
        'compensation_pack_available_source': [
            'chat',
            'call',
            'mail',
            'system',
            'ml',
        ],
        'compensation_pack_payment_method_type': ['all', 'cash', 'card'],
        'compensation_pack_antifraud_score': [
            'all',
            'orderless',
            'good',
            'other',
            'bad',
        ],
        'compensation_pack_country': [
            'all',
            'ru',
            'kz',
            'by',
            'il',
            'fr',
            'gb',
            'us',
            'za',
        ],
        'compensation_pack_delivery_class': [
            'regular',
            'ultima',
            'slow',
            'fast',
        ],
        'compensation_type_type': [
            'promocode',
            'voucher',
            'refund',
            'superRefund',
            'superVoucher',
            'tipsRefund',
            'deliveryRefund',
            'superPlus',
            'percentPlus',
        ],
        'reason_type': ['unknown', 'native', 'marketplace'],
        'reason_payment_type': ['cash', 'card', 'card_on_delivery'],
        'reason_allowed_callers': [
            'operator',
            'system',
            'courier',
            'place',
            'eater',
        ],
        'reason_allowed_countries': [
            'all',
            'ru',
            'kz',
            'by',
            'il',
            'fr',
            'gb',
            'us',
            'za',
        ],
        'reaction_type': [
            'order.cancel.reaction.client_charge',
            'order.cancel.reaction.compensation',
            'order.cancel.reaction.restoration_reimbursement',
            'order.cancel.reaction.notification',
            'order.cancel.reaction.unblock',
            'order.cancel.reaction.return_promocode',
        ],
        'reaction_is_transferred': ['all', 'true', 'false'],
    }
