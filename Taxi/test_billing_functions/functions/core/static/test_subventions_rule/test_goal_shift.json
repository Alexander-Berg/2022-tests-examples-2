{
  "driver": {
    "$ShiftDriver": {
      "billing_client_id": "billing_client_id",
      "clid": "clid",
      "driver_license_personal_id": "driver_license_personal_id",
      "driver_profile_id": "driver_profile_id",
      "park_id": "park_id",
      "unique_driver_id": "unique_driver_id"
    }
  },
  "expected_shifts": [
    {
      "shift_data": {
        "$GoalRuleShift": {
          "contract_id": 1,
          "counter": "counter",
          "kind": "goal",
          "num_orders": 1
        }
      },
      "shift_properties": {
        "kind": "taxi_goal_shift",
        "process_at": {
          "$datetime": "2020-01-02T00:00:00+03:00"
        },
        "shift_id": "counter/1/1/1",
        "stq_name": "billing_functions_taxi_goal_shift",
        "tags": [
          "taxi/shift_ended/unique_driver_id/udid/2020-01-01/do_x_get_y"
        ],
        "topic": "taxi/shift/unique_driver_id/udid",
        "version": 1
      },
      "taxi_shift": {
        "$TaxiGoalShift": {
          "active_contracts": null,
          "agreement": {
            "$Agreement": {
              "ref": "subvention/counter/counter",
              "rule_data": {
                "$GoalRuleData": {
                  "counter": "counter",
                  "currency": "RUB",
                  "rule_id": "id",
                  "steps": [
                    {
                      "$GoalStepsItem": {
                        "amount": "100",
                        "nrides": 1
                      }
                    }
                  ],
                  "type": "goal"
                }
              }
            }
          },
          "contract": {
            "$ShiftContract": {
              "currency": "RUB",
              "firm_id": 42,
              "id": 1,
              "service_id": 111
            }
          },
          "driver": {
            "$ShiftDriver": {
              "billing_client_id": "billing_client_id",
              "clid": "clid",
              "driver_license_personal_id": "driver_license_personal_id",
              "driver_profile_id": "driver_profile_id",
              "park_id": "park_id",
              "unique_driver_id": "unique_driver_id"
            }
          },
          "pay_per_contract": "yes",
          "payment_meta": {
            "$ShiftPaymentMeta": {
              "budget_id": "budget_id",
              "city_id": "city_id",
              "country_code": "country_code",
              "oebs_mvp_id": "oebs_mvp_id",
              "payment_ref": "payment_ref",
              "service_to_contract": {
                "$ServiceToContract": {}
              },
              "tariff_class": "tariff_class",
              "tariff_zone": "tariff_zone",
              "time_zone": "Europe/Moscow"
            }
          },
          "shift": {
            "$Shift": {
              "duration_in_days": 1,
              "end": {
                "$datetime": "2020-01-02T00:00:00+03:00"
              },
              "start": {
                "$datetime": "2020-01-01T00:00:00+03:00"
              }
            }
          },
          "version": 1
        }
      }
    }
  ],
  "payment_meta": {
    "$ShiftPaymentMeta": {
      "budget_id": "budget_id",
      "city_id": "city_id",
      "country_code": "country_code",
      "oebs_mvp_id": "oebs_mvp_id",
      "payment_ref": "payment_ref",
      "service_to_contract": {
        "$ServiceToContract": {}
      },
      "tariff_class": "tariff_class",
      "tariff_zone": "tariff_zone",
      "time_zone": "Europe/Moscow"
    }
  },
  "rule": {
    "$GoalRule": {
      "budget_id": "budget_id",
      "counter": "counter",
      "currency": "RUB",
      "id": "id",
      "is_personal": false,
      "steps": [
        {
          "$GoalRuleStep": {
            "amount": {
              "$decimal": "100"
            },
            "nrides": 1
          }
        }
      ],
      "window": {
        "$GoalRuleWindow": {
          "end": {
            "$datetime": "2020-01-02T00:00:00+03:00"
          },
          "number": 1,
          "size": 1,
          "start": {
            "$datetime": "2020-01-01T00:00:00+03:00"
          }
        }
      }
    }
  }
}
