#include <gtest/gtest.h>
#include <common/matrixnet_wrapper.hpp>
#include <fstream>
#include <string>

TEST(matrixnet, model) {
  std::ifstream input_stream(std::string(SOURCE_DIR) +
                             "/tests/static/matrixnet/model.info");
  std::vector<char> file_contents(
      (std::istreambuf_iterator<char>(input_stream)),
      std::istreambuf_iterator<char>());

  utils::matrixnet::MatrixnetWrapper info(std::move(file_contents));

  std::vector<float> data{1029790.0,
                          0.0,
                          0.0,
                          0.0,
                          0.0,
                          91000.0,
                          46.912100000000002,
                          -1.0,
                          -1.0,
                          1280000000.0,
                          0.0,
                          154.78800000000001,
                          19.77,
                          0.30866700000000002,
                          2.0,
                          0.0,
                          0.0,
                          0.0,
                          0.0,
                          0.0083999999999999995,
                          1.0,
                          0.0,
                          -230.25899999999999,
                          0.990676,
                          1415260.0,
                          0.0,
                          13011.0,
                          1444.0,
                          0.34999999999999998,
                          0.62307900000000005,
                          0.0,
                          0.0,
                          -1.0,
                          0.0,
                          0.0,
                          1594.0,
                          238.0,
                          23774.0,
                          205.0,
                          191.0,
                          48.0,
                          215.0,
                          1.0,
                          1329338624.0,
                          1329338624.0,
                          0.0,
                          1.0,
                          0.0,
                          0.0,
                          0.0,
                          0.0,
                          0.0,
                          0.0,
                          0.0,
                          0.0,
                          0.0,
                          0.0,
                          0.0,
                          0.0,
                          0.0,
                          11.6326,
                          4.5612599999999999,
                          7.1691200000000004,
                          6.8840599999999998,
                          14323.0,
                          1823.0,
                          1011.0,
                          0.070585800000000004,
                          0.55457999999999996,
                          14246.0,
                          3788.0,
                          2349.0,
                          0.16488800000000001,
                          0.620116,
                          0.65059,
                          814.0,
                          0.0,
                          0.0,
                          46.0,
                          0.377056,
                          314.0,
                          68.0,
                          142.0,
                          71.0,
                          19.0,
                          88.0,
                          1.0,
                          1329427584.0,
                          1329427584.0,
                          0.27800000000000002,
                          30.491499999999998,
                          0.165432};

  // EXPECT_EQ(info.GetNumFactors(), data.size());
  EXPECT_EQ(info.Calc(data), 0.8053852333738295);
}
