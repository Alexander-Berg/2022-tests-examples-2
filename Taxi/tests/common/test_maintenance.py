import pytest

from stall import maintenance


@pytest.mark.parametrize(
    'variant',
    [
        (
            [], None, 0, 'не попадаем: нет остановок',
        ),
        (
            [
                ('1970-01-01T00:00:00', '1970-01-01T00:00:15'),
                ('1970-01-01T00:00:30', '1970-01-01T00:00:45'),

            ],
            '1970-01-01T00:00:46',
            0,
            'не попадаем: все остановки в прошлом',
        ),
        (
            [
                ('1970-01-01T00:01:00', '1970-01-01T00:01:15'),
                ('1970-01-01T00:01:30', '1970-01-01T00:01:45'),

            ],
            '1970-01-01T00:00:00',
            0,
            'не попадаем: все остановки в будущем',
        ),
        (
            [
                ('1970-01-01T00:00:00', '1970-01-01T00:00:15'),
                ('1970-01-01T00:00:30', '1970-01-01T00:00:45'),
                ('1970-01-01T00:01:00', '1970-01-01T00:01:15'),
                ('1970-01-01T00:01:30', '1970-01-01T00:01:45'),
            ],
            '1970-01-01T00:00:46',
            0,
            'не попадаем: активные остановки в будущем',
        ),
        (
            [
                ('1970-01-01T00:00:00', '1970-01-01T00:00:15'),
                ('1970-01-01T00:00:30', '1970-01-01T00:00:45'),
                ('1970-01-01T00:01:00', '1970-01-01T00:01:15'),
                ('1970-01-01T00:01:30', '1970-01-01T00:01:45'),
            ],
            '1970-01-01T00:01:00',
            15.0,
            'попадаем: в начало остановки',
        ),
        (
            [
                ('1970-01-01T00:00:00', '1970-01-01T00:00:15'),
                ('1970-01-01T00:00:30', '1970-01-01T00:00:45'),
                ('1970-01-01T00:01:00', '1970-01-01T00:01:15'),
                ('1970-01-01T00:01:30', '1970-01-01T00:01:45'),
            ],
            '1970-01-01T00:01:01',
            14,
            'попадаем: [*]',
        ),
        (
            [
                ('1970-01-01T00:00:00', '1970-01-01T00:00:15'),
                ('1970-01-01T00:00:30', '1970-01-01T00:00:45'),
                ('1970-01-01T00:01:00', '1970-01-01T00:01:15'),
                ('1970-01-01T00:01:30', '1970-01-01T00:01:45'),
            ],
            '1970-01-01T00:01:15',
            0,
            'попадаем: в конец остановки',
        ),
        (
            [
                ('1970-01-01T00:00:00', '1970-01-01T00:00:15'),
                ('1970-01-01T00:00:30', '1970-01-01T00:00:45'),
                ('1970-01-01T00:01:00', '1970-01-01T00:01:15'),
                ('1970-01-01T00:01:30', '1970-01-01T00:01:45'),
            ],
            '1970-01-01T00:01:16',
            0,
            'не попадаем: вышли из активной остановки',
        ),
        (
            [
                ('1970-01-01T00:00:00+03:00', '1970-01-01T00:00:15+03:00'),
                ('1970-01-01T00:00:30+03:00', '1970-01-01T00:00:45+03:00'),
                ('1970-01-01T00:01:00+03:00', '1970-01-01T00:01:15+03:00'),
                ('1970-01-01T00:01:30+03:00', '1970-01-01T00:01:45+03:00'),
            ],
            '1970-01-01T00:01:00+03:00',
            15.0,
            'попадаем: время с таймзонами',
        ),
    ]
)
def test_maintenance(tap, cfg, variant):
    schedule, cur_t, expected, desc = variant

    with tap.plan(1):
        cfg.set(
            'maintenance.schedule',
            [{'from': i[0], 'to': i[1]} for i in schedule],
        )
        maintenance.SCHEDULE = None

        tap.eq(maintenance.in_progress(cur_t), expected, desc)
