INSERT INTO hiring_taxiparks_gambling_salesforce.cars (
    sf_id,
    brand,
    model,
    rental_cost_min,
    scheme_of_work,
    park_conditions_id,
    is_deleted
) VALUES
(
    'car 1',
    'Ford',
    'Polo',
    1500.0,
    'Rent;Salary',
    'matched_condition',
    FALSE
),(
    'car 2',
    null,
    null,
    null,
    null,
    'matched_condition',
    FALSE
);

INSERT INTO hiring_taxiparks_gambling_salesforce.hiring_conditions (
    sf_id,
    sf_name,
    is_acquisition,
    is_deleted,
    rev,
    offers_rent,
    accepts_private_vehicles,
    hiring_territories,
    weight_rent,
    weight_private,
    extra
) VALUES
(
    'experiment_park',
    'Experiment Park',
    TRUE,
    FALSE,
    1,
    TRUE,
    TRUE,
    '{"experiment_territory"}',
    1,
    1,
    '{"test_field": 1, "db_id__c": "mmm"}'::jsonb
),
(
    'experiment_park_2',
    'Experiment Park 2',
    TRUE,
    FALSE,
    1,
    TRUE,
    TRUE,
    '{"experiment_territory"}',
    1,
    1,
    '{"mandatory_field": 1, "optional_field": 1, "db_id__c": "ttt"}'::jsonb
),
(
    'experiment_park_3',
    'Experiment Park 3',
    TRUE,
    FALSE,
    1,
    TRUE,
    TRUE,
    '{"experiment_territory"}',
    1,
    1,
    '{"mandatory_field": 2, "optional_field": 2, "db_id__c": "ooo"}'::jsonb
),
(
    'first_park',
    'First Park',
    TRUE,
    FALSE,
    1,
    TRUE,
    TRUE,
    '{"exclude_territory"}',
    1,
    1,
    '{"db_id__c": "lll"}'::jsonb
),
(
    'second_park',
    'Second Park',
    TRUE,
    FALSE,
    1,
    TRUE,
    TRUE,
    '{"exclude_territory"}',
    1,
    1,
    '{"db_id__c": "ppp"}'::jsonb
),
(
    'rent_park',
    'Rent Park',
    TRUE,
    FALSE,
    1,
    TRUE,
    FALSE,
    '{"rent_territory"}',
    1,
    1,
    '{"db_id__c": "yyy"}'::jsonb
),
(
    'private_park',
    'Private Park',
    TRUE,
    FALSE,
    1,
    FALSE,
    TRUE,
    '{"rent_territory"}',
    1,
    1,
    '{"db_id__c": "zzz"}'::jsonb
),
(
    'rent_and_private_park',
    'Rent & Private Park',
    TRUE,
    FALSE,
    1,
    TRUE,
    TRUE,
    '{"rent_territory"}',
    1,
    1,
    '{"db_id__c": "xxx"}'::jsonb
),
(
    'matched_condition',
    'Matched Condition',
    TRUE,
    FALSE,
    1,
    FALSE,
    TRUE,
    '{"simple_territory"}',
    1,
    1,
    '{"db_id__c": "park_id"}'::jsonb
),
(
    'matched_condition 2',
    'Matched Condition 2',
    TRUE,
    FALSE,
    1,
    FALSE,
    TRUE,
    '{"simple_territory"}',
    1,
    1,
    '{"db_id__c": "park_id excluded"}'::jsonb
),
(
    'fired_condition',
    'Fired condition',
    TRUE,
    FALSE,
    1,
    FALSE,
    TRUE,
    '{"fired_territory"}',
    1,
    1,
    '{"db_id__c": "fired park_id"}'::jsonb
),
(
    'not_acquisition',
    'Not Acquisition',
    FALSE,
    FALSE,
    1,
    TRUE,
    FALSE,
    '{"simple_territory"}',
    1,
    1,
    '{"db_id__c": "hhh"}'::jsonb
),
(
    'unmatched_condition',
    'Unmatched Condition',
    TRUE,
    FALSE,
    1,
    TRUE,
    FALSE,
    '{"simple_territory"}',
    1,
    1,
    '{"db_id__c": "rrr"}'::jsonb
),
(
    'unmatched_condition_2',
    'Unmatched Condition 2',
    TRUE,
    FALSE,
    1,
    TRUE,
    TRUE,
    '{"unsimple_territory"}',
    1,
    1,
    '{"db_id__c": "fff"}'::jsonb
),
(
    'tag_experiment_park1',
    'Experiment Park',
    TRUE,
    FALSE,
    1,
    TRUE,
    TRUE,
    '{"tag_experiment_territory"}',
    1,
    1,
    '{"Tag":"newsort1", "db_id__c": "www"}'::jsonb
),
(
    'tag_experiment_park2',
    'Experiment Park exp',
    TRUE,
    FALSE,
    1,
    TRUE,
    TRUE,
    '{"tag_experiment_territory"}',
    1,
    1,
    '{"Tag": "some", "db_id__c": "sss"}'::jsonb
),
(
    'tag_experiment_park3',
    'Experiment Park',
    TRUE,
    FALSE,
    1,
    TRUE,
    TRUE,
    '{"tag_experiment_territory"}',
    1,
    1,
   '{"db_id__c": "jjj"}'::jsonb
),
(
    'localized_park_1',
    'Localized Park_1',
    TRUE,
    FALSE,
    1,
    TRUE,
    TRUE,
    '{"localized_territory"}',
    1,
    1,
    '{
        "db_id__c": "qqq", "DrivingLicenseIssuingCountry__c": "Russia;Kazakhstan;Belarus",
        "Nationality__c": "RF;KZ;BLR",
        "Registration_Temporary_registration__c": "Registration_in_Russian_Federation"
    }'::jsonb
),
(
    'localized_park_2',
    'Localized Park_2',
    TRUE,
    FALSE,
    1,
    TRUE,
    TRUE,
    '{"localized_empty_territory"}',
    1,
    1,
    '{
        "DrivingLicenseIssuingCountry__c": "Russia",
        "Nationality__c": "RF", "db_id__c": "ddd"
    }'::jsonb
);
