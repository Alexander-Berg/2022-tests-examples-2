from supportai_actions.action_types.taxi_order_by_phone_incoming_call.taxi_order_utils import (  # noqa
    point_helpers,
)


async def test_address_correction():
    good_cases = [
        # user_correction, address, expected_corrected_address
        ('4', 'Улица улица, дом 3', 'Улица улица, дом 4'),
        ('4 а', 'Улица улица, дом 3', 'Улица улица, дом 4а'),
        ('4 а', 'Улица улица, дом 3Б', 'Улица улица, дом 4а'),
        ('а 4 а', 'Улица улица, дом 3Б', 'Улица улица, дом 4а'),
        ('а 4 б а а', 'Улица улица, дом 3Б', 'Улица улица, дом 4б'),
        ('а', 'Улица улица, дом 3Б', 'Улица улица, дом 3а'),
        ('а', 'Улица улица, дом 3к2', 'Улица улица, дом 3а'),
        ('4', 'Улица улица, дом 3с4', 'Улица улица, дом 4'),
        ('бэ бэ', 'Улица улица, дом 3Ас4', 'Улица улица, дом 3б'),
        (
            '34 34 строение 3',
            'Улица 17 фонарей, дом 3',
            'Улица 17 фонарей, дом 34 строение 3',
        ),
        ('4 строение 2 подъезд 3', 'Мира 3Бс4', 'Мира 4 строение 2 подъезд 3'),
        ('4 подъезд 3 строение 2', 'Мира 3БсА', 'Мира 4 строение 2 подъезд 3'),
        ('4 строение 2 3 подъезд', 'Мира 3Б', 'Мира 4 строение 2 подъезд 3'),
        ('4 2 строение 3 подъезд', 'Мира 3Б', 'Мира 4 строение 2 подъезд 3'),
        ('4 4 2 строение 3 подъезд', 'Мира 3Б', 'Мира 4 строение 2 подъезд 3'),
        ('4 4 строение Б 3 подъезд', 'Мира 3Б', 'Мира 4 строение Б подъезд 3'),
        ('4 4 строение 3 Б подъезд', 'Мира 3Б', 'Мира 4 строение 4 подъезд 3'),
        ('4 4 строение 3 подъезд Б', 'Мира 3Б', 'Мира 4 строение 3 подъезд Б'),
        ('4 4 строение 3 Б подъезд', 'Мира 3Б', 'Мира 4 строение 4 подъезд 3'),
        ('2 строение 3 подъезд', 'Мира 3Б', 'Мира 3Б строение 2 подъезд 3'),
        ('13/15 б', 'Мира 3', 'Мира 13/15б'),
        ('13 13 13/15 б', 'Мира 3', 'Мира 13/15б'),
        ('13 13 б 13/15 б 15 4 подъезд', 'Мира 3', 'Мира 13/15б подъезд 4'),
        ('13 13 13/15 б', 'Мира 3', 'Мира 13/15б'),
    ]

    bad_cases = [
        # user_correction, address
        ('4 5', 'Мира 4'),
        ('4', 'Мира'),
        ('13 13 13/15 14 б', 'Мира 3'),
    ]
    for user_correction, address, expected_corrected_address in good_cases:
        corrected_address = point_helpers.try_correct_address(
            address, user_correction,
        )
        assert corrected_address == expected_corrected_address

    for user_correction, address in bad_cases:
        corrected_address = point_helpers.try_correct_address(
            address, user_correction,
        )
        assert corrected_address is None
