{
  "docs": [
    {
      "data": {
        "alias_id": "<alias_id>",
        "amount": "100.0",
        "driver": {
          "billing_client_id": "<billing_client_id>",
          "clid": "<clid>",
          "driver_uuid": "<driver_uuid>",
          "park_id": "<park_id>"
        },
        "due": "2019-11-11T11:11:11.000000+00:00",
        "nearest_zone": "spb",
        "order_id": "<order_id>",
        "schema_version": "1",
        "transaction_type": "payment",
        "wallet_account": {
          "agreement_id": "wallet/yandex",
          "currency": "RUB",
          "entity_external_id": "wallet_id/some_number_value",
          "sub_account": "deposit"
        }
      },
      "doc_id": 1010,
      "event_at": "2019-11-28T11:11:11.000000+00:00",
      "external_event_ref": "<payment_id>",
      "external_obj_id": "taxi/personal_wallet_charge/<alias_id>",
      "journal_entries": [],
      "kind": "personal_wallet_charge",
      "service": "billing-orders",
      "status": "new",
      "tags": [
        "taxi/alias_id/<alias_id>"
      ]
    }
  ],
  "expected_accounts": [
    {
      "account_id": 1,
      "agreement_id": "wallet/yandex",
      "currency": "RUB",
      "entity_external_id": "wallet_id/some_number_value",
      "expired": "9999-12-31T23:59:59.999999+00:00",
      "opened": "2018-10-10T09:56:13.758202Z",
      "sub_account": "deposit"
    }
  ],
  "expected_docs": [
    {
      "data": {
        "execution_modes": {
          "append_mode": "append_if",
          "append_mode_settings": {
            "balance": "100.0"
          }
        }
      },
      "event_at": "2019-11-28T11:11:11.000000+00:00",
      "external_event_ref": "<payment_id>",
      "external_obj_id": "taxi/personal_wallet_charge/<alias_id>/wallet_charge",
      "journal_entries": [
        {
          "account_id": 1,
          "amount": "-100.0",
          "details": {},
          "event_at": "2019-11-28T11:11:11.000000+00:00",
          "reason": ""
        }
      ],
      "kind": "wallet_charge",
      "service": "billing-calculators",
      "status": "complete",
      "tags": [
        "taxi/alias_id/<alias_id>"
      ]
    }
  ],
  "expected_entities": [
    {
      "external_id": "wallet_id/some_number_value",
      "kind": "wallet"
    }
  ],
  "expected_orders": [
    {
      "data": {
        "driver_income": {
          "alias_id": "<alias_id>",
          "components": [
            {
              "amount": "100.0",
              "currency": "RUB",
              "kind": "promocode"
            }
          ],
          "driver": {
            "db_id": "<park_id>",
            "driver_uuid": "<driver_uuid>"
          },
          "order_event_at": "2019-11-11T11:11:11.000000+00:00"
        },
        "event_version": 1,
        "payments": [
          {
            "amount": "100.0",
            "billing_client_id": "<billing_client_id>",
            "currency": "RUB",
            "invoice_date": "2019-11-11T11:11:11.000000+00:00",
            "payload": {
              "agglomeration": "mvp",
              "alias_id": "<alias_id>",
              "base_doc_id": 1010,
              "contract_currency": null,
              "contract_currency_rate": null,
              "detailed_product": "coupon_personal_wallet",
              "donate_multiplier": null,
              "driver": {
                "clid": "<clid>",
                "db_id": "<park_id>",
                "driver_uuid": "<driver_uuid>"
              },
              "is_netting": null,
              "nearest_zone": "spb",
              "order_id": "<order_id>",
              "transaction_type": "payment"
            },
            "payment_kind": "coupon"
          }
        ],
        "schema_version": "v2",
        "topic_begin_at": "2019-11-11T11:11:11.000000+00:00"
      },
      "event_at": "2019-11-28T11:11:11.000000+00:00",
      "external_ref": "<payment_id>",
      "kind": "promocode",
      "tags": [
        "taxi/alias_id/<alias_id>"
      ],
      "topic": "taxi/personal_wallet_charge/<alias_id>/<payment_id>/driver_payment"
    }
  ],
  "expected_tlog_entries": [],
  "reports": {
    "docs/select": {
      "docs": []
    },
    "journal/search": {
      "entries": []
    }
  }
}
