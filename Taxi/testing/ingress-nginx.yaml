apiVersion: v1
kind: Service
metadata:
  name: controller
  namespace: ingress-nginx
  labels:
    app: ingress-nginx
  annotations:
    yandex.cloud/load-balancer-type: internal
    yandex.cloud/subnet-id: e9b8g1k8gs4odf9b4lt7
spec:
  type: LoadBalancer
  selector:
    app: ingress-nginx
  ports:
    - name: http
      protocol: TCP
      port: 80
      appProtocol: http
      targetPort: http

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: controller
  namespace: ingress-nginx
  labels:
    app: ingress-nginx
data:
  allow-snippet-annotations: 'true'
  log-format-upstream: |-
    $time_iso8601 [$remote_user@$remote_addr:$remote_port] $status $body_bytes_sent "$request" "$http_referer" "$http_user_agent"
    $request_length $request_time $host [$proxy_upstream_name] $upstream_addr $proxy_alternative_upstream_name
    $upstream_response_length $upstream_response_time $upstream_status $req_id

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller
  namespace: ingress-nginx
  labels:
    app: ingress-nginx
spec:
  selector:
    matchLabels:
      app: ingress-nginx
  revisionHistoryLimit: 10
  minReadySeconds: 0
  template:
    metadata:
      labels:
        app: ingress-nginx
    spec:
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: ingress-nginx
      containers:
        - name: controller
          image: k8s.gcr.io/ingress-nginx/controller:v1.1.1
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                  - /wait-shutdown
          args:
            - /nginx-ingress-controller
            - --election-id=ingress-controller-leader
            - --controller-class=k8s.io/ingress-nginx
            - --configmap=$(POD_NAMESPACE)/controller
          securityContext:
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
            runAsUser: 101
            allowPrivilegeEscalation: true
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LD_PRELOAD
              value: /usr/local/lib/libmimalloc.so
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 90Mi

---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: nginx
  namespace: ingress-nginx
  labels:
    app: ingress-nginx
spec:
  controller: k8s.io/ingress-nginx
