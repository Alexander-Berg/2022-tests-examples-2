/* THIS FILE IS AUTOGENERATED, DON'T EDIT! */

// This file was generated from file(s):
// taxi/schemas/schemas/configs/declarations/locales/LOCALES_SUPPORTED.yaml

#include <codegen/impl/convert.hpp>
#include <codegen/impl/get_validation_length.hpp>
#include <codegen/impl/optional_convert.hpp>
#include <codegen/impl/parsers.hpp>
#include <cstring>
#include <taxi_config/variables/LOCALES_SUPPORTED.hpp>
#include <unordered_set>
#include <userver/dynamic_config/value.hpp>
#include <userver/formats/common/meta.hpp>
#include <userver/formats/json/serialize_container.hpp>
#include <userver/formats/json/string_builder.hpp>
#include <userver/formats/parse/common_containers.hpp>
#include <userver/logging/log.hpp>
#include <userver/utils/assert.hpp>
#include <userver/utils/datetime/from_string_saturating.hpp>
#include <userver/utils/underlying_value.hpp>

namespace taxi_config::locales_supported {

VariableType ParseVariable(const dynamic_config::DocsMap& docs_map) {
  return [](const formats::json::Value& array) -> std::vector<std::string> {
    std::vector<std::string> result;
    array.CheckArrayOrNull();
    result.reserve(array.GetSize());
    for (const auto& item : array) {
      result.insert(result.end(), item.As<std::string>());
    }

    return result;
  }(docs_map.Get("LOCALES_SUPPORTED"));
}

}
