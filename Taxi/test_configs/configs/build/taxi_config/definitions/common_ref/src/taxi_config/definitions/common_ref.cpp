/* THIS FILE IS AUTOGENERATED, DON'T EDIT! */

// This file was generated from file(s):
// taxi/schemas/schemas/configs/definitions/common/ref.yaml

#include <taxi_config/definitions/common_ref.hpp>

#include <codegen/impl/convert.hpp>
#include <codegen/impl/get_validation_length.hpp>
#include <codegen/impl/optional_convert.hpp>
#include <codegen/impl/parsers.hpp>
#include <cstring>
#include <unordered_set>
#include <userver/formats/common/meta.hpp>
#include <userver/formats/json/serialize_container.hpp>
#include <userver/formats/json/string_builder.hpp>
#include <userver/logging/log.hpp>
#include <userver/utils/assert.hpp>
#include <userver/utils/datetime/from_string_saturating.hpp>
#include <userver/utils/underlying_value.hpp>

namespace taxi_config::common_ref {

static const std::unordered_set<std::string> kObjNonExtraKeys = {};

taxi_config::common_ref::Obj Parse(
    [[maybe_unused]] const formats::json::Value& elem,
    formats::parse::To<taxi_config::common_ref::Obj>,
    [[maybe_unused]] ::codegen::ParsingFlags flags) {
  taxi_config::common_ref::Obj result;

  elem.CheckNotMissing();
  elem.CheckObjectOrNull();

  formats::json::ValueBuilder extra_value_builder(formats::json::Type::kObject);

  if (flags == ::codegen::ParsingFlags::kParseExtra)
  {
    for (auto it = elem.begin(); it != elem.end(); ++it) {
      const auto& name = it.GetName();
      /* Skip 'properties', they don't go to additionalProperties */
      if (kObjNonExtraKeys.count(name) > 0) continue;

      extra_value_builder[name] = *it;
    }

    result.extra = extra_value_builder.ExtractValue();
  }

  return result;
}

}
