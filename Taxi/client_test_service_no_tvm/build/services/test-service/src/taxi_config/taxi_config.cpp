/* THIS FILE IS AUTOGENERATED, DON'T EDIT! */

#include <taxi_config/taxi_config.hpp>

#include <userver/formats/json/serialize_container.hpp>
#include <userver/formats/json/serialize_duration.hpp>

#include <array>
#include <boost/type_traits/has_equal_to.hpp>
#include <codegen/convert_to_json_optional.hpp>
#include <codegen/format.hpp>
#include <codegen/parsing_flags.hpp>
#include <userver/formats/json/inline.hpp>
#include <userver/formats/json/string_builder_fwd.hpp>
#include <userver/formats/json/value_builder.hpp>
#include <userver/logging/log_helper_fwd.hpp>

#include <codegen/impl/convert.hpp>
#include <codegen/impl/get_validation_length.hpp>
#include <codegen/impl/optional_convert.hpp>
#include <codegen/impl/parsers.hpp>
#include <cstring>
#include <unordered_set>
#include <userver/formats/common/meta.hpp>
#include <userver/formats/json/string_builder.hpp>
#include <userver/logging/log.hpp>
#include <userver/utils/assert.hpp>
#include <userver/utils/datetime/from_string_saturating.hpp>
#include <userver/utils/underlying_value.hpp>

#include <userver/compiler/demangle.hpp>

namespace taxi_config {

TaxiConfig::TaxiConfig(const dynamic_config::DocsMap& docs_map)
    : client_test_service_client_qos(
          CLIENT_TEST_SERVICE_CLIENT_QOS.Parse(docs_map))
{}

}
