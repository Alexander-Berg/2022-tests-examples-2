/* THIS FILE IS AUTOGENERATED, DON'T EDIT! */

// This file was generated from file(s):
// taxi/schemas/schemas/services/client-test-service/api/api-3.0.yaml,
// taxi/schemas/schemas/services/client-test-service/api/api.yaml

#pragma once

#include <userver/utest/utest.hpp>

#include <clients/client-test-service/client.hpp>
#include <clients/codegen/response_future.hpp>

namespace clients::client_test_service {

/// @brief Mock for Service for clients codegen testing client
///
/// Derive from this class and override functions you're interested in.
///
/// Version: 0.1
class ClientMockBase: public Client {
 public:
  /// URL: /v1/my-arg/smth
  /// @param request запрос
  /// @param command_control специфичные настройки timeout/retries. Если
  /// std::nullopt, то используется значение из TaxiConfig.
  ///
  /// @throw v1_my_arg_smth::get::Exception
  v1_my_arg_smth::get::Response V1MyArgSmthGet(
      const v1_my_arg_smth::get::Request& /*request*/,
      const CommandControl& /*command_control*/ = {}) const override {
    throw std::runtime_error("Not implemented method /v1/{my-arg}/smth (GET)");
  }

  ::clients::codegen::ResponseFuture<v1_my_arg_smth::get::Response>
  AsyncV1MyArgSmthGet(
      const v1_my_arg_smth::get::Request& /*request*/,
      const CommandControl& /*command_control*/ = {}) const override {
    throw std::runtime_error(
        "Not implemented method Async/v1/{my-arg}/smth (GET)");
  }

  /// URL: /v1/my-arg/smth
  /// @param request запрос
  /// @param command_control специфичные настройки timeout/retries. Если
  /// std::nullopt, то используется значение из TaxiConfig.
  ///
  /// @throw v1_my_arg_smth::post::Exception
  /// @throw v1_my_arg_smth::post::Response404
  v1_my_arg_smth::post::Response V1MyArgSmthPost(
      const v1_my_arg_smth::post::Request& /*request*/,
      const CommandControl& /*command_control*/ = {}) const override {
    throw std::runtime_error("Not implemented method /v1/{my-arg}/smth (POST)");
  }

  ::clients::codegen::ResponseFuture<v1_my_arg_smth::post::Response>
  AsyncV1MyArgSmthPost(
      const v1_my_arg_smth::post::Request& /*request*/,
      const CommandControl& /*command_control*/ = {}) const override {
    throw std::runtime_error(
        "Not implemented method Async/v1/{my-arg}/smth (POST)");
  }

  /// URL: /v2/smth
  /// @param command_control специфичные настройки timeout/retries. Если
  /// std::nullopt, то используется значение из TaxiConfig.
  ///
  /// @throw v2_smth::get::Exception

  /// URL: /v2/smth
  /// @param request запрос
  /// @param command_control специфичные настройки timeout/retries. Если
  /// std::nullopt, то используется значение из TaxiConfig.
  ///
  /// @throw v2_smth::post::Exception

  /// URL: /v3/smth
  /// @param command_control специфичные настройки timeout/retries. Если
  /// std::nullopt, то используется значение из TaxiConfig.
  ///
  /// @throw v3_smth::get::Exception
  v3_smth::get::Response V3SmthGet(
      const CommandControl& /*command_control*/ = {}) const override {
    throw std::runtime_error("Not implemented method /v3/smth (GET)");
  }

  ::clients::codegen::ResponseFuture<v3_smth::get::Response> AsyncV3SmthGet(
      const CommandControl& /*command_control*/ = {}) const override {
    throw std::runtime_error("Not implemented method Async/v3/smth (GET)");
  }

  /// URL: /v3/smth
  /// @param request запрос
  /// @param command_control специфичные настройки timeout/retries. Если
  /// std::nullopt, то используется значение из TaxiConfig.
  ///
  /// @throw v3_smth::post::Exception

  /// URL: /
  /// @param request запрос
  /// @param command_control специфичные настройки timeout/retries. Если
  /// std::nullopt, то используется значение из TaxiConfig.
  ///
  /// @throw root_::get::Exception
  root_::get::Response NsGet(
      const root_::get::Request& /*request*/,
      const CommandControl& /*command_control*/ = {}) const override {
    throw std::runtime_error("Not implemented method / (GET)");
  }

  ::clients::codegen::ResponseFuture<root_::get::Response> AsyncNsGet(
      const root_::get::Request& /*request*/,
      const CommandControl& /*command_control*/ = {}) const override {
    throw std::runtime_error("Not implemented method Async/ (GET)");
  }

  /// URL: /
  /// @param request запрос
  /// @param command_control специфичные настройки timeout/retries. Если
  /// std::nullopt, то используется значение из TaxiConfig.
  ///
  /// @throw root_::post::Exception
  /// @throw root_::post::Response404
  root_::post::Response NsPost(
      const root_::post::Request& /*request*/,
      const CommandControl& /*command_control*/ = {}) const override {
    throw std::runtime_error("Not implemented method / (POST)");
  }

  ::clients::codegen::ResponseFuture<root_::post::Response> AsyncNsPost(
      const root_::post::Request& /*request*/,
      const CommandControl& /*command_control*/ = {}) const override {
    throw std::runtime_error("Not implemented method Async/ (POST)");
  }
};

}
