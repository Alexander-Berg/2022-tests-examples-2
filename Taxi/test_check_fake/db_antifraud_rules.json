[
  {
    "_id": "test_rule1",
    "additional_params": {},
    "created": {
      "$date": "2016-01-02T01:00:09.070Z"
    },
    "debug": true,
    "description": "",
    "enabled": true,
    "priority": 100,
    "reason_message": "",
    "src": "function on_check_fake() { return false; }",
    "test": false,
    "type_id": 3,
    "updated": {
      "$date": "2016-01-02T02:00:09.070Z"
    }
  },
  {
    "_id": "test_rule_test1",
    "additional_params": {},
    "created": {
      "$date": "2016-01-02T01:00:09.070Z"
    },
    "debug": false,
    "description": "",
    "enabled": true,
    "priority": 1000,
    "reason_message": "",
    "src": "function on_check_fake() { return true; }",
    "test": true,
    "type_id": 3,
    "updated": {
      "$date": "2016-01-02T02:00:09.070Z"
    }
  },
  {
    "_id": "test_bad_js_rule1",
    "additional_params": {},
    "created": {
      "$date": "2016-01-02T01:00:09.070Z"
    },
    "debug": true,
    "description": "",
    "enabled": true,
    "priority": 99,
    "reason_message": "",
    "src": "function on_check_fake() { f); return true; }",
    "test": false,
    "type_id": 3,
    "updated": {
      "$date": "2016-01-02T02:00:09.070Z"
    }
  },
  {
    "_id": "test_bad_js_rule2",
    "additional_params": {},
    "created": {
      "$date": "2016-01-02T01:00:09.070Z"
    },
    "debug": true,
    "description": "",
    "enabled": true,
    "priority": 98,
    "reason_message": "",
    "src": "a = true; function on_check_fake() { return a; }",
    "test": false,
    "type_id": 3,
    "updated": {
      "$date": "2016-01-02T02:00:09.070Z"
    }
  },
  {
    "_id": "test_bad_js_rule3",
    "additional_params": {},
    "created": {
      "$date": "2016-01-02T01:00:09.070Z"
    },
    "debug": true,
    "description": "",
    "enabled": true,
    "priority": 97,
    "reason_message": "",
    "src": "function on_check_fake() { b.c = true; return b.c; }",
    "test": false,
    "type_id": 3,
    "updated": {
      "$date": "2016-01-02T02:00:09.070Z"
    }
  },
  {
    "_id": "test_bad_js_rule4",
    "additional_params": {},
    "created": {
      "$date": "2016-01-02T01:00:09.070Z"
    },
    "debug": true,
    "description": "",
    "enabled": true,
    "priority": 96,
    "reason_message": "",
    "src": "function on_check_ord() { return true; }",
    "test": false,
    "type_id": 3,
    "updated": {
      "$date": "2016-01-02T02:00:09.070Z"
    }
  },
  {
    "_id": "test_bad_js_rule5",
    "additional_params": {},
    "created": {
      "$date": "2016-01-02T01:00:09.070Z"
    },
    "debug": true,
    "description": "",
    "enabled": true,
    "priority": 95,
    "reason_message": "",
    "src": "true;",
    "test": false,
    "type_id": 3,
    "updated": {
      "$date": "2016-01-02T02:00:09.070Z"
    }
  },
  {
    "_id": "test_bad_js_rule6",
    "additional_params": {},
    "created": {
      "$date": "2016-01-02T01:00:09.070Z"
    },
    "debug": true,
    "description": "",
    "enabled": true,
    "priority": 94,
    "reason_message": "",
    "src": "function on_check_fake() { d = true; return d; }",
    "test": false,
    "type_id": 3,
    "updated": {
      "$date": "2016-01-02T02:00:09.070Z"
    }
  },
  {
    "_id": "test_bad_js_rule7",
    "additional_params": {},
    "created": {
      "$date": "2016-01-02T01:00:09.070Z"
    },
    "debug": true,
    "description": "",
    "enabled": true,
    "priority": 93,
    "reason_message": "",
    "src": "function on_check_fake() { const ret = 42; return ret; }",
    "test": false,
    "type_id": 3,
    "updated": {
      "$date": "2016-01-02T02:00:09.070Z"
    }
  },
  {
    "_id": "test_rule2",
    "additional_params": {},
    "created": {
      "$date": "2016-01-02T01:00:09.070Z"
    },
    "debug": true,
    "description": "",
    "enabled": true,
    "priority": 50,
    "reason_message": "",
    "src": "function on_check_fake({user_id, zone, user_phone}) { if(typeof zone == 'undefined' || zone !== 'reutov') { return false; } if(typeof user_phone == 'undefined' || user_phone !== '+79169999999') { return false; } if(typeof user_id == 'undefined' || user_id !== 'df6b27dc9b044fbdb5b703ba993a1786') { return false; } return true; }",
    "test": false,
    "type_id": 3,
    "updated": {
      "$date": "2016-01-02T02:00:09.070Z"
    }
  },
  {
    "_id": "test_rule2_2",
    "additional_params": {},
    "created": {
      "$date": "2016-01-02T01:00:09.070Z"
    },
    "debug": true,
    "description": "",
    "enabled": true,
    "priority": 51,
    "reason_message": "",
    "src": "function on_check_fake({user_id, zone, user_phone}) { if(typeof zone == 'undefined' || zone !== 'reutov') { return false; } if(typeof user_phone == 'undefined' || user_phone !== '+79169999999') { return false; } if(typeof user_id == 'undefined' || user_id !== 'df6b27dc9b044fbdb5b703ba993a1786') { return false; } return true; }",
    "test": false,
    "type_id": 3,
    "updated": {
      "$date": "2016-01-02T02:00:09.070Z"
    }
  },
  {
    "_id": "test_rule3",
    "additional_params": {},
    "created": {
      "$date": "2016-01-02T01:00:09.070Z"
    },
    "debug": true,
    "description": "",
    "enabled": true,
    "priority": 50,
    "reason_message": "",
    "src": "function on_check_fake({position}) { if(typeof position == 'undefined') { return false; } if(typeof position.lat == 'undefined' || +position.lat.toFixed(5) !== 55.73532) { return false; } if(typeof position.lon == 'undefined' || +position.lon.toFixed(5) !== 37.64473) { return false; } return true; }",
    "test": false,
    "type_id": 3,
    "updated": {
      "$date": "2016-01-02T02:00:09.070Z"
    }
  },
  {
    "_id": "test_rule4",
    "additional_params": {},
    "created": {
      "$date": "2016-01-02T01:00:09.070Z"
    },
    "debug": true,
    "description": "",
    "enabled": true,
    "priority": 49,
    "reason_message": "",
    "src": "function on_check_fake({source, destinations}) {const expected_source = [55.73483, 37.64532]; const expected_dest = [55.76802, 37.62348, 55.73531, 37.59286, 55.76664, 37.60237]; const check = (actual, expected) => actual.reduce((acc, cur) => acc.concat([+cur.lat.toFixed(5), +cur.lon.toFixed(5)]), []).every((item, i) => item === expected[i]); return check([source], expected_source) && check(destinations, expected_dest); }",
    "test": false,
    "type_id": 3,
    "updated": {
      "$date": "2016-01-02T02:00:09.070Z"
    }
  },
  {
    "_id": "test_rule5",
    "additional_params": {},
    "created": {
      "$date": "2016-01-02T01:00:09.070Z"
    },
    "debug": true,
    "description": "",
    "enabled": true,
    "priority": 48,
    "reason_message": "",
    "src": "function on_check_fake({user_created, launch_updated}) {const expected = [1531372228000, 1531384203000]; const check = (actual, expected) => actual.every((item, i) => expected[i] === Date.parse(item)); return check([user_created, launch_updated], expected); }",
    "test": false,
    "type_id": 3,
    "updated": {
      "$date": "2016-01-02T02:00:09.070Z"
    }
  },
  {
    "_id": "test_rule6",
    "additional_params": {},
    "created": {
      "$date": "2016-01-02T01:00:09.070Z"
    },
    "debug": true,
    "description": "",
    "enabled": true,
    "priority": 47,
    "reason_message": "",
    "src": "function on_check_fake({real_ip}) { return '2a02:6b8:b010:50a3::18' === real_ip; }",
    "test": false,
    "type_id": 3,
    "updated": {
      "$date": "2016-01-02T02:00:09.070Z"
    }
  },
  {
    "_id": "test_rule7",
    "additional_params": {},
    "created": {
      "$date": "2016-01-02T01:00:09.070Z"
    },
    "debug": true,
    "description": "",
    "enabled": true,
    "priority": 46,
    "reason_message": "",
    "src": "function on_check_fake({order_complete_count, order_total_count}) { return order_complete_count === 100 && order_total_count === 500; }",
    "test": false,
    "type_id": 3,
    "updated": {
      "$date": "2016-01-02T02:00:09.070Z"
    }
  },
  {
    "_id": "test_rule9",
    "additional_params": {},
    "created": {
      "$date": "2016-01-02T01:00:09.070Z"
    },
    "debug": true,
    "description": "",
    "enabled": true,
    "priority": 44,
    "reason_message": "",
    "src": "function on_check_fake({zone, user_phone, order_complete_count}) { return zone === 'tambov' && user_phone.startsWith('+7916') && typeof order_complete_count === 'undefined'; }",
    "test": false,
    "type_id": 3,
    "updated": {
      "$date": "2016-01-02T02:00:09.070Z"
    }
  },
  {
    "_id": "test_rule11",
    "additional_params": {},
    "created": {
      "$date": "2016-01-02T01:00:09.070Z"
    },
    "debug": true,
    "description": "",
    "enabled": true,
    "priority": 42,
    "reason_message": "",
    "src": "function on_check_fake({is_multiorder, extra_user_phone, comment, payment_type}) { return is_multiorder && extra_user_phone && comment === 'speed - 300; wait - 1;' && payment_type === 'cash';}",
    "test": false,
    "type_id": 3,
    "updated": {
      "$date": "2016-01-02T02:00:09.070Z"
    }
  },
  {
    "_id": "test_rule12",
    "additional_params": {},
    "created": {
      "$date": "2016-01-02T01:00:09.070Z"
    },
    "debug": true,
    "description": "",
    "enabled": true,
    "priority": 43,
    "reason_message": "",
    "src": "function on_check_fake({is_multiorder, extra_user_phone, comment, payment_type}) { return is_multiorder && extra_user_phone && comment === 'speed - 300; wait - 1;' && payment_type === 'cash';}",
    "test": false,
    "type_id": 3,
    "updated": {
      "$date": "2016-01-02T02:00:09.070Z"
    }
  },
  {
    "_id": "test_rule13",
    "additional_params": {},
    "created": {
      "$date": "2016-01-02T01:00:09.070Z"
    },
    "debug": true,
    "description": "",
    "enabled": true,
    "priority": 41,
    "reason_message": "",
    "src": "function on_check_fake({extra_user_phone}) { return extra_user_phone === '+79031234569';}",
    "test": false,
    "type_id": 3,
    "updated": {
      "$date": "2016-01-02T02:00:09.070Z"
    }
  },
  {
    "_id": "test_rule_user_agent_check",
    "additional_params": {},
    "created": {
      "$date": "2016-01-02T01:00:09.070Z"
    },
    "debug": true,
    "description": "",
    "enabled": true,
    "priority": 40,
    "reason_message": "",
    "src": "function on_check_fake({user_agent}) { return user_agent === 'yandex-taxi/4.40.0.121945 Android/8.1.0 (Xiaomi; Redmi 5 Plus)';}",
    "test": false,
    "type_id": 3,
    "updated": {
      "$date": "2016-01-02T02:00:09.070Z"
    }
  }
]
