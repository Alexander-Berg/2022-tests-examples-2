admin: 
  access_log_path: /var/log/envoy/admin_access.log
  address:
    socket_address: { address: '::', port_value: 9901 }


dynamic_resources:
  cds_config:
    resource_api_version: V3
    api_config_source:
      api_type: GRPC
      transport_api_version: V3
      refresh_delay: 5s
      grpc_services:
        - envoy_grpc:
            cluster_name: xds_cluster


static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address: { address: '::', port_value: 81 }
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          access_log:
          - name: envoy.access_loggers.file
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
              path: /var/log/envoy/access_out.log
              log_format: {text_format_source: {inline_string: "[%START_TIME(%d/%b/%Y:%T %z)%] %REQ(:AUTHORITY)% %DOWNSTREAM_DIRECT_REMOTE_ADDRESS% \"%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\" %RESPONSE_CODE% \"%REQ(:REFERER)%\" \"%REQ(USER-AGENT)%\" \"%REQ(:COOKIE)%\" %DURATION% %BYTES_SENT% \"%RESPONSE_DURATION%\" \"%RESP(:X-YAREQFINISH)%\" \"%RESP(:X-YAUUID)%\" \"%RESP(:X-YAREQUESTID)%\" \"%RESP(:X-YAMISC)%\" \"%REQ(:X-MSISDN-H122ZY615D623L631O2L3)%;%REQ(:HW-3GPP-RAT-TYPE)%;%REQ(:X-SGSN-IP)%;%REQ(:X-MEGAFON-IMSI)%\" %REQ(:X-REMOTE-IP)% %REQ(:X-REAL-IP)% \"%REQ(:X-FORWARDED-FOR)%\" \"%RESP(:X-YATAXI-API-OPERATIONID)%\"\n"}}
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          codec_type: AUTO
          rds:
            route_config_name: local_route
            config_source:
              resource_api_version: V3
              api_config_source:
                api_type: GRPC
                transport_api_version: V3
                refresh_delay: 5s
                grpc_services:
                  - envoy_grpc:
                      cluster_name: xds_cluster
          http_filters:
          - name: envoy.filters.http.dynamic_forward_proxy
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.dynamic_forward_proxy.v3.FilterConfig
              dns_cache_config:
                name: dynamic_forward_proxy_cache_config
                dns_lookup_family: AUTO
          - name: envoy.filters.http.router
  - name: ingress_listener
    address:
      socket_address: { address: '::', port_value: 82 }
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: AUTO
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_nginx
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: local_nginx
          http_filters:
          - name: envoy.filters.http.health_check
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.health_check.v3.HealthCheck
              pass_through_mode: true
              headers:
              - name: "path"
                exact_match: "/ping"
              cache_time: 2s
          - name: envoy.filters.http.router
          access_log:
          - name: envoy.access_loggers.file
            filter:
              not_health_check_filter:  {}
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
              path: "/var/log/envoy/access.log"
              log_format: {text_format_source: {inline_string: "[%START_TIME(%d/%b/%Y:%T %z)%] %REQ(:AUTHORITY)% %DOWNSTREAM_DIRECT_REMOTE_ADDRESS% \"%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\" %RESPONSE_CODE% \"%REQ(:REFERER)%\" \"%REQ(USER-AGENT)%\" \"%REQ(:COOKIE)%\" %DURATION% %BYTES_SENT% \"%RESPONSE_DURATION%\" \"%RESP(:X-YAREQFINISH)%\" \"%RESP(:X-YAUUID)%\" \"%RESP(:X-YAREQUESTID)%\" \"%RESP(:X-YAMISC)%\" \"%REQ(:X-MSISDN-H122ZY615D623L631O2L3)%;%REQ(:HW-3GPP-RAT-TYPE)%;%REQ(:X-SGSN-IP)%;%REQ(:X-MEGAFON-IMSI)%\" %REQ(:X-REMOTE-IP)% %REQ(:X-REAL-IP)% \"%REQ(:X-FORWARDED-FOR)%\" \"%RESP(:X-YATAXI-API-OPERATIONID)%\"\n"}}
  clusters:
  - name: dynamic_forward_proxy_cluster
    connect_timeout: 1s
    lb_policy: CLUSTER_PROVIDED
    cluster_type:
      name: envoy.clusters.dynamic_forward_proxy
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.clusters.dynamic_forward_proxy.v3.ClusterConfig
        dns_cache_config:
          name: dynamic_forward_proxy_cache_config
          dns_lookup_family: AUTO
  - name: local_nginx
    connect_timeout: 0.25s
    type: STATIC
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: local_nginx
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: '::1'
                port_value: 80
                protocol: TCP
  - name: scout
    connect_timeout: 0.25s
    type: LOGICAL_DNS
    health_checks:
    - tcp_health_check: {}
      timeout: 1s
      interval: 30s
      unhealthy_threshold: 3
      healthy_threshold: 2
      # outlier_detection:
      # consecutive_5xx: 5
    lb_policy: ROUND_ROBIN
    upstream_connection_options:
      # configure a TCP keep-alive to detect and reconnect to the admin
      # server in the event of a TCP socket half open connection
      tcp_keepalive: {}
    http2_protocol_options: {}  # Force HTTP/2 to be compatible with python
    load_assignment:
      cluster_name: scout
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: scout.taxi.tst.yandex.net
                port_value: 12033
  - name: exa
    connect_timeout: 0.25s
    type: STATIC
    health_checks:
    - tcp_health_check: {}
      timeout: 1s
      interval: 30s
      unhealthy_threshold: 3
      healthy_threshold: 2
      # outlier_detection:
      # consecutive_5xx: 5      
    lb_policy: ROUND_ROBIN
    upstream_connection_options:
      # configure a TCP keep-alive to detect and reconnect to the admin
      # server in the event of a TCP socket half open connection
      tcp_keepalive: {}
    http2_protocol_options: {}  # Force HTTP/2 to be compatible with python
    load_assignment:
      cluster_name: exa
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: '::1'
                port_value: 12033
  - name: xds_cluster
    connect_timeout: 0.25s
    lb_policy: CLUSTER_PROVIDED
    cluster_type:
      name: envoy.clusters.aggregate  # Name must be exactly this!
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.clusters.aggregate.v3.ClusterConfig
        clusters:
        - exa
        - scout

