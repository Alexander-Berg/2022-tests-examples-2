---
- service: grocery_surge_failed_js_pipelines_v1_pull
  description: |
    Появились ошибки в вычислении пайплайна calc_surge_grocery_v1_pull grocery-surge.
  alert_type: expression
  program: |
    let selector = {
      project='taxi',
      cluster='testing_uservices',
      service='uservices',
      application='grocery-surge',
      host='lavka-grocery-surge*',
      sensor='surge_metrics.failed_js_calculations_per_pipeline',
      pipeline_name='calc_surge_grocery_v1_pull'
    };
    let max_errors = max(series_max(drop_below(diff(selector), 0)));
  checkExpression: max_errors > 0
  period: 600
  delay: 30
- service: grocery_surge_failed_js_pipelines_taxi_v0
  description: |
    Появились ошибки в вычислении пайплайна calc_surge_grocery_taxi_v0 grocery-surge.
  alert_type: expression
  program: |
    let selector = {
      project='taxi',
      cluster='testing_uservices',
      service='uservices',
      application='grocery-surge',
      host='lavka-grocery-surge*',
      sensor='surge_metrics.failed_js_calculations_per_pipeline',
      pipeline_name='calc_surge_grocery_taxi_v0'
    };
    let max_errors = max(series_max(drop_below(diff(selector), 0)));
  checkExpression: max_errors > 0
  period: 600
  delay: 30
- service: grocery_surge_failed_js_pipelines_taxi_v0_remote
  description: |
    Появились ошибки в вычислении пайплайна calc_surge_grocery_taxi_v0_remote grocery-surge.
  alert_type: expression
  program: |
    let selector = {
      project='taxi',
      cluster='testing_uservices',
      service='uservices',
      application='grocery-surge',
      host='lavka-grocery-surge*',
      sensor='surge_metrics.failed_js_calculations_per_pipeline',
      pipeline_name='calc_surge_grocery_taxi_v0_remote'
    };
    let max_errors = max(series_max(drop_below(diff(selector), 0)));
  checkExpression: max_errors > 0
  period: 600
  delay: 30
- service: grocery_surge_failed_js_pipelines_taxi_v0_night
  description: |
    Появились ошибки в вычислении пайплайна calc_surge_grocery_taxi_v0_night grocery-surge.
  alert_type: expression
  program: |
    let selector = {
      project='taxi',
      cluster='testing_uservices',
      service='uservices',
      application='grocery-surge',
      host='lavka-grocery-surge*',
      sensor='surge_metrics.failed_js_calculations_per_pipeline',
      pipeline_name='calc_surge_grocery_taxi_v0_night'
    };
    let max_errors = max(series_max(drop_below(diff(selector), 0)));
  checkExpression: max_errors > 0
  period: 600
  delay: 30
- service: grocery_surge_failed_js_pipelines_pull_v2
  description: |
    Появились ошибки в вычислении пайплайна calc_surge_grocery_pull_v2 grocery-surge.
  alert_type: expression
  program: |
    let selector = {
      project='taxi',
      cluster='testing_uservices',
      service='uservices',
      application='grocery-surge',
      host='lavka-grocery-surge*',
      sensor='surge_metrics.failed_js_calculations_per_pipeline',
      pipeline_name='calc_surge_grocery_pull_v2'
    };
    let max_errors = max(series_max(drop_below(diff(selector), 0)));
  checkExpression: max_errors > 0
  period: 600
  delay: 30
- service: grocery_surge_failed_js_pipelines_v3_pull
  description: |
    Появились ошибки в вычислении пайплайна calc_surge_grocery_v3_pull grocery-surge.
  alert_type: expression
  program: |
    let selector = {
      project='taxi',
      cluster='testing_uservices',
      service='uservices',
      application='grocery-surge',
      host='lavka-grocery-surge*',
      sensor='surge_metrics.failed_js_calculations_per_pipeline',
      pipeline_name='calc_surge_grocery_v3_pull'
    };
    let max_errors = max(series_max(drop_below(diff(selector), 0)));
  checkExpression: max_errors > 0
  period: 600
  delay: 30
- service: grocery_surge_reach_time_limit_surge_calculation
  description: |
    Для некоторых лавок сурж не пересчитывался слишком долго или более не пересчитывается.
  alert_type: expression
  program: |
    let selector = {
      project='taxi',
      cluster='testing_uservices',
      service='uservices',
      application='grocery-surge',
      host='lavka-grocery-surge*',
      sensor='surge_metrics.max_timeline_lag'
    };
    let max_time = max(series_avg(selector));
  checkExpression: max_time > 150000
  period: 600
  delay: 30
- service: grocery_surge_missed_js_pipeline_for_delivery_type
  description: |
    Не для всех delivery_type есть сматчившийся пайплайн.
    Grafana: https://grafana.yandex-team.ru/d/3CWjuvWnz/grocery-surge-testing?orgId=1
  alert_type: expression
  program: |
    let selector = {
      project='taxi',
      cluster='testing_uservices',
      service='uservices',
      application='grocery-surge',
      host='lavka-grocery-surge*',
      sensor='surge_metrics.missed_js_pipeline_for_delivery_type'
    };
    let max_errors = max(series_max(drop_below(diff(selector), 0)));
  checkExpression: max_errors > 0
  period: 600
  delay: 30
- service: grocery_surge_scheduling_settings_not_found
  description: |
    Не все сматчившиеся пайплайны шедулятся.
    Grafana: https://grafana.yandex-team.ru/d/3CWjuvWnz/grocery-surge-testing?orgId=1
  alert_type: expression
  program: |
    let selector = {
      project='taxi',
      cluster='testing_uservices',
      service='uservices',
      application='grocery-surge',
      host='lavka-grocery-surge*',
      sensor='surge_metrics.scheduling_settings_not_found'
    };
    let max_errors = max(series_max(drop_below(diff(selector), 0)));
  checkExpression: max_errors > 0
  period: 600
  delay: 30
