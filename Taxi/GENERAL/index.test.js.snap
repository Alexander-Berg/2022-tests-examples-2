// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OrderTime должен позволять выбрать кастомную дату 1`] = `
<Component
  day={3}
  onSelectCustom={[MockFunction]}
  onSelectDue={[MockFunction]}
  time="16:25"
  zoneUTCOffset="+0300"
>
  <Provider
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(Symbol.observable): [Function],
      }
    }
  >
    <Component
      day={3}
      onSelectCustom={[MockFunction]}
      onSelectDue={[MockFunction]}
      time="16:25"
      zoneUTCOffset="+0300"
    >
      <Component
        t={[Function]}
      >
        <withProps(OrderTime)
          day={3}
          onSelectCustom={[MockFunction]}
          onSelectDue={[MockFunction]}
          time="16:25"
          zoneUTCOffset="+0300"
        >
          <OrderTime
            day={3}
            onSelectCustom={[MockFunction]}
            onSelectDue={[MockFunction]}
            t={[Function]}
            time="16:25"
            zoneUTCOffset="+0300"
          >
            <div
              className="order-time-select"
            >
              <div>
                <Select
                  autosize={false}
                  clearable={false}
                  labelKey="label"
                  modifiers={
                    Object {
                      "noBlurOnDisable": true,
                    }
                  }
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "label": "time_options.near_future",
                        "value": 0,
                      },
                      Object {
                        "label": "time_options.after_10_min",
                        "value": 10,
                      },
                      Object {
                        "label": "time_options.after_15_min",
                        "value": 15,
                      },
                      Object {
                        "label": "time_options.another_time",
                        "value": "custom",
                      },
                    ]
                  }
                  placeholder="order.order_time_select.time"
                  searchable={false}
                  valueKey="value"
                >
                  <mapProps(Select)
                    autosize={false}
                    clearable={false}
                    labelKey="label"
                    modifiers={
                      Object {
                        "noBlurOnDisable": true,
                      }
                    }
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "label": "time_options.near_future",
                          "value": 0,
                        },
                        Object {
                          "label": "time_options.after_10_min",
                          "value": 10,
                        },
                        Object {
                          "label": "time_options.after_15_min",
                          "value": 15,
                        },
                        Object {
                          "label": "time_options.another_time",
                          "value": "custom",
                        },
                      ]
                    }
                    placeholder="order.order_time_select.time"
                    searchable={false}
                    t={[Function]}
                    valueKey="value"
                  >
                    <Select
                      autosize={false}
                      blockName="amber-select"
                      className="amber-select amber-select_noBlurOnDisable"
                      clearable={false}
                      closeOnSelect={true}
                      delimiter="|"
                      inputProps={
                        Object {
                          "autoComplete": "off",
                          "autoCorrect": "off",
                          "spellCheck": false,
                        }
                      }
                      labelKey="label"
                      noResultsText="select.search.found.not"
                      onChange={[Function]}
                      options={
                        Array [
                          Object {
                            "label": "time_options.near_future",
                            "value": 0,
                          },
                          Object {
                            "label": "time_options.after_10_min",
                            "value": 10,
                          },
                          Object {
                            "label": "time_options.after_15_min",
                            "value": 15,
                          },
                          Object {
                            "label": "time_options.another_time",
                            "value": "custom",
                          },
                        ]
                      }
                      placeholder="order.order_time_select.time"
                      scrollMenuIntoView={false}
                      searchable={false}
                      valueKey="value"
                    >
                      <div
                        className="amber-select amber-select amber-select_noBlurOnDisable"
                      >
                        <Select
                          arrowRenderer={[Function]}
                          autosize={false}
                          backspaceRemoves={true}
                          backspaceToRemoveMessage="Press backspace to remove {label}"
                          clearAllText="Clear all"
                          clearRenderer={[Function]}
                          clearValueText="Clear value"
                          clearable={false}
                          closeOnSelect={true}
                          deleteRemoves={true}
                          delimiter="|"
                          disabled={false}
                          escapeClearsValue={true}
                          filterOptions={[Function]}
                          ignoreAccents={true}
                          ignoreCase={true}
                          inputProps={
                            Object {
                              "autoComplete": "off",
                              "autoCorrect": "off",
                              "spellCheck": false,
                            }
                          }
                          isLoading={false}
                          joinValues={false}
                          labelKey="label"
                          matchPos="any"
                          matchProp="any"
                          menuBuffer={0}
                          menuRenderer={[Function]}
                          multi={false}
                          noResultsText="select.search.found.not"
                          onBlurResetsInput={true}
                          onChange={[Function]}
                          onCloseResetsInput={true}
                          onSelectResetsInput={true}
                          openOnClick={true}
                          optionComponent={[Function]}
                          options={
                            Array [
                              Object {
                                "label": "time_options.near_future",
                                "value": 0,
                              },
                              Object {
                                "label": "time_options.after_10_min",
                                "value": 10,
                              },
                              Object {
                                "label": "time_options.after_15_min",
                                "value": 15,
                              },
                              Object {
                                "label": "time_options.another_time",
                                "value": "custom",
                              },
                            ]
                          }
                          pageSize={5}
                          placeholder="order.order_time_select.time"
                          removeSelected={true}
                          required={false}
                          rtl={false}
                          scrollMenuIntoView={false}
                          searchable={false}
                          simpleValue={false}
                          tabSelectsValue={true}
                          trimFilter={true}
                          valueComponent={[Function]}
                          valueKey="value"
                        >
                          <div
                            className="Select Select--single"
                          >
                            <div
                              className="Select-control"
                              onKeyDown={[Function]}
                              onMouseDown={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                            >
                              <div
                                className="Select-multi-value-wrapper"
                                id="react-select-3--value"
                              >
                                <div
                                  className="Select-placeholder"
                                >
                                  order.order_time_select.time
                                </div>
                                <div
                                  aria-activedescendant="react-select-3--value"
                                  aria-disabled="false"
                                  aria-expanded={false}
                                  aria-owns=""
                                  autoComplete="off"
                                  autoCorrect="off"
                                  className="Select-input"
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  role="combobox"
                                  spellCheck={false}
                                  style={
                                    Object {
                                      "border": 0,
                                      "display": "inline-block",
                                      "width": 1,
                                    }
                                  }
                                  tabIndex={0}
                                />
                              </div>
                              <span
                                className="Select-arrow-zone"
                                onMouseDown={[Function]}
                              >
                                <span
                                  className="Select-arrow"
                                  onMouseDown={[Function]}
                                />
                              </span>
                            </div>
                          </div>
                        </Select>
                      </div>
                    </Select>
                  </mapProps(Select)>
                </Select>
              </div>
            </div>
          </OrderTime>
        </withProps(OrderTime)>
      </Component>
    </Component>
  </Provider>
</Component>
`;

exports[`OrderTime должен позволять выбрать кастомную дату 2`] = `
<Component
  day={3}
  onSelectCustom={[MockFunction]}
  onSelectDue={[MockFunction]}
  time="16:25"
  zoneUTCOffset="+0300"
>
  <Provider
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(Symbol.observable): [Function],
      }
    }
  >
    <Component
      day={3}
      onSelectCustom={[MockFunction]}
      onSelectDue={[MockFunction]}
      time="16:25"
      zoneUTCOffset="+0300"
    >
      <Component
        t={[Function]}
      >
        <withProps(OrderTime)
          day={3}
          onSelectCustom={[MockFunction]}
          onSelectDue={[MockFunction]}
          time="16:25"
          zoneUTCOffset="+0300"
        >
          <OrderTime
            day={3}
            onSelectCustom={[MockFunction]}
            onSelectDue={[MockFunction]}
            t={[Function]}
            time="16:25"
            zoneUTCOffset="+0300"
          >
            <div
              className="order-time-select"
            >
              <div>
                <Select
                  autosize={false}
                  clearable={false}
                  disabled={true}
                  labelKey="label"
                  modifiers={
                    Object {
                      "noBlurOnDisable": true,
                    }
                  }
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "label": "time_options.near_future",
                        "value": 0,
                      },
                      Object {
                        "label": "time_options.after_10_min",
                        "value": 10,
                      },
                      Object {
                        "label": "time_options.after_15_min",
                        "value": 15,
                      },
                      Object {
                        "label": "time_options.another_time",
                        "value": "custom",
                      },
                    ]
                  }
                  placeholder="order.order_time_select.time"
                  searchable={false}
                  value={
                    Object {
                      "label": "time_options.another_time",
                      "value": "custom",
                    }
                  }
                  valueKey="value"
                >
                  <mapProps(Select)
                    autosize={false}
                    clearable={false}
                    disabled={true}
                    labelKey="label"
                    modifiers={
                      Object {
                        "noBlurOnDisable": true,
                      }
                    }
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "label": "time_options.near_future",
                          "value": 0,
                        },
                        Object {
                          "label": "time_options.after_10_min",
                          "value": 10,
                        },
                        Object {
                          "label": "time_options.after_15_min",
                          "value": 15,
                        },
                        Object {
                          "label": "time_options.another_time",
                          "value": "custom",
                        },
                      ]
                    }
                    placeholder="order.order_time_select.time"
                    searchable={false}
                    t={[Function]}
                    value={
                      Object {
                        "label": "time_options.another_time",
                        "value": "custom",
                      }
                    }
                    valueKey="value"
                  >
                    <Select
                      autosize={false}
                      blockName="amber-select"
                      className="amber-select amber-select_noBlurOnDisable"
                      clearable={false}
                      closeOnSelect={true}
                      delimiter="|"
                      disabled={true}
                      inputProps={
                        Object {
                          "autoComplete": "off",
                          "autoCorrect": "off",
                          "spellCheck": false,
                        }
                      }
                      labelKey="label"
                      noResultsText="select.search.found.not"
                      onChange={[Function]}
                      options={
                        Array [
                          Object {
                            "label": "time_options.near_future",
                            "value": 0,
                          },
                          Object {
                            "label": "time_options.after_10_min",
                            "value": 10,
                          },
                          Object {
                            "label": "time_options.after_15_min",
                            "value": 15,
                          },
                          Object {
                            "label": "time_options.another_time",
                            "value": "custom",
                          },
                        ]
                      }
                      placeholder="order.order_time_select.time"
                      scrollMenuIntoView={false}
                      searchable={false}
                      value={
                        Object {
                          "label": "time_options.another_time",
                          "value": "custom",
                        }
                      }
                      valueKey="value"
                    >
                      <div
                        className="amber-select amber-select amber-select_noBlurOnDisable"
                      >
                        <Select
                          arrowRenderer={[Function]}
                          autosize={false}
                          backspaceRemoves={true}
                          backspaceToRemoveMessage="Press backspace to remove {label}"
                          clearAllText="Clear all"
                          clearRenderer={[Function]}
                          clearValueText="Clear value"
                          clearable={false}
                          closeOnSelect={true}
                          deleteRemoves={true}
                          delimiter="|"
                          disabled={true}
                          escapeClearsValue={true}
                          filterOptions={[Function]}
                          ignoreAccents={true}
                          ignoreCase={true}
                          inputProps={
                            Object {
                              "autoComplete": "off",
                              "autoCorrect": "off",
                              "spellCheck": false,
                            }
                          }
                          isLoading={false}
                          joinValues={false}
                          labelKey="label"
                          matchPos="any"
                          matchProp="any"
                          menuBuffer={0}
                          menuRenderer={[Function]}
                          multi={false}
                          noResultsText="select.search.found.not"
                          onBlurResetsInput={true}
                          onChange={[Function]}
                          onCloseResetsInput={true}
                          onSelectResetsInput={true}
                          openOnClick={true}
                          optionComponent={[Function]}
                          options={
                            Array [
                              Object {
                                "label": "time_options.near_future",
                                "value": 0,
                              },
                              Object {
                                "label": "time_options.after_10_min",
                                "value": 10,
                              },
                              Object {
                                "label": "time_options.after_15_min",
                                "value": 15,
                              },
                              Object {
                                "label": "time_options.another_time",
                                "value": "custom",
                              },
                            ]
                          }
                          pageSize={5}
                          placeholder="order.order_time_select.time"
                          removeSelected={true}
                          required={false}
                          rtl={false}
                          scrollMenuIntoView={false}
                          searchable={false}
                          simpleValue={false}
                          tabSelectsValue={true}
                          trimFilter={true}
                          value={
                            Object {
                              "label": "time_options.another_time",
                              "value": "custom",
                            }
                          }
                          valueComponent={[Function]}
                          valueKey="value"
                        >
                          <div
                            className="Select has-value is-disabled Select--single"
                          >
                            <div
                              className="Select-control"
                              onKeyDown={[Function]}
                              onMouseDown={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                            >
                              <div
                                className="Select-multi-value-wrapper"
                                id="react-select-3--value"
                              >
                                <Value
                                  disabled={true}
                                  id="react-select-3--value-item"
                                  instancePrefix="react-select-3-"
                                  onClick={null}
                                  placeholder="order.order_time_select.time"
                                  value={
                                    Object {
                                      "label": "time_options.another_time",
                                      "value": "custom",
                                    }
                                  }
                                >
                                  <div
                                    className="Select-value"
                                  >
                                    <span
                                      aria-selected="true"
                                      className="Select-value-label"
                                      id="react-select-3--value-item"
                                      role="option"
                                    >
                                      time_options.another_time
                                    </span>
                                  </div>
                                </Value>
                                <div
                                  aria-activedescendant="react-select-3--value"
                                  aria-disabled="true"
                                  aria-expanded={false}
                                  aria-owns=""
                                  autoComplete="off"
                                  autoCorrect="off"
                                  className="Select-input"
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  role="combobox"
                                  spellCheck={false}
                                  style={
                                    Object {
                                      "border": 0,
                                      "display": "inline-block",
                                      "width": 1,
                                    }
                                  }
                                  tabIndex={0}
                                />
                              </div>
                              <span
                                className="Select-arrow-zone"
                                onMouseDown={[Function]}
                              >
                                <span
                                  className="Select-arrow"
                                  onMouseDown={[Function]}
                                />
                              </span>
                            </div>
                          </div>
                        </Select>
                      </div>
                    </Select>
                  </mapProps(Select)>
                </Select>
              </div>
              <EnhancedCustomTime
                day={3}
                onCancelClick={[Function]}
                onOKClick={[Function]}
                t={[Function]}
                target={
                  <div>
                    <div
                      class="amber-select amber-select amber-select_noBlurOnDisable"
                    >
                      <div
                        class="Select has-value is-disabled Select--single"
                      >
                        <div
                          class="Select-control"
                        >
                          <div
                            class="Select-multi-value-wrapper"
                            id="react-select-3--value"
                          >
                            <div
                              class="Select-value"
                            >
                              <span
                                aria-selected="true"
                                class="Select-value-label"
                                id="react-select-3--value-item"
                                role="option"
                              >
                                time_options.another_time
                              </span>
                            </div>
                            <div
                              aria-activedescendant="react-select-3--value"
                              aria-disabled="true"
                              aria-expanded="false"
                              aria-owns=""
                              autocomplete="off"
                              autocorrect="off"
                              class="Select-input"
                              role="combobox"
                              spellcheck="false"
                              style="border: 0px; width: 1px; display: inline-block;"
                              tabindex="0"
                            />
                          </div>
                          <span
                            class="Select-arrow-zone"
                          >
                            <span
                              class="Select-arrow"
                            />
                          </span>
                        </div>
                      </div>
                    </div>
                  </div>
                }
                time="16:25"
                zoneUTCOffset="+0300"
              >
                <withProps(CustomTime)
                  day={3}
                  onCancelClick={[Function]}
                  onCancelSelectDate={[Function]}
                  onDayChange={[Function]}
                  onOKClick={[Function]}
                  onOKSelectDate={[Function]}
                  onRequestShowDate={[Function]}
                  onTimeChange={[Function]}
                  showDate={false}
                  t={[Function]}
                  target={
                    <div>
                      <div
                        class="amber-select amber-select amber-select_noBlurOnDisable"
                      >
                        <div
                          class="Select has-value is-disabled Select--single"
                        >
                          <div
                            class="Select-control"
                          >
                            <div
                              class="Select-multi-value-wrapper"
                              id="react-select-3--value"
                            >
                              <div
                                class="Select-value"
                              >
                                <span
                                  aria-selected="true"
                                  class="Select-value-label"
                                  id="react-select-3--value-item"
                                  role="option"
                                >
                                  time_options.another_time
                                </span>
                              </div>
                              <div
                                aria-activedescendant="react-select-3--value"
                                aria-disabled="true"
                                aria-expanded="false"
                                aria-owns=""
                                autocomplete="off"
                                autocorrect="off"
                                class="Select-input"
                                role="combobox"
                                spellcheck="false"
                                style="border: 0px; width: 1px; display: inline-block;"
                                tabindex="0"
                              />
                            </div>
                            <span
                              class="Select-arrow-zone"
                            >
                              <span
                                class="Select-arrow"
                              />
                            </span>
                          </div>
                        </div>
                      </div>
                    </div>
                  }
                  time="16:25"
                  zoneUTCOffset="+0300"
                >
                  <CustomTime
                    day={3}
                    onCancelClick={[Function]}
                    onCancelSelectDate={[Function]}
                    onDayChange={[Function]}
                    onOKClick={[Function]}
                    onOKSelectDate={[Function]}
                    onRequestShowDate={[Function]}
                    onTimeChange={[Function]}
                    showDate={false}
                    t={[Function]}
                    target={
                      <div>
                        <div
                          class="amber-select amber-select amber-select_noBlurOnDisable"
                        >
                          <div
                            class="Select has-value is-disabled Select--single"
                          >
                            <div
                              class="Select-control"
                            >
                              <div
                                class="Select-multi-value-wrapper"
                                id="react-select-3--value"
                              >
                                <div
                                  class="Select-value"
                                >
                                  <span
                                    aria-selected="true"
                                    class="Select-value-label"
                                    id="react-select-3--value-item"
                                    role="option"
                                  >
                                    time_options.another_time
                                  </span>
                                </div>
                                <div
                                  aria-activedescendant="react-select-3--value"
                                  aria-disabled="true"
                                  aria-expanded="false"
                                  aria-owns=""
                                  autocomplete="off"
                                  autocorrect="off"
                                  class="Select-input"
                                  role="combobox"
                                  spellcheck="false"
                                  style="border: 0px; width: 1px; display: inline-block;"
                                  tabindex="0"
                                />
                              </div>
                              <span
                                class="Select-arrow-zone"
                              >
                                <span
                                  class="Select-arrow"
                                />
                              </span>
                            </div>
                          </div>
                        </div>
                      </div>
                    }
                    time="16:25"
                    zoneUTCOffset="+0300"
                  >
                    <withProps(CustomDateAndTimePopup)
                      day={3}
                      onCancelClick={[Function]}
                      onDayChange={[Function]}
                      onOKClick={[Function]}
                      onRequestShowDate={[Function]}
                      onTimeChange={[Function]}
                      t={[Function]}
                      target={
                        <div>
                          <div
                            class="amber-select amber-select amber-select_noBlurOnDisable"
                          >
                            <div
                              class="Select has-value is-disabled Select--single"
                            >
                              <div
                                class="Select-control"
                              >
                                <div
                                  class="Select-multi-value-wrapper"
                                  id="react-select-3--value"
                                >
                                  <div
                                    class="Select-value"
                                  >
                                    <span
                                      aria-selected="true"
                                      class="Select-value-label"
                                      id="react-select-3--value-item"
                                      role="option"
                                    >
                                      time_options.another_time
                                    </span>
                                  </div>
                                  <div
                                    aria-activedescendant="react-select-3--value"
                                    aria-disabled="true"
                                    aria-expanded="false"
                                    aria-owns=""
                                    autocomplete="off"
                                    autocorrect="off"
                                    class="Select-input"
                                    role="combobox"
                                    spellcheck="false"
                                    style="border: 0px; width: 1px; display: inline-block;"
                                    tabindex="0"
                                  />
                                </div>
                                <span
                                  class="Select-arrow-zone"
                                >
                                  <span
                                    class="Select-arrow"
                                  />
                                </span>
                              </div>
                            </div>
                          </div>
                        </div>
                      }
                      time="16:25"
                    >
                      <CustomDateAndTimePopup
                        day={3}
                        onCancelClick={[Function]}
                        onDayChange={[Function]}
                        onOKClick={[Function]}
                        onRequestShowDate={[Function]}
                        onTimeChange={[Function]}
                        t={[Function]}
                        target={
                          <div>
                            <div
                              class="amber-select amber-select amber-select_noBlurOnDisable"
                            >
                              <div
                                class="Select has-value is-disabled Select--single"
                              >
                                <div
                                  class="Select-control"
                                >
                                  <div
                                    class="Select-multi-value-wrapper"
                                    id="react-select-3--value"
                                  >
                                    <div
                                      class="Select-value"
                                    >
                                      <span
                                        aria-selected="true"
                                        class="Select-value-label"
                                        id="react-select-3--value-item"
                                        role="option"
                                      >
                                        time_options.another_time
                                      </span>
                                    </div>
                                    <div
                                      aria-activedescendant="react-select-3--value"
                                      aria-disabled="true"
                                      aria-expanded="false"
                                      aria-owns=""
                                      autocomplete="off"
                                      autocorrect="off"
                                      class="Select-input"
                                      role="combobox"
                                      spellcheck="false"
                                      style="border: 0px; width: 1px; display: inline-block;"
                                      tabindex="0"
                                    />
                                  </div>
                                  <span
                                    class="Select-arrow-zone"
                                  >
                                    <span
                                      class="Select-arrow"
                                    />
                                  </span>
                                </div>
                              </div>
                            </div>
                          </div>
                        }
                        time="16:25"
                      >
                        <Popup
                          className="CustomDateAndTimePopup"
                          onCloseRequest={[Function]}
                          referenceElement={
                            <div>
                              <div
                                class="amber-select amber-select amber-select_noBlurOnDisable"
                              >
                                <div
                                  class="Select has-value is-disabled Select--single"
                                >
                                  <div
                                    class="Select-control"
                                  >
                                    <div
                                      class="Select-multi-value-wrapper"
                                      id="react-select-3--value"
                                    >
                                      <div
                                        class="Select-value"
                                      >
                                        <span
                                          aria-selected="true"
                                          class="Select-value-label"
                                          id="react-select-3--value-item"
                                          role="option"
                                        >
                                          time_options.another_time
                                        </span>
                                      </div>
                                      <div
                                        aria-activedescendant="react-select-3--value"
                                        aria-disabled="true"
                                        aria-expanded="false"
                                        aria-owns=""
                                        autocomplete="off"
                                        autocorrect="off"
                                        class="Select-input"
                                        role="combobox"
                                        spellcheck="false"
                                        style="border: 0px; width: 1px; display: inline-block;"
                                        tabindex="0"
                                      />
                                    </div>
                                    <span
                                      class="Select-arrow-zone"
                                    >
                                      <span
                                        class="Select-arrow"
                                      />
                                    </span>
                                  </div>
                                </div>
                              </div>
                            </div>
                          }
                        >
                          <Popup
                            className="CustomDateAndTimePopup Popup"
                            eventTypes={
                              Array [
                                "click",
                                "touchend",
                              ]
                            }
                            placement="bottom"
                            popupProps={
                              Object {
                                "modifiers": Object {
                                  "flip": Object {
                                    "behavior": Array [
                                      "top",
                                      "right",
                                      "bottom",
                                      "left",
                                    ],
                                    "enabled": true,
                                  },
                                  "preventOverflow": Object {
                                    "padding": 8,
                                  },
                                },
                              }
                            }
                            portal={true}
                            referenceElement={
                              <div>
                                <div
                                  class="amber-select amber-select amber-select_noBlurOnDisable"
                                >
                                  <div
                                    class="Select has-value is-disabled Select--single"
                                  >
                                    <div
                                      class="Select-control"
                                    >
                                      <div
                                        class="Select-multi-value-wrapper"
                                        id="react-select-3--value"
                                      >
                                        <div
                                          class="Select-value"
                                        >
                                          <span
                                            aria-selected="true"
                                            class="Select-value-label"
                                            id="react-select-3--value-item"
                                            role="option"
                                          >
                                            time_options.another_time
                                          </span>
                                        </div>
                                        <div
                                          aria-activedescendant="react-select-3--value"
                                          aria-disabled="true"
                                          aria-expanded="false"
                                          aria-owns=""
                                          autocomplete="off"
                                          autocorrect="off"
                                          class="Select-input"
                                          role="combobox"
                                          spellcheck="false"
                                          style="border: 0px; width: 1px; display: inline-block;"
                                          tabindex="0"
                                        />
                                      </div>
                                      <span
                                        class="Select-arrow-zone"
                                      >
                                        <span
                                          class="Select-arrow"
                                        />
                                      </span>
                                    </div>
                                  </div>
                                </div>
                              </div>
                            }
                          >
                            <Portal
                              containerInfo={
                                <body>
                                  <div
                                    class="CustomDateAndTimePopup Popup"
                                    style="position: absolute; top: 0px; left: 0px; opacity: 0; pointer-events: none;"
                                  >
                                    <div
                                      class="Popup__arrow"
                                    />
                                    <section
                                      class="amber-section amber-section_roundBorders_all amber-section_padding_l amber-section_theme_white"
                                    >
                                      <div
                                        class="amber-row amber-row_paddingBottom-xs_m"
                                      >
                                        <div
                                          class="amber-col"
                                        >
                                          <div
                                            class="amber-radio-button"
                                            name="datetime-day"
                                            value="custom"
                                          >
                                            <label
                                              class="amber-radio-button__radio"
                                            >
                                              <input
                                                class="amber-radio-button__control"
                                                name="datetime-day"
                                                type="radio"
                                              />
                                              <span
                                                class="amber-radio-button__radio-box"
                                              />
                                              <span
                                                class="amber-radio-button__radio-text"
                                              >
                                                day_options.today
                                              </span>
                                            </label>
                                            <label
                                              class="amber-radio-button__radio"
                                            >
                                              <input
                                                class="amber-radio-button__control"
                                                name="datetime-day"
                                                type="radio"
                                              />
                                              <span
                                                class="amber-radio-button__radio-box"
                                              />
                                              <span
                                                class="amber-radio-button__radio-text"
                                              >
                                                day_options.tomorrow
                                              </span>
                                            </label>
                                            <label
                                              class="amber-radio-button__radio"
                                            >
                                              <input
                                                class="amber-radio-button__control"
                                                name="datetime-day"
                                                type="radio"
                                              />
                                              <span
                                                class="amber-radio-button__radio-box"
                                              />
                                              <span
                                                class="amber-radio-button__radio-text"
                                              >
                                                day_options.day_after_tomorrow
                                              </span>
                                            </label>
                                            <label
                                              class="amber-radio-button__radio amber-radio-button__radio_checked"
                                            >
                                              <input
                                                checked=""
                                                class="amber-radio-button__control"
                                                name="datetime-day"
                                                type="radio"
                                              />
                                              <span
                                                class="amber-radio-button__radio-box"
                                              />
                                              <span
                                                class="amber-radio-button__radio-text"
                                              >
                                                day_options.another_date
                                              </span>
                                            </label>
                                          </div>
                                        </div>
                                        <div
                                          class="amber-col amber-col_paddingLeft-xs_m amber-col_paddingStart-xs_m"
                                        >
                                          <div
                                            class="amber-input amber-input_theme_outline amber-input_size_m TimeInput TimeInput_iconCount_1"
                                          >
                                            <div
                                              class="amber-input__box"
                                            >
                                              <span
                                                class="amber-input__icon amber-input__icon_right"
                                              >
                                                <span
                                                  class="amber-icon amber-icon_help IconWithTooltip"
                                                >
                                                  <svg
                                                    aria-haspopup="true"
                                                    height="24"
                                                    viewBox="0 0 24 24"
                                                    width="24"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z"
                                                      fill-rule="nonzero"
                                                    />
                                                  </svg>
                                                </span>
                                              </span>
                                              <input
                                                class="amber-input__control"
                                                placeholder="00:00"
                                                value="16:25"
                                              />
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                      <div
                                        class="ControlGroup amber-row amber-row_verticalAlign-xs_center"
                                      >
                                        <button
                                          class="amber-button amber-button_theme_fill amber-button_size_m CustomDateAndTimePopup__cancel-button"
                                          type="button"
                                        >
                                          <span
                                            class="amber-button__text"
                                          >
                                            order.order_time_select.back
                                          </span>
                                        </button>
                                        <button
                                          class="amber-button amber-button_theme_accent amber-button_size_m CustomDateAndTimePopup__ok-button"
                                          type="button"
                                        >
                                          <span
                                            class="amber-button__text"
                                          >
                                            order.order_time_select.ready
                                          </span>
                                        </button>
                                      </div>
                                    </section>
                                  </div>
                                </body>
                              }
                            >
                              <Popper
                                modifiers={
                                  Object {
                                    "flip": Object {
                                      "behavior": Array [
                                        "top",
                                        "right",
                                        "bottom",
                                        "left",
                                      ],
                                      "enabled": true,
                                    },
                                    "preventOverflow": Object {
                                      "padding": 8,
                                    },
                                  }
                                }
                                placement="bottom"
                                referenceElement={
                                  <div>
                                    <div
                                      class="amber-select amber-select amber-select_noBlurOnDisable"
                                    >
                                      <div
                                        class="Select has-value is-disabled Select--single"
                                      >
                                        <div
                                          class="Select-control"
                                        >
                                          <div
                                            class="Select-multi-value-wrapper"
                                            id="react-select-3--value"
                                          >
                                            <div
                                              class="Select-value"
                                            >
                                              <span
                                                aria-selected="true"
                                                class="Select-value-label"
                                                id="react-select-3--value-item"
                                                role="option"
                                              >
                                                time_options.another_time
                                              </span>
                                            </div>
                                            <div
                                              aria-activedescendant="react-select-3--value"
                                              aria-disabled="true"
                                              aria-expanded="false"
                                              aria-owns=""
                                              autocomplete="off"
                                              autocorrect="off"
                                              class="Select-input"
                                              role="combobox"
                                              spellcheck="false"
                                              style="border: 0px; width: 1px; display: inline-block;"
                                              tabindex="0"
                                            />
                                          </div>
                                          <span
                                            class="Select-arrow-zone"
                                          >
                                            <span
                                              class="Select-arrow"
                                            />
                                          </span>
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                }
                              >
                                <InnerPopper
                                  eventsEnabled={true}
                                  modifiers={
                                    Object {
                                      "flip": Object {
                                        "behavior": Array [
                                          "top",
                                          "right",
                                          "bottom",
                                          "left",
                                        ],
                                        "enabled": true,
                                      },
                                      "preventOverflow": Object {
                                        "padding": 8,
                                      },
                                    }
                                  }
                                  placement="bottom"
                                  positionFixed={false}
                                  referenceElement={
                                    <div>
                                      <div
                                        class="amber-select amber-select amber-select_noBlurOnDisable"
                                      >
                                        <div
                                          class="Select has-value is-disabled Select--single"
                                        >
                                          <div
                                            class="Select-control"
                                          >
                                            <div
                                              class="Select-multi-value-wrapper"
                                              id="react-select-3--value"
                                            >
                                              <div
                                                class="Select-value"
                                              >
                                                <span
                                                  aria-selected="true"
                                                  class="Select-value-label"
                                                  id="react-select-3--value-item"
                                                  role="option"
                                                >
                                                  time_options.another_time
                                                </span>
                                              </div>
                                              <div
                                                aria-activedescendant="react-select-3--value"
                                                aria-disabled="true"
                                                aria-expanded="false"
                                                aria-owns=""
                                                autocomplete="off"
                                                autocorrect="off"
                                                class="Select-input"
                                                role="combobox"
                                                spellcheck="false"
                                                style="border: 0px; width: 1px; display: inline-block;"
                                                tabindex="0"
                                              />
                                            </div>
                                            <span
                                              class="Select-arrow-zone"
                                            >
                                              <span
                                                class="Select-arrow"
                                              />
                                            </span>
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                  }
                                >
                                  <OnClickOutside(PopupContent)
                                    className="CustomDateAndTimePopup Popup"
                                    eventTypes={
                                      Array [
                                        "click",
                                        "touchend",
                                      ]
                                    }
                                    excludeScrollbar={false}
                                    innerRef={[Function]}
                                    outsideClickIgnoreClass="ignore-react-onclickoutside"
                                    preventDefault={false}
                                    stopPropagation={false}
                                    style={
                                      Object {
                                        "left": 0,
                                        "opacity": 0,
                                        "pointerEvents": "none",
                                        "position": "absolute",
                                        "top": 0,
                                      }
                                    }
                                  >
                                    <PopupContent
                                      className="CustomDateAndTimePopup Popup"
                                      disableOnClickOutside={[Function]}
                                      enableOnClickOutside={[Function]}
                                      eventTypes={
                                        Array [
                                          "click",
                                          "touchend",
                                        ]
                                      }
                                      innerRef={[Function]}
                                      outsideClickIgnoreClass="ignore-react-onclickoutside"
                                      preventDefault={false}
                                      stopPropagation={false}
                                      style={
                                        Object {
                                          "left": 0,
                                          "opacity": 0,
                                          "pointerEvents": "none",
                                          "position": "absolute",
                                          "top": 0,
                                        }
                                      }
                                    >
                                      <div
                                        className="CustomDateAndTimePopup Popup"
                                        style={
                                          Object {
                                            "left": 0,
                                            "opacity": 0,
                                            "pointerEvents": "none",
                                            "position": "absolute",
                                            "top": 0,
                                          }
                                        }
                                      >
                                        <Arrow>
                                          <div
                                            className="Popup__arrow"
                                          />
                                        </Arrow>
                                        <Section
                                          padding="l"
                                          roundBorders="all"
                                          theme="white"
                                        >
                                          <section
                                            className="amber-section amber-section_roundBorders_all amber-section_padding_l amber-section_theme_white"
                                          >
                                            <Row
                                              paddingBottom="m"
                                            >
                                              <div
                                                className="amber-row amber-row_paddingBottom-xs_m"
                                              >
                                                <Component>
                                                  <div
                                                    className="amber-col"
                                                  >
                                                    <RadioButton
                                                      blockName="amber-radio-button"
                                                      name="datetime-day"
                                                      onChange={[Function]}
                                                      options={
                                                        Array [
                                                          Object {
                                                            "label": "day_options.today",
                                                            "value": 0,
                                                          },
                                                          Object {
                                                            "label": "day_options.tomorrow",
                                                            "value": 1,
                                                          },
                                                          Object {
                                                            "label": "day_options.day_after_tomorrow",
                                                            "value": 2,
                                                          },
                                                          Object {
                                                            "label": "day_options.another_date",
                                                            "value": "custom",
                                                          },
                                                        ]
                                                      }
                                                      value="custom"
                                                    >
                                                      <div
                                                        className="amber-radio-button"
                                                        name="datetime-day"
                                                        value="custom"
                                                      >
                                                        <RadioButtonItem
                                                          blockName="amber-radio-button"
                                                          checked={false}
                                                          key="0"
                                                          label="day_options.today"
                                                          name="datetime-day"
                                                          onChange={[Function]}
                                                          value={0}
                                                        >
                                                          <label
                                                            className="amber-radio-button__radio"
                                                          >
                                                            <input
                                                              checked={false}
                                                              className="amber-radio-button__control"
                                                              name="datetime-day"
                                                              onChange={[Function]}
                                                              type="radio"
                                                            />
                                                            <span
                                                              className="amber-radio-button__radio-box"
                                                            />
                                                            <span
                                                              className="amber-radio-button__radio-text"
                                                            >
                                                              day_options.today
                                                            </span>
                                                          </label>
                                                        </RadioButtonItem>
                                                        <RadioButtonItem
                                                          blockName="amber-radio-button"
                                                          checked={false}
                                                          key="1"
                                                          label="day_options.tomorrow"
                                                          name="datetime-day"
                                                          onChange={[Function]}
                                                          value={1}
                                                        >
                                                          <label
                                                            className="amber-radio-button__radio"
                                                          >
                                                            <input
                                                              checked={false}
                                                              className="amber-radio-button__control"
                                                              name="datetime-day"
                                                              onChange={[Function]}
                                                              type="radio"
                                                            />
                                                            <span
                                                              className="amber-radio-button__radio-box"
                                                            />
                                                            <span
                                                              className="amber-radio-button__radio-text"
                                                            >
                                                              day_options.tomorrow
                                                            </span>
                                                          </label>
                                                        </RadioButtonItem>
                                                        <RadioButtonItem
                                                          blockName="amber-radio-button"
                                                          checked={false}
                                                          key="2"
                                                          label="day_options.day_after_tomorrow"
                                                          name="datetime-day"
                                                          onChange={[Function]}
                                                          value={2}
                                                        >
                                                          <label
                                                            className="amber-radio-button__radio"
                                                          >
                                                            <input
                                                              checked={false}
                                                              className="amber-radio-button__control"
                                                              name="datetime-day"
                                                              onChange={[Function]}
                                                              type="radio"
                                                            />
                                                            <span
                                                              className="amber-radio-button__radio-box"
                                                            />
                                                            <span
                                                              className="amber-radio-button__radio-text"
                                                            >
                                                              day_options.day_after_tomorrow
                                                            </span>
                                                          </label>
                                                        </RadioButtonItem>
                                                        <RadioButtonItem
                                                          blockName="amber-radio-button"
                                                          checked={true}
                                                          key="3"
                                                          label="day_options.another_date"
                                                          name="datetime-day"
                                                          onChange={[Function]}
                                                          value="custom"
                                                        >
                                                          <label
                                                            className="amber-radio-button__radio amber-radio-button__radio_checked"
                                                          >
                                                            <input
                                                              checked={true}
                                                              className="amber-radio-button__control"
                                                              name="datetime-day"
                                                              onChange={[Function]}
                                                              type="radio"
                                                            />
                                                            <span
                                                              className="amber-radio-button__radio-box"
                                                            />
                                                            <span
                                                              className="amber-radio-button__radio-text"
                                                            >
                                                              day_options.another_date
                                                            </span>
                                                          </label>
                                                        </RadioButtonItem>
                                                      </div>
                                                    </RadioButton>
                                                  </div>
                                                </Component>
                                                <Component
                                                  paddingLeft="m"
                                                >
                                                  <div
                                                    className="amber-col amber-col_paddingLeft-xs_m amber-col_paddingStart-xs_m"
                                                  >
                                                    <TimeInput
                                                      iconRight={
                                                        <Unknown>
                                                          order.order_time_select.time.tooltip
                                                        </Unknown>
                                                      }
                                                      onChange={[Function]}
                                                      value="16:25"
                                                    >
                                                      <ForwardRef
                                                        className="TimeInput TimeInput_iconCount_1"
                                                        iconRight={
                                                          <Unknown>
                                                            order.order_time_select.time.tooltip
                                                          </Unknown>
                                                        }
                                                        mask="99:99"
                                                        onChange={[Function]}
                                                        placeholder="00:00"
                                                        value="16:25"
                                                      >
                                                        <div
                                                          className="amber-input amber-input_theme_outline amber-input_size_m TimeInput TimeInput_iconCount_1"
                                                        >
                                                          <div
                                                            className="amber-input__box"
                                                          >
                                                            <span
                                                              className="amber-input__icon amber-input__icon_right"
                                                            >
                                                              <Component>
                                                                <Tooltip
                                                                  content="order.order_time_select.time.tooltip"
                                                                  enableHoverListener={true}
                                                                >
                                                                  <Icon
                                                                    aria-haspopup="true"
                                                                    className="IconWithTooltip"
                                                                    onMouseLeave={[Function]}
                                                                    onMouseOver={[Function]}
                                                                  >
                                                                    <span
                                                                      className="amber-icon amber-icon_help IconWithTooltip"
                                                                    >
                                                                      <Icon
                                                                        aria-haspopup="true"
                                                                        onMouseLeave={[Function]}
                                                                        onMouseOver={[Function]}
                                                                      >
                                                                        <svg
                                                                          aria-haspopup="true"
                                                                          height="24"
                                                                          onMouseLeave={[Function]}
                                                                          onMouseOver={[Function]}
                                                                          viewBox="0 0 24 24"
                                                                          width="24"
                                                                          xmlns="http://www.w3.org/2000/svg"
                                                                        >
                                                                          <path
                                                                            d="M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z"
                                                                            fillRule="nonzero"
                                                                          />
                                                                        </svg>
                                                                      </Icon>
                                                                    </span>
                                                                  </Icon>
                                                                </Tooltip>
                                                              </Component>
                                                            </span>
                                                            <InputElement
                                                              className="amber-input__control"
                                                              mask="99:99"
                                                              onChange={[Function]}
                                                              placeholder="00:00"
                                                              value="16:25"
                                                            >
                                                              <input
                                                                className="amber-input__control"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                onMouseDown={[Function]}
                                                                onPaste={[Function]}
                                                                placeholder="00:00"
                                                                value="16:25"
                                                              />
                                                            </InputElement>
                                                          </div>
                                                        </div>
                                                      </ForwardRef>
                                                    </TimeInput>
                                                  </div>
                                                </Component>
                                              </div>
                                            </Row>
                                            <withProps(Row)>
                                              <Row
                                                className="ControlGroup"
                                                verticalAlign="center"
                                              >
                                                <div
                                                  className="ControlGroup amber-row amber-row_verticalAlign-xs_center"
                                                >
                                                  <AmberButtonControl
                                                    className="CustomDateAndTimePopup__cancel-button"
                                                    onClick={[Function]}
                                                    size="m"
                                                    theme="fill"
                                                  >
                                                    <Button
                                                      className="amber-button amber-button_theme_fill amber-button_size_m CustomDateAndTimePopup__cancel-button"
                                                      onClick={[Function]}
                                                      type="button"
                                                    >
                                                      <button
                                                        className="amber-button amber-button_theme_fill amber-button_size_m CustomDateAndTimePopup__cancel-button"
                                                        onClick={[Function]}
                                                        type="button"
                                                      >
                                                        <span
                                                          className="amber-button__text"
                                                        >
                                                          order.order_time_select.back
                                                        </span>
                                                      </button>
                                                    </Button>
                                                  </AmberButtonControl>
                                                  <AmberButtonControl
                                                    className="CustomDateAndTimePopup__ok-button"
                                                    onClick={[Function]}
                                                    size="m"
                                                    theme="accent"
                                                  >
                                                    <Button
                                                      className="amber-button amber-button_theme_accent amber-button_size_m CustomDateAndTimePopup__ok-button"
                                                      onClick={[Function]}
                                                      type="button"
                                                    >
                                                      <button
                                                        className="amber-button amber-button_theme_accent amber-button_size_m CustomDateAndTimePopup__ok-button"
                                                        onClick={[Function]}
                                                        type="button"
                                                      >
                                                        <span
                                                          className="amber-button__text"
                                                        >
                                                          order.order_time_select.ready
                                                        </span>
                                                      </button>
                                                    </Button>
                                                  </AmberButtonControl>
                                                </div>
                                              </Row>
                                            </withProps(Row)>
                                          </section>
                                        </Section>
                                      </div>
                                    </PopupContent>
                                  </OnClickOutside(PopupContent)>
                                </InnerPopper>
                              </Popper>
                            </Portal>
                          </Popup>
                        </Popup>
                      </CustomDateAndTimePopup>
                    </withProps(CustomDateAndTimePopup)>
                  </CustomTime>
                </withProps(CustomTime)>
              </EnhancedCustomTime>
            </div>
          </OrderTime>
        </withProps(OrderTime)>
      </Component>
    </Component>
  </Provider>
</Component>
`;

exports[`OrderTime показывается в дефолтном виде 1`] = `
<Component
  onSelectCustom={[MockFunction]}
  onSelectDue={[MockFunction]}
>
  <Provider
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(Symbol.observable): [Function],
      }
    }
  >
    <Component
      onSelectCustom={[MockFunction]}
      onSelectDue={[MockFunction]}
    >
      <Component
        t={[Function]}
      >
        <withProps(OrderTime)
          onSelectCustom={[MockFunction]}
          onSelectDue={[MockFunction]}
        >
          <OrderTime
            onSelectCustom={[MockFunction]}
            onSelectDue={[MockFunction]}
            t={[Function]}
          >
            <div
              className="order-time-select"
            >
              <div>
                <Select
                  autosize={false}
                  clearable={false}
                  labelKey="label"
                  modifiers={
                    Object {
                      "noBlurOnDisable": true,
                    }
                  }
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "label": "time_options.near_future",
                        "value": 0,
                      },
                      Object {
                        "label": "time_options.after_10_min",
                        "value": 10,
                      },
                      Object {
                        "label": "time_options.after_15_min",
                        "value": 15,
                      },
                      Object {
                        "label": "time_options.another_time",
                        "value": "custom",
                      },
                    ]
                  }
                  placeholder="order.order_time_select.time"
                  searchable={false}
                  valueKey="value"
                >
                  <mapProps(Select)
                    autosize={false}
                    clearable={false}
                    labelKey="label"
                    modifiers={
                      Object {
                        "noBlurOnDisable": true,
                      }
                    }
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "label": "time_options.near_future",
                          "value": 0,
                        },
                        Object {
                          "label": "time_options.after_10_min",
                          "value": 10,
                        },
                        Object {
                          "label": "time_options.after_15_min",
                          "value": 15,
                        },
                        Object {
                          "label": "time_options.another_time",
                          "value": "custom",
                        },
                      ]
                    }
                    placeholder="order.order_time_select.time"
                    searchable={false}
                    t={[Function]}
                    valueKey="value"
                  >
                    <Select
                      autosize={false}
                      blockName="amber-select"
                      className="amber-select amber-select_noBlurOnDisable"
                      clearable={false}
                      closeOnSelect={true}
                      delimiter="|"
                      inputProps={
                        Object {
                          "autoComplete": "off",
                          "autoCorrect": "off",
                          "spellCheck": false,
                        }
                      }
                      labelKey="label"
                      noResultsText="select.search.found.not"
                      onChange={[Function]}
                      options={
                        Array [
                          Object {
                            "label": "time_options.near_future",
                            "value": 0,
                          },
                          Object {
                            "label": "time_options.after_10_min",
                            "value": 10,
                          },
                          Object {
                            "label": "time_options.after_15_min",
                            "value": 15,
                          },
                          Object {
                            "label": "time_options.another_time",
                            "value": "custom",
                          },
                        ]
                      }
                      placeholder="order.order_time_select.time"
                      scrollMenuIntoView={false}
                      searchable={false}
                      valueKey="value"
                    >
                      <div
                        className="amber-select amber-select amber-select_noBlurOnDisable"
                      >
                        <Select
                          arrowRenderer={[Function]}
                          autosize={false}
                          backspaceRemoves={true}
                          backspaceToRemoveMessage="Press backspace to remove {label}"
                          clearAllText="Clear all"
                          clearRenderer={[Function]}
                          clearValueText="Clear value"
                          clearable={false}
                          closeOnSelect={true}
                          deleteRemoves={true}
                          delimiter="|"
                          disabled={false}
                          escapeClearsValue={true}
                          filterOptions={[Function]}
                          ignoreAccents={true}
                          ignoreCase={true}
                          inputProps={
                            Object {
                              "autoComplete": "off",
                              "autoCorrect": "off",
                              "spellCheck": false,
                            }
                          }
                          isLoading={false}
                          joinValues={false}
                          labelKey="label"
                          matchPos="any"
                          matchProp="any"
                          menuBuffer={0}
                          menuRenderer={[Function]}
                          multi={false}
                          noResultsText="select.search.found.not"
                          onBlurResetsInput={true}
                          onChange={[Function]}
                          onCloseResetsInput={true}
                          onSelectResetsInput={true}
                          openOnClick={true}
                          optionComponent={[Function]}
                          options={
                            Array [
                              Object {
                                "label": "time_options.near_future",
                                "value": 0,
                              },
                              Object {
                                "label": "time_options.after_10_min",
                                "value": 10,
                              },
                              Object {
                                "label": "time_options.after_15_min",
                                "value": 15,
                              },
                              Object {
                                "label": "time_options.another_time",
                                "value": "custom",
                              },
                            ]
                          }
                          pageSize={5}
                          placeholder="order.order_time_select.time"
                          removeSelected={true}
                          required={false}
                          rtl={false}
                          scrollMenuIntoView={false}
                          searchable={false}
                          simpleValue={false}
                          tabSelectsValue={true}
                          trimFilter={true}
                          valueComponent={[Function]}
                          valueKey="value"
                        >
                          <div
                            className="Select Select--single"
                          >
                            <div
                              className="Select-control"
                              onKeyDown={[Function]}
                              onMouseDown={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                            >
                              <div
                                className="Select-multi-value-wrapper"
                                id="react-select-2--value"
                              >
                                <div
                                  className="Select-placeholder"
                                >
                                  order.order_time_select.time
                                </div>
                                <div
                                  aria-activedescendant="react-select-2--value"
                                  aria-disabled="false"
                                  aria-expanded={false}
                                  aria-owns=""
                                  autoComplete="off"
                                  autoCorrect="off"
                                  className="Select-input"
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  role="combobox"
                                  spellCheck={false}
                                  style={
                                    Object {
                                      "border": 0,
                                      "display": "inline-block",
                                      "width": 1,
                                    }
                                  }
                                  tabIndex={0}
                                />
                              </div>
                              <span
                                className="Select-arrow-zone"
                                onMouseDown={[Function]}
                              >
                                <span
                                  className="Select-arrow"
                                  onMouseDown={[Function]}
                                />
                              </span>
                            </div>
                          </div>
                        </Select>
                      </div>
                    </Select>
                  </mapProps(Select)>
                </Select>
              </div>
            </div>
          </OrderTime>
        </withProps(OrderTime)>
      </Component>
    </Component>
  </Provider>
</Component>
`;
