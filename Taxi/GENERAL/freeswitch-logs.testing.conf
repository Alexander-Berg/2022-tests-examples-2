input {

  file {
    id => "octonode"
    path => "/var/log/yandex/octopus/octonode-XXX-YYYN.yndx.net.*.log"
    sincedb_path => "/var/cache/logstash/octonode-logs.sincedb"
    start_position => beginning
    ignore_older =>  86400
    discover_interval => 5
    codec => multiline {
      auto_flush_interval => 10
      charset => "UTF-8"
      negate => true
      pattern => "^%{TIMESTAMP_ISO8601}"
      what => "previous"
    }
    add_field => { "[@metadata][log_type]" => "octonode" }
  }

}

filter {

  if [@metadata][log_type] == "octonode" {

    dissect {
      mapping => {
        "message" => "%{timestamp} - %{level} - %{module} - %{text}"
      }
      remove_field => [ "message" ]
    }

    date {
      match => [ "timestamp", "yyyy-MM-dd HH:mm:ss,SSS" ]
      remove_field => [ "timestamp" ]
      timezone => 'Europe/Moscow'
    }

  }

  mutate {
    add_field => {
      "[@metadata][idx_name]" => "${ES_CUSTOM_IDX_TAXI_NAME:yandex-taxi}"
      "[@metadata][idx_time]" => "%{${ES_CUSTOM_IDX_TAXI_TIME:+YYYY.MM.dd.HH}}"
    }
  }

  ruby {
    init => "
      $cgroups = 'unknown'
      File.open('/etc/conductor-hostinfo/hostinfo').each do |line|
        if /^groups=\'(.+)\'$/.match(line.strip)
          $cgroups = $1.split(',')
          $cgroups -= [ 'taxi_test_all', 'taxi_all' ]
          break
        end
      end
    "
    code => "event.set('[cgroups]', $cgroups)"
  }

}

output {

  elasticsearch {
    hosts => [
      "http://elastic-logs-vla-04.taxi.tst.yandex.net:9200",
      "http://elastic-logs-vla-05.taxi.tst.yandex.net:9200",
      "http://elastic-logs-sas-04.taxi.tst.yandex.net:9200",
      "http://elastic-logs-sas-05.taxi.tst.yandex.net:9200"
    ]
    index => "%{[@metadata][idx_name]}-%{[@metadata][idx_time]}"
    manage_template => false
  }

}
