#
# hints for monrun
#   monrun_es_url: http://taxi-elastic-logs.taxi.tst.yandex.net:9200/taximeter-logs-*
#   monrun_es_index: taximeter-logs-*
#

input {

  file {
    id => "input_file_01"
    path => "/var/log/yandex/taximeter-*/taximeter-*.log"
    sincedb_path => "/var/cache/logstash/taximeter-logs.sincedb"
    start_position => end
    ignore_older =>  86400
    discover_interval => 5
    codec => multiline {
      charset => "UTF-8"
      patterns_dir => "/etc/logstash/patterns"
      pattern => "^%{TAXILOGDATE}|^tskv"
      negate => true
      what => "previous"
      auto_flush_interval => 10
    }
  }

}

filter {

  if [message] =~ "^tskv	" {

    kv {
      id => "filter_kv_01"
      source => "message"
      field_split => "\t"
      value_split => "="
      include_brackets => false
      allow_duplicate_values => false
      add_tag => [ "_logstash_parsed" ]
    }

  } else {

    grok {
      id => "filter_grok_01"
      patterns_dir => "/etc/logstash/patterns"
      match => { "message" => "%{TAXILOGDATE:timestamp}\|%{DATA:log_module}\|%{WORD:log_level}\|%{DATA:log_meta}\|%{GREEDYDATA:log_message}" }
      add_tag => [ "_logstash_parsed" ]
    }

    kv {
      id => "filter_kv_02"
      source => "log_meta"
      field_split => "\t"
      value_split => "="
      prefix => "meta_"
      remove_field => [ "log_meta" ]
      allow_duplicate_values => false
    }

  }

  date {
    id => "filter_date_01"
    match => [ "timestamp", "yyyy-MM-dd HH:mm:ss.SSSS" ]
    remove_field => [ "timestamp" ]
    timezone => 'Europe/Moscow'
  }

  ruby {
    id => "filter_ruby_01"
    init => "
      $cgroups = 'unknown'
      File.open('/etc/conductor-hostinfo/hostinfo').each do |line|
        if /^groups=\'(.+)\'$/.match(line.strip)
          $cgroups = $1.split(',')
          $cgroups -= [ 'taxi_test_all', 'taxi_all' ]
          break
        end
      end
    "
    code => "event.set('[cgroups]', $cgroups)"
  }

}

output {

  if "_logstash_parsed" in [tags] {

    elasticsearch {
      id => "output_es_01"
      hosts => [
         "http://elastic-logs-vla-01.taxi.tst.yandex.net:9199",
         "http://elastic-logs-vla-02.taxi.tst.yandex.net:9199",
         "http://elastic-logs-sas-01.taxi.tst.yandex.net:9199",
         "http://elastic-logs-sas-02.taxi.tst.yandex.net:9199",
         "http://elastic-logs-myt-01.taxi.tst.yandex.net:9199"
      ]
      index => "taximeter-logs-%{+YYYY.MM.dd.HH}"
      template => "/etc/logstash/templates/template-taximeter-logs.testing.json"
      template_name => "taximeter-logs"
      template_overwrite => true
      timeout => 120
    }

    if [log_level] != "DEBUG" and [log_level] != "INFO" and [log_level] != "WARN" {

      elasticsearch {
        id => "output_es_03"
        hosts => [
          "http://elastic-logs-vla-01.taxi.tst.yandex.net:9199",
          "http://elastic-logs-vla-02.taxi.tst.yandex.net:9199",
          "http://elastic-logs-sas-01.taxi.tst.yandex.net:9199",
          "http://elastic-logs-sas-02.taxi.tst.yandex.net:9199",
          "http://elastic-logs-myt-01.taxi.tst.yandex.net:9199"
        ]
        index => "errors-taximeter-logs-%{+YYYY.MM.dd}"
        template => "/etc/logstash/templates/template-taximeter-logs.testing.json"
        template_name => "taximeter-logs"
      }

    }

  } else {

    elasticsearch {
      id => "output_es_02"
      hosts => [
         "http://elastic-logs-vla-01.taxi.tst.yandex.net:9199",
         "http://elastic-logs-vla-02.taxi.tst.yandex.net:9199",
         "http://elastic-logs-sas-01.taxi.tst.yandex.net:9199",
         "http://elastic-logs-sas-02.taxi.tst.yandex.net:9199",
         "http://elastic-logs-myt-01.taxi.tst.yandex.net:9199"
      ]
      index => "unparsed-taximeter-logs-%{+YYYY.MM.dd.HH}"
      template => "/etc/logstash/templates/template-taximeter-logs.testing.json"
      template_name => "taximeter-logs"
      template_overwrite => true
      timeout => 120
    }

  }

}
