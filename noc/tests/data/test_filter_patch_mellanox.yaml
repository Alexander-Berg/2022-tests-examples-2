vendor: pc


acl: |
    .*ports.conf
    .*traffic.conf

output:
  /etc/cumulus/ports.conf: |
    1=25G
    2=25G
    3=25G
    4=25G
    5=25G
    6=25G
    7=25G
    8=25G
    9=25G
    10=25G
    11=25G
    12=25G
    13=25G
    14=25G
    15=25G
    16=25G
    17=25G
    18=25G
    19=25G
    20=25G
    21=25G
    22=25G
    23=25G
    24=25G
    25=25G
    26=25G
    27=25G
    28=25G
    29=25G
    30=25G
    31=25G
    32=25G
    33=25G
    34=25G
    35=25G
    36=25G
    37=25G
    38=25G
    39=25G
    40=25G
    41=25G
    42=25G
    43=25G
    44=25G
    45=25G
    46=25G
    47=25G
    48=25G
    49=100G
    50=100G
    51=100G
    52=100G
    53=100G
    54=100G
    55=100G
    56=100G

  /etc/cumulus/datapath/traffic.conf: |
    # Yandex 3.7 Profile
    # packet header field used to determine the packet priority level
    # fields include {802.1p, dscp}
    traffic.packet_priority_source_set = [dscp]

    # packet priority source values assigned to each internal cos value
    # internal cos values {cos_0..cos_7}
    # (internal cos 3 has been reserved for CPU-generated traffic)
    #
    # 802.1p values = {0..7}
    #traffic.cos_0.priority_source.8021p = [0]
    #traffic.cos_1.priority_source.8021p = [1]
    #traffic.cos_2.priority_source.8021p = [2]
    #traffic.cos_3.priority_source.8021p = []
    #traffic.cos_4.priority_source.8021p = [3,4]
    #traffic.cos_5.priority_source.8021p = [5]
    #traffic.cos_6.priority_source.8021p = [6]
    #traffic.cos_7.priority_source.8021p = [7]

    # dscp values = {0..63}
    traffic.cos_0.priority_source.dscp = [0,1,2,3,4,5,6,7]
    traffic.cos_1.priority_source.dscp = [8,9,10,11,12,13,14,15]
    traffic.cos_2.priority_source.dscp = [16,17,18,19,20,21,22,23]
    traffic.cos_3.priority_source.dscp = [24,25,26,27,28,29,30,31]
    traffic.cos_4.priority_source.dscp = [32,33,34,35,36,37,38,39]
    traffic.cos_5.priority_source.dscp = [40,41,42,43,44,45,46,47]
    traffic.cos_6.priority_source.dscp = [48,49,50,51,52,53,54,55]
    traffic.cos_7.priority_source.dscp = [56,57,58,59,60,61,62,63]

    # remark packet priority value
    # fields include {802.1p, dscp}
    traffic.packet_priority_remark_set = [dscp]

    # packet priority remark values assigned from each internal cos value
    # internal cos values {cos_0..cos_7}
    # (internal cos 3 has been reserved for CPU-generated traffic)
    #
    # 802.1p values = {0..7}
    #traffic.cos_0.priority_remark.8021p = [0]
    #traffic.cos_1.priority_remark.8021p = [1]
    #traffic.cos_2.priority_remark.8021p = [2]
    #traffic.cos_3.priority_remark.8021p = [3]
    #traffic.cos_4.priority_remark.8021p = [4]
    #traffic.cos_5.priority_remark.8021p = [5]
    #traffic.cos_6.priority_remark.8021p = [6]
    #traffic.cos_7.priority_remark.8021p = [7]

    # dscp values = {0..63}
    #traffic.cos_0.priority_remark.dscp = [0]
    #traffic.cos_1.priority_remark.dscp = [8]
    #traffic.cos_2.priority_remark.dscp = [16]
    #traffic.cos_3.priority_remark.dscp = [24]
    #traffic.cos_4.priority_remark.dscp = [32]
    #traffic.cos_5.priority_remark.dscp = [40]
    #traffic.cos_6.priority_remark.dscp = [48]
    #traffic.cos_7.priority_remark.dscp = [56]

    # source.port_group_list = [source_port_group]
    # source.source_port_group.packet_priority_source_set = [dscp]
    # source.source_port_group.port_set = swp1-swp4,swp6
    # source.source_port_group.cos_0.priority_source.dscp = [0,1,2,3,4,5,6,7]
    # source.source_port_group.cos_1.priority_source.dscp = [8,9,10,11,12,13,14,15]
    # source.source_port_group.cos_2.priority_source.dscp = [16,17,18,19,20,21,22,23]
    # source.source_port_group.cos_3.priority_source.dscp = [24,25,26,27,28,29,30,31]
    # source.source_port_group.cos_4.priority_source.dscp = [32,33,34,35,36,37,38,39]
    # source.source_port_group.cos_5.priority_source.dscp = [40,41,42,43,44,45,46,47]
    # source.source_port_group.cos_6.priority_source.dscp = [48,49,50,51,52,53,54,55]
    # source.source_port_group.cos_7.priority_source.dscp = [56,57,58,59,60,61,62,63]

    # remark.port_group_list = [remark_port_group]
    # remark.remark_port_group.packet_priority_remark_set = [dscp]
    # remark.remark_port_group.port_set = swp1-swp4,swp6
    # remark.remark_port_group.cos_0.priority_remark.dscp = [0]
    # remark.remark_port_group.cos_1.priority_remark.dscp = [8]
    # remark.remark_port_group.cos_2.priority_remark.dscp = [16]
    # remark.remark_port_group.cos_3.priority_remark.dscp = [24]
    # remark.remark_port_group.cos_4.priority_remark.dscp = [32]
    # remark.remark_port_group.cos_5.priority_remark.dscp = [40]
    # remark.remark_port_group.cos_6.priority_remark.dscp = [48]
    # remark.remark_port_group.cos_7.priority_remark.dscp = [56]

    # priority groups
    #traffic.priority_group_list = [control, service, bulk]
    traffic.priority_group_list = [network, heartbeats, goodbulk, badbulk]
    # internal cos values assigned to each priority group
    # each cos value should be assigned exactly once
    # internal cos values {0..7}
    priority_group.network.cos_list = [6,7]
    priority_group.heartbeats.cos_list = [0,3,5]
    priority_group.goodbulk.cos_list = [4]
    priority_group.badbulk.cos_list = [1,2]

    # to configure priority flow control on a group of ports:
    # -- assign cos value(s) to the cos list
    # -- add or replace a port group names in the port group list
    # -- for each port group in the list
    #    -- populate the port set, e.g.
    #       swp1-swp4,swp8,swp50s0-swp50s3
    #    -- set a PFC buffer size in bytes for each port in the group
    #    -- set the xoff byte limit (buffer limit that triggers PFC frames transmit to start)
    #    -- set the xon byte delta (buffer limit that triggers PFC frames transmit to stop)
    #    -- enable PFC frame transmit and/or PFC frame receive

    # priority flow control
    # pfc.port_group_list = [pfc_port_group]
    # pfc.pfc_port_group.cos_list = []
    # pfc.pfc_port_group.port_set = swp1-swp4,swp6
    # pfc.pfc_port_group.port_buffer_bytes = 25000
    # pfc.pfc_port_group.xoff_size = 10000
    # pfc.pfc_port_group.xon_delta = 2000
    # pfc.pfc_port_group.tx_enable = true
    # pfc.pfc_port_group.rx_enable = true

    # to configure pause on a group of ports:
    # -- add or replace port group names in the port group list
    # -- for each port group in the list
    #    -- populate the port set, e.g.
    #       swp1-swp4,swp8,swp50s0-swp50s3
    #    -- set a pause buffer size in bytes for each port
    #    -- set the xoff byte limit (buffer limit that triggers pause frames transmit to start)
    #    -- set the xon byte delta (buffer limit that triggers pause frames transmit to stop)
    #    -- enable pause frame transmit and/or pause frame receive

    # link pause
    # link_pause.port_group_list = [pause_port_group]
    # link_pause.pause_port_group.port_set = swp1-swp4,swp6
    # link_pause.pause_port_group.port_buffer_bytes = 25000
    # link_pause.pause_port_group.xoff_size = 10000
    # link_pause.pause_port_group.xon_delta = 2000
    # link_pause.pause_port_group.rx_enable = true
    # link_pause.pause_port_group.tx_enable = true

    # Explicit Congestion Notification
    # to configure ECN and RED on a group of ports:
    # -- add or replace port group names in the port group list
    # -- assign cos value(s) to the cos list
    # -- for each port group in the list
    #    -- populate the port set, e.g.
    #       swp1-swp4,swp8,swp50s0-swp50s3
    # -- to enable RED requires the latest traffic.conf
     ecn_red.port_group_list = [ecn_red_port_group]
     ecn_red.ecn_red_port_group.cos_list = [4,6,7]
     ecn_red.ecn_red_port_group.port_set = swp1-swp56
     ecn_red.ecn_red_port_group.ecn_enable = true
     ecn_red.ecn_red_port_group.red_enable = false
     ecn_red.ecn_red_port_group.min_threshold_bytes = 100000
     ecn_red.ecn_red_port_group.max_threshold_bytes = 1000000
     ecn_red.ecn_red_port_group.probability = 100

    # scheduling algorithm: algorithm values = {dwrr}
    scheduling.algorithm = dwrr

    # traffic group scheduling weight
    # weight values = {0..127}
    # '0' indicates strict priority
    priority_group.network.weight = 0
    priority_group.heartbeats.weight = 15
    priority_group.goodbulk.weight = 50
    priority_group.badbulk.weight = 25

    # To turn on/off Denial of service (DOS) prevention checks
    dos_enable = false

    # Cut-through is disabled by default on all chips with the exception of
    # Spectrum.  On Spectrum cut-through cannot be disabled.
    #cut_through_enable = false

    # Enable resilient hashing
    #resilient_hash_enable = FALSE

    # Resilient hashing flowset entries per ECMP group
    # Valid values - 64, 128, 256, 512, 1024
    #resilient_hash_entries_ecmp = 128

    # Enable symmetric hashing
    #symmetric_hash_enable = TRUE

    # Set sflow/sample ingress cpu packet rate and burst in packets/sec
    # Values: {0..16384}
    #sflow.rate = 16384
    #sflow.burst = 16384

    #Specify the maximum number of paths per route entry.
    #  Maximum paths supported is 200.
    #  Default value 0 takes the number of physical ports as the max path size.
    #ecmp_max_paths = 0

    #Specify the hash seed for Equal cost multipath entries
    # Default value 0
    # Value Rang: {0..4294967295}
    #ecmp_hash_seed = 42

    # Specify the forwarding table resource allocation profile, applicable
    # only on platforms that support universal forwarding resources.
    #
    # /usr/cumulus/sbin/cl-resource-query reports the allocated table sizes
    # based on the profile setting.
    #
    #   Values: one of {'default', 'l2-heavy', 'v4-lpm-heavy', 'v6-lpm-heavy',
    #                   'ipmc-heavy'}
    #   Default value: 'default'
    #   Note: some devices may support more modes, please consult user
    #         guide for more details
    #
    #forwarding_table.profile = default

input:
  /etc/cumulus/acl/policy.d/00control_plane.rules: |
    INGRESS_INTF = swp+

    INGRESS_CHAIN = INPUT

    INNFWD_CHAIN = INPUT,FORWARD

    MARTIAN_SOURCES_4 = "240.0.0.0/5,127.0.0.0/8,224.0.0.0/4,255.255.255.255/32"

    MARTIAN_SOURCES_6 = "ff00::/8,::/128,::ffff:0.0.0.0/96,::1/128"

    CLAG_PORT = 5342

    BFD_PORT = 3784

    BFD_ECHO_PORT = 3785

    BFD_MH_PORT = 4784

    BOOTPS_PORT = 67

    BOOTPC_PORT = 68

    [iptables]

    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -s $MARTIAN_SOURCES_4 -j DROP

    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -p udp --dport $BFD_ECHO_PORT -j SETCLASS --class 7
    -A $INGRESS_CHAIN -p udp --dport $BFD_ECHO_PORT -j POLICE --set-mode pkt --set-rate 2000 --set-burst 2000

    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -p udp --dport $BFD_PORT -j SETCLASS --class 7
    -A $INGRESS_CHAIN -p udp --dport $BFD_PORT -j POLICE --set-mode pkt --set-rate 2000 --set-burst 2000

    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -p udp --dport $BFD_MH_PORT -j SETCLASS --class 7
    -A $INGRESS_CHAIN -p udp --dport $BFD_MH_PORT -j POLICE --set-mode pkt --set-rate 2000 --set-burst 2000

    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -p ospf -j SETCLASS --class 7
    -A $INGRESS_CHAIN -p ospf -j POLICE --set-mode pkt --set-rate 2000 --set-burst 2000

    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -p pim -j SETCLASS --class 6
    -A $INGRESS_CHAIN -p pim -j POLICE --set-mode pkt --set-rate 2000 --set-burst 2000

    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -p tcp --dport bgp -j SETCLASS --class 7
    -A $INGRESS_CHAIN -p tcp --dport bgp -j POLICE --set-mode pkt --set-rate 2000 --set-burst 2000

    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -p tcp --sport bgp -j SETCLASS --class 7
    -A $INGRESS_CHAIN -p tcp --sport bgp -j POLICE --set-mode pkt --set-rate 2000 --set-burst 2000

    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -p tcp --dport $CLAG_PORT -j SETCLASS --class 7
    -A $INGRESS_CHAIN -p tcp --dport $CLAG_PORT -j POLICE --set-mode pkt --set-rate 2000 --set-burst 2000

    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -p tcp --sport $CLAG_PORT -j SETCLASS --class 7
    -A $INGRESS_CHAIN -p tcp --sport $CLAG_PORT -j POLICE --set-mode pkt --set-rate 2000 --set-burst 2000

    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -p icmp -j SETCLASS --class 2
    -A $INGRESS_CHAIN -p icmp -j POLICE --set-mode pkt --set-rate 100 --set-burst 40

    # bootps/bootpc udp
    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -p udp --dport $BOOTPS_PORT:$BOOTPC_PORT -j SETCLASS --class 2
    -A $INGRESS_CHAIN -p udp --dport $BOOTPS_PORT -j POLICE --set-mode pkt --set-rate 100 --set-burst 100
    -A $INGRESS_CHAIN -p udp --dport $BOOTPC_PORT -j POLICE --set-mode pkt --set-rate 100 --set-burst 100

    # bootps/bootpc tcp
    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -p tcp --dport $BOOTPS_PORT:$BOOTPC_PORT -j SETCLASS --class 2
    -A $INGRESS_CHAIN -p tcp --dport $BOOTPS_PORT -j POLICE --set-mode pkt --set-rate 100 --set-burst 100
    -A $INGRESS_CHAIN -p tcp --dport $BOOTPC_PORT -j POLICE --set-mode pkt --set-rate 100 --set-burst 100

    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -p igmp -j SETCLASS --class 6
    -A $INGRESS_CHAIN -p igmp -j POLICE --set-mode pkt --set-rate 300 --set-burst 100

    [ip6tables]

    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -p udp --dport $BFD_ECHO_PORT -j POLICE --set-mode pkt --set-rate 2000 --set-burst 2000 --set-class 7

    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -p udp --dport $BFD_PORT -j POLICE --set-mode pkt --set-rate 2000 --set-burst 2000 --set-class 7

    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -p udp --dport $BFD_MH_PORT -j POLICE --set-mode pkt --set-rate 2000 --set-burst 2000 --set-class 7

    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -p ospf -j POLICE --set-mode pkt --set-rate 2000 --set-burst 2000 --set-class 7

    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -p tcp --dport bgp -j POLICE --set-mode pkt --set-rate 2000 --set-burst 2000 --set-class 7

    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -p tcp --sport bgp -j POLICE --set-mode pkt --set-rate 2000 --set-burst 2000 --set-class 7

    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -p ipv6-icmp -m icmp6 --icmpv6-type router-solicitation -j POLICE --set-mode pkt --set-rate 200 --set-burst 200 --set-class 2

    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -p ipv6-icmp -m icmp6 --icmpv6-type router-advertisement -j POLICE --set-mode pkt --set-rate 500 --set-burst 500 --set-class 2

    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -p ipv6-icmp -m icmp6 --icmpv6-type neighbour-solicitation -j POLICE --set-mode pkt --set-rate 600 --set-burst 600 --set-class 2

    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -p ipv6-icmp -m icmp6 --icmpv6-type neighbour-advertisement -j POLICE --set-mode pkt --set-rate 600 --set-burst 600 --set-class 2

    # link-local multicast receiver: Listener Query
    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -p ipv6-icmp -m icmp6 --icmpv6-type 130 -j POLICE --set-mode pkt --set-rate 200 --set-burst 100 --set-class 6

    # link-local multicast receiver: Listener Report
    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -p ipv6-icmp -m icmp6 --icmpv6-type 131 -j POLICE --set-mode pkt --set-rate 200 --set-burst 100 --set-class 6

    # link-local multicast receiver: Listener Done
    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -p ipv6-icmp -m icmp6 --icmpv6-type 132 -j POLICE --set-mode pkt --set-rate 200 --set-burst 100 --set-class 6

    # link-local multicast receiver: Listener Report v2
    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -p ipv6-icmp -m icmp6 --icmpv6-type 143 -j POLICE --set-mode pkt --set-rate 200 --set-burst 100 --set-class 6

    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -p ipv6-icmp -j POLICE --set-mode pkt --set-rate 64 --set-burst 40 --set-class 2

    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -p udp --dport dhcpv6-client:dhcpv6-server -j POLICE --set-mode pkt --set-rate 100 --set-burst 100 --set-class 2

    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -p tcp --dport dhcpv6-client:dhcpv6-server -j POLICE --set-mode pkt --set-rate 100 --set-burst 100 --set-class 2

    [ebtables]

    # BPDU
    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -d 01:80:c2:00:00:00 -j setclass --class 7
    -A $INGRESS_CHAIN -d 01:80:c2:00:00:00 -j police --set-mode pkt --set-rate 2000 --set-burst 2000

    # LACP
    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -d 01:80:c2:00:00:02 -j setclass --class 7
    -A $INGRESS_CHAIN -d 01:80:c2:00:00:02 -j police --set-mode pkt --set-rate 2000 --set-burst 2000

    # LLDP
    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -d 01:80:c2:00:00:0e -j setclass --class 6
    -A $INGRESS_CHAIN -d 01:80:c2:00:00:0e -j police --set-mode pkt --set-rate 200 --set-burst 200

    # CDP
    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -d 01:00:0c:cc:cc:cc -j setclass --class 6
    -A $INGRESS_CHAIN -d 01:00:0c:cc:cc:cc -j police --set-mode pkt --set-rate 200 --set-burst 200

    # ARP
    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -p arp -j setclass --class 2
    -A $INGRESS_CHAIN -p arp -j police --set-mode pkt --set-rate 400 --set-burst 100

    # Cisco PVST
    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -d 01:00:0c:cc:cc:cd -j setclass --class 7
    -A $INGRESS_CHAIN -d 01:00:0c:cc:cc:cd -j police --set-mode pkt --set-rate 2000 --set-burst 2000
  /etc/cumulus/acl/policy.d/99control_plane_catch_all.rules: |
    #
    # Note: These are catch-all rules that shall be last in the over all rule set.
    #

    INGRESS_INTF = swp+

    INGRESS_CHAIN = INPUT



    [iptables]

    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -m addrtype --dst-type LOCAL -j POLICE --set-mode pkt --set-rate 1000 --set-burst 1000 --set-class 0

    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -m addrtype --dst-type IPROUTER -j POLICE --set-mode pkt --set-rate 400 --set-burst 100 --set-class 0

    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -j SETCLASS --class 0


    [ip6tables]

    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -m addrtype --dst-type LOCAL -j POLICE --set-mode pkt --set-rate 1000 --set-burst 1000 --set-class 0

    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -m addrtype --dst-type IPROUTER -j POLICE --set-mode pkt --set-rate 2000 --set-burst 500 --set-class 0

    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -j SETCLASS --class 0


    [ebtables]

    -A $INGRESS_CHAIN -p ipv4 --in-interface $INGRESS_INTF -j ACCEPT
    -A $INGRESS_CHAIN -p ipv6 --in-interface $INGRESS_INTF -j ACCEPT
    -A $INGRESS_CHAIN --in-interface $INGRESS_INTF -j setclass --class 0
    -A $INGRESS_CHAIN -j police --set-mode pkt --set-rate 1000 --set-burst 1000
  /etc/cumulus/acl/policy.d/mgmt.rules: |
    [ip6tables]
    -A INPUT --in-interface eth0 -j ACCEPT
    -A INPUT --in-interface lo -j ACCEPT
    -A INPUT --in-interface mgmt -j ACCEPT
    -A INPUT -p tcp --dport 20 -j DROP
    -A INPUT -p tcp --dport 21 -j DROP
    -A INPUT -p tcp --dport 22 -j DROP
    -A INPUT -p tcp --dport 23 -j DROP
    -A INPUT -p udp --dport 161 -j DROP
    -A INPUT -p udp --dport 162 -j DROP
    [iptables]
    -A INPUT --in-interface eth0 -j ACCEPT
    -A INPUT --in-interface lo -j ACCEPT
    -A INPUT --in-interface mgmt -j ACCEPT
    -A INPUT -p tcp --dport 20 -j DROP
    -A INPUT -p tcp --dport 21 -j DROP
    -A INPUT -p tcp --dport 22 -j DROP
    -A INPUT -p tcp --dport 23 -j DROP
    -A INPUT -p udp --dport 161 -j DROP
    -A INPUT -p udp --dport 162 -j DROP
  /etc/cumulus/acl/policy.d/remark.rules: |
    [ebtables]
    -A FORWARD -p 802_1Q --vlan-id 333 -j mark --mark-set 333
    -A FORWARD -p 802_1Q --vlan-id 688 -j mark --mark-set 688
    -A FORWARD -p 802_1Q --vlan-id 700 -j mark --mark-set 700
    -A FORWARD -p 802_1Q --vlan-id 788 -j mark --mark-set 788
    [ip6tables]
    -t mangle -A FORWARD -m mark --mark 333 -m dscp --dscp 0x18 -j ACCEPT
    -t mangle -A FORWARD -m mark --mark 333 -m dscp --dscp 0x20 -j ACCEPT
    -t mangle -A FORWARD -m mark --mark 333 -m dscp --dscp 0x01 -j SETCLASS --class 5
    -t mangle -A FORWARD -m mark --mark 333 -m dscp --dscp 0x19 -j SETCLASS --class 5
    -t mangle -A FORWARD -m mark --mark 333 -m dscp --dscp 0x21 -j SETCLASS --class 5
    -t mangle -A FORWARD -m mark --mark 333 -j SETCLASS --class 3
    -t mangle -A FORWARD -m mark --mark 688 -m dscp --dscp 0x18 -j ACCEPT
    -t mangle -A FORWARD -m mark --mark 688 -m dscp --dscp 0x20 -j ACCEPT
    -t mangle -A FORWARD -m mark --mark 688 -m dscp --dscp 0x01 -j SETCLASS --class 5
    -t mangle -A FORWARD -m mark --mark 688 -m dscp --dscp 0x19 -j SETCLASS --class 5
    -t mangle -A FORWARD -m mark --mark 688 -m dscp --dscp 0x21 -j SETCLASS --class 5
    -t mangle -A FORWARD -m mark --mark 688 -j SETCLASS --class 3
    -t mangle -A FORWARD -m mark --mark 700 -m dscp --dscp 0x08 -j ACCEPT
    -t mangle -A FORWARD -m mark --mark 700 -m dscp --dscp 0x10 -j ACCEPT
    -t mangle -A FORWARD -m mark --mark 700 -j SETCLASS --class 1
    -t mangle -A FORWARD -m mark --mark 788 -m dscp --dscp 0x08 -j ACCEPT
    -t mangle -A FORWARD -m mark --mark 788 -m dscp --dscp 0x10 -j ACCEPT
    -t mangle -A FORWARD -m mark --mark 788 -j SETCLASS --class 1
  /etc/cumulus/datapath/traffic.conf: |
    # Yandex 3.7 Profile
    # packet header field used to determine the packet priority level
    # fields include {802.1p, dscp}
    traffic.packet_priority_source_set = [dscp]

    # packet priority source values assigned to each internal cos value
    # internal cos values {cos_0..cos_7}
    # (internal cos 3 has been reserved for CPU-generated traffic)
    #
    # 802.1p values = {0..7}
    #traffic.cos_0.priority_source.8021p = [0]
    #traffic.cos_1.priority_source.8021p = [1]
    #traffic.cos_2.priority_source.8021p = [2]
    #traffic.cos_3.priority_source.8021p = []
    #traffic.cos_4.priority_source.8021p = [3,4]
    #traffic.cos_5.priority_source.8021p = [5]
    #traffic.cos_6.priority_source.8021p = [6]
    #traffic.cos_7.priority_source.8021p = [7]

    # dscp values = {0..63}
    traffic.cos_0.priority_source.dscp = [0,1,2,3,4,5,6,7]
    traffic.cos_1.priority_source.dscp = [8,9,10,11,12,13,14,15]
    traffic.cos_2.priority_source.dscp = [16,17,18,19,20,21,22,23]
    traffic.cos_3.priority_source.dscp = [24,25,26,27,28,29,30,31]
    traffic.cos_4.priority_source.dscp = [32,33,34,35,36,37,38,39]
    traffic.cos_5.priority_source.dscp = [40,41,42,43,44,45,46,47]
    traffic.cos_6.priority_source.dscp = [48,49,50,51,52,53,54,55]
    traffic.cos_7.priority_source.dscp = [56,57,58,59,60,61,62,63]

    # remark packet priority value
    # fields include {802.1p, dscp}
    traffic.packet_priority_remark_set = [dscp]

    # packet priority remark values assigned from each internal cos value
    # internal cos values {cos_0..cos_7}
    # (internal cos 3 has been reserved for CPU-generated traffic)
    #
    # 802.1p values = {0..7}
    #traffic.cos_0.priority_remark.8021p = [0]
    #traffic.cos_1.priority_remark.8021p = [1]
    #traffic.cos_2.priority_remark.8021p = [2]
    #traffic.cos_3.priority_remark.8021p = [3]
    #traffic.cos_4.priority_remark.8021p = [4]
    #traffic.cos_5.priority_remark.8021p = [5]
    #traffic.cos_6.priority_remark.8021p = [6]
    #traffic.cos_7.priority_remark.8021p = [7]

    # dscp values = {0..63}
    #traffic.cos_0.priority_remark.dscp = [0]
    #traffic.cos_1.priority_remark.dscp = [8]
    #traffic.cos_2.priority_remark.dscp = [16]
    #traffic.cos_3.priority_remark.dscp = [24]
    #traffic.cos_4.priority_remark.dscp = [32]
    #traffic.cos_5.priority_remark.dscp = [40]
    #traffic.cos_6.priority_remark.dscp = [48]
    #traffic.cos_7.priority_remark.dscp = [56]

    # source.port_group_list = [source_port_group]
    # source.source_port_group.packet_priority_source_set = [dscp]
    # source.source_port_group.port_set = swp1-swp4,swp6
    # source.source_port_group.cos_0.priority_source.dscp = [0,1,2,3,4,5,6,7]
    # source.source_port_group.cos_1.priority_source.dscp = [8,9,10,11,12,13,14,15]
    # source.source_port_group.cos_2.priority_source.dscp = [16,17,18,19,20,21,22,23]
    # source.source_port_group.cos_3.priority_source.dscp = [24,25,26,27,28,29,30,31]
    # source.source_port_group.cos_4.priority_source.dscp = [32,33,34,35,36,37,38,39]
    # source.source_port_group.cos_5.priority_source.dscp = [40,41,42,43,44,45,46,47]
    # source.source_port_group.cos_6.priority_source.dscp = [48,49,50,51,52,53,54,55]
    # source.source_port_group.cos_7.priority_source.dscp = [56,57,58,59,60,61,62,63]

    # remark.port_group_list = [remark_port_group]
    # remark.remark_port_group.packet_priority_remark_set = [dscp]
    # remark.remark_port_group.port_set = swp1-swp4,swp6
    # remark.remark_port_group.cos_0.priority_remark.dscp = [0]
    # remark.remark_port_group.cos_1.priority_remark.dscp = [8]
    # remark.remark_port_group.cos_2.priority_remark.dscp = [16]
    # remark.remark_port_group.cos_3.priority_remark.dscp = [24]
    # remark.remark_port_group.cos_4.priority_remark.dscp = [32]
    # remark.remark_port_group.cos_5.priority_remark.dscp = [40]
    # remark.remark_port_group.cos_6.priority_remark.dscp = [48]
    # remark.remark_port_group.cos_7.priority_remark.dscp = [56]

    # priority groups
    #traffic.priority_group_list = [control, service, bulk]
    traffic.priority_group_list = [network, heartbeats, goodbulk, badbulk]
    # internal cos values assigned to each priority group
    # each cos value should be assigned exactly once
    # internal cos values {0..7}
    priority_group.network.cos_list = [6,7]
    priority_group.heartbeats.cos_list = [0,3,5]
    priority_group.goodbulk.cos_list = [4]
    priority_group.badbulk.cos_list = [1,2]

    # to configure priority flow control on a group of ports:
    # -- assign cos value(s) to the cos list
    # -- add or replace a port group names in the port group list
    # -- for each port group in the list
    #    -- populate the port set, e.g.
    #       swp1-swp4,swp8,swp50s0-swp50s3
    #    -- set a PFC buffer size in bytes for each port in the group
    #    -- set the xoff byte limit (buffer limit that triggers PFC frames transmit to start)
    #    -- set the xon byte delta (buffer limit that triggers PFC frames transmit to stop)
    #    -- enable PFC frame transmit and/or PFC frame receive

    # priority flow control
    # pfc.port_group_list = [pfc_port_group]
    # pfc.pfc_port_group.cos_list = []
    # pfc.pfc_port_group.port_set = swp1-swp4,swp6
    # pfc.pfc_port_group.port_buffer_bytes = 25000
    # pfc.pfc_port_group.xoff_size = 10000
    # pfc.pfc_port_group.xon_delta = 2000
    # pfc.pfc_port_group.tx_enable = true
    # pfc.pfc_port_group.rx_enable = true

    # to configure pause on a group of ports:
    # -- add or replace port group names in the port group list
    # -- for each port group in the list
    #    -- populate the port set, e.g.
    #       swp1-swp4,swp8,swp50s0-swp50s3
    #    -- set a pause buffer size in bytes for each port
    #    -- set the xoff byte limit (buffer limit that triggers pause frames transmit to start)
    #    -- set the xon byte delta (buffer limit that triggers pause frames transmit to stop)
    #    -- enable pause frame transmit and/or pause frame receive

    # link pause
    # link_pause.port_group_list = [pause_port_group]
    # link_pause.pause_port_group.port_set = swp1-swp4,swp6
    # link_pause.pause_port_group.port_buffer_bytes = 25000
    # link_pause.pause_port_group.xoff_size = 10000
    # link_pause.pause_port_group.xon_delta = 2000
    # link_pause.pause_port_group.rx_enable = true
    # link_pause.pause_port_group.tx_enable = true

    # Explicit Congestion Notification
    # to configure ECN and RED on a group of ports:
    # -- add or replace port group names in the port group list
    # -- assign cos value(s) to the cos list
    # -- for each port group in the list
    #    -- populate the port set, e.g.
    #       swp1-swp4,swp8,swp50s0-swp50s3
    # -- to enable RED requires the latest traffic.conf
     ecn_red.port_group_list = [ecn_red_port_group]
     ecn_red.ecn_red_port_group.cos_list = [4,6,7]
     ecn_red.ecn_red_port_group.port_set = swp1-swp56
     ecn_red.ecn_red_port_group.ecn_enable = true
     ecn_red.ecn_red_port_group.red_enable = false
     ecn_red.ecn_red_port_group.min_threshold_bytes = 100000
     ecn_red.ecn_red_port_group.max_threshold_bytes = 1000000
     ecn_red.ecn_red_port_group.probability = 100

    # scheduling algorithm: algorithm values = {dwrr}
    scheduling.algorithm = dwrr

    # traffic group scheduling weight
    # weight values = {0..127}
    # '0' indicates strict priority
    priority_group.network.weight = 0
    priority_group.heartbeats.weight = 15
    priority_group.goodbulk.weight = 50
    priority_group.badbulk.weight = 25

    # To turn on/off Denial of service (DOS) prevention checks
    dos_enable = false

    # Cut-through is disabled by default on all chips with the exception of
    # Spectrum.  On Spectrum cut-through cannot be disabled.
    #cut_through_enable = false

    # Enable resilient hashing
    #resilient_hash_enable = FALSE

    # Resilient hashing flowset entries per ECMP group
    # Valid values - 64, 128, 256, 512, 1024
    #resilient_hash_entries_ecmp = 128

    # Enable symmetric hashing
    #symmetric_hash_enable = TRUE

    # Set sflow/sample ingress cpu packet rate and burst in packets/sec
    # Values: {0..16384}
    #sflow.rate = 16384
    #sflow.burst = 16384

    #Specify the maximum number of paths per route entry.
    #  Maximum paths supported is 200.
    #  Default value 0 takes the number of physical ports as the max path size.
    #ecmp_max_paths = 0

    #Specify the hash seed for Equal cost multipath entries
    # Default value 0
    # Value Rang: {0..4294967295}
    #ecmp_hash_seed = 42

    # Specify the forwarding table resource allocation profile, applicable
    # only on platforms that support universal forwarding resources.
    #
    # /usr/cumulus/sbin/cl-resource-query reports the allocated table sizes
    # based on the profile setting.
    #
    #   Values: one of {'default', 'l2-heavy', 'v4-lpm-heavy', 'v6-lpm-heavy',
    #                   'ipmc-heavy'}
    #   Default value: 'default'
    #   Note: some devices may support more modes, please consult user
    #         guide for more details
    #
    #forwarding_table.profile = default
  /etc/cumulus/ports.conf: |
    1=25G
    2=25G
    3=25G
    4=25G
    5=25G
    6=25G
    7=25G
    8=25G
    9=25G
    10=25G
    11=25G
    12=25G
    13=25G
    14=25G
    15=25G
    16=25G
    17=25G
    18=25G
    19=25G
    20=25G
    21=25G
    22=25G
    23=25G
    24=25G
    25=25G
    26=25G
    27=25G
    28=25G
    29=25G
    30=25G
    31=25G
    32=25G
    33=25G
    34=25G
    35=25G
    36=25G
    37=25G
    38=25G
    39=25G
    40=25G
    41=25G
    42=25G
    43=25G
    44=25G
    45=25G
    46=25G
    47=25G
    48=25G
    49=100G
    50=100G
    51=100G
    52=100G
    53=100G
    54=100G
    55=100G
    56=100G
  /etc/frr/frr.conf: "frr defaults datacenter\nusername cumulus nopassword\n!\nservice\
    \ integrated-vtysh-config\n!\nlog syslog\n!\nlog timestamp precision 6\n!\n\n\
    hostname lab-vla-1s2.yndx.net\n!\nipv6 route 2a02:6b8:c20:200::/64 fe80::a:0 vlan688\n\
    ipv6 route 2a02:6b8:c20:201::/64 fe80::a:1 vlan688\nipv6 route 2a02:6b8:c20:202::/64\
    \ fe80::a:2 vlan688\nipv6 route 2a02:6b8:c20:203::/64 fe80::a:3 vlan688\nipv6\
    \ route 2a02:6b8:c20:204::/64 fe80::a:4 vlan688\nipv6 route 2a02:6b8:c20:205::/64\
    \ fe80::a:5 vlan688\nipv6 route 2a02:6b8:c20:206::/64 fe80::a:6 vlan688\nipv6\
    \ route 2a02:6b8:c20:207::/64 fe80::a:7 vlan688\nipv6 route 2a02:6b8:c20:208::/64\
    \ fe80::a:8 vlan688\nipv6 route 2a02:6b8:c20:209::/64 fe80::a:9 vlan688\nipv6\
    \ route 2a02:6b8:c20:20a::/64 fe80::a:a vlan688\nipv6 route 2a02:6b8:c20:20b::/64\
    \ fe80::a:b vlan688\nipv6 route 2a02:6b8:c20:20c::/64 fe80::a:c vlan688\nipv6\
    \ route 2a02:6b8:c20:20d::/64 fe80::a:d vlan688\nipv6 route 2a02:6b8:c20:20e::/64\
    \ fe80::a:e vlan688\nipv6 route 2a02:6b8:c20:20f::/64 fe80::a:f vlan688\nipv6\
    \ route 2a02:6b8:c20:210::/64 fe80::a:10 vlan688\nipv6 route 2a02:6b8:c20:211::/64\
    \ fe80::a:11 vlan688\nipv6 route 2a02:6b8:c20:212::/64 fe80::a:12 vlan688\nipv6\
    \ route 2a02:6b8:c20:213::/64 fe80::a:13 vlan688\nipv6 route 2a02:6b8:c20:214::/64\
    \ fe80::a:14 vlan688\nipv6 route 2a02:6b8:c20:215::/64 fe80::a:15 vlan688\nipv6\
    \ route 2a02:6b8:c20:216::/64 fe80::a:16 vlan688\nipv6 route 2a02:6b8:c20:217::/64\
    \ fe80::a:17 vlan688\nipv6 route 2a02:6b8:c20:218::/64 fe80::a:18 vlan688\nipv6\
    \ route 2a02:6b8:c20:219::/64 fe80::a:19 vlan688\nipv6 route 2a02:6b8:c20:21a::/64\
    \ fe80::a:1a vlan688\nipv6 route 2a02:6b8:c20:21b::/64 fe80::a:1b vlan688\nipv6\
    \ route 2a02:6b8:c20:21c::/64 fe80::a:1c vlan688\nipv6 route 2a02:6b8:c20:21d::/64\
    \ fe80::a:1d vlan688\nipv6 route 2a02:6b8:c20:21e::/64 fe80::a:1e vlan688\nipv6\
    \ route 2a02:6b8:c20:21f::/64 fe80::a:1f vlan688\nipv6 route 2a02:6b8:c20:220::/64\
    \ fe80::a:20 vlan688\nipv6 route 2a02:6b8:c20:221::/64 fe80::a:21 vlan688\nipv6\
    \ route 2a02:6b8:c20:222::/64 fe80::a:22 vlan688\nipv6 route 2a02:6b8:c20:223::/64\
    \ fe80::a:23 vlan688\nipv6 route 2a02:6b8:c20:224::/64 fe80::a:24 vlan688\nipv6\
    \ route 2a02:6b8:c20:225::/64 fe80::a:25 vlan688\nipv6 route 2a02:6b8:c20:226::/64\
    \ fe80::a:26 vlan688\nipv6 route 2a02:6b8:c20:227::/64 fe80::a:27 vlan688\nipv6\
    \ route 2a02:6b8:c20:228::/64 fe80::a:28 vlan688\nipv6 route 2a02:6b8:c20:229::/64\
    \ fe80::a:29 vlan688\nipv6 route 2a02:6b8:c20:22a::/64 fe80::a:2a vlan688\nipv6\
    \ route 2a02:6b8:c20:22b::/64 fe80::a:2b vlan688\nipv6 route 2a02:6b8:c20:22c::/64\
    \ fe80::a:2c vlan688\nipv6 route 2a02:6b8:c20:22d::/64 fe80::a:2d vlan688\nipv6\
    \ route 2a02:6b8:c20:22e::/64 fe80::a:2e vlan688\nipv6 route 2a02:6b8:c20:22f::/64\
    \ fe80::a:2f vlan688\nipv6 route 2a02:6b8:fc20:200::/64 fe80::a:0 vlan788\nipv6\
    \ route 2a02:6b8:fc20:201::/64 fe80::a:1 vlan788\nipv6 route 2a02:6b8:fc20:202::/64\
    \ fe80::a:2 vlan788\nipv6 route 2a02:6b8:fc20:203::/64 fe80::a:3 vlan788\nipv6\
    \ route 2a02:6b8:fc20:204::/64 fe80::a:4 vlan788\nipv6 route 2a02:6b8:fc20:205::/64\
    \ fe80::a:5 vlan788\nipv6 route 2a02:6b8:fc20:206::/64 fe80::a:6 vlan788\nipv6\
    \ route 2a02:6b8:fc20:207::/64 fe80::a:7 vlan788\nipv6 route 2a02:6b8:fc20:208::/64\
    \ fe80::a:8 vlan788\nipv6 route 2a02:6b8:fc20:209::/64 fe80::a:9 vlan788\nipv6\
    \ route 2a02:6b8:fc20:20a::/64 fe80::a:a vlan788\nipv6 route 2a02:6b8:fc20:20b::/64\
    \ fe80::a:b vlan788\nipv6 route 2a02:6b8:fc20:20c::/64 fe80::a:c vlan788\nipv6\
    \ route 2a02:6b8:fc20:20d::/64 fe80::a:d vlan788\nipv6 route 2a02:6b8:fc20:20e::/64\
    \ fe80::a:e vlan788\nipv6 route 2a02:6b8:fc20:20f::/64 fe80::a:f vlan788\nipv6\
    \ route 2a02:6b8:fc20:210::/64 fe80::a:10 vlan788\nipv6 route 2a02:6b8:fc20:211::/64\
    \ fe80::a:11 vlan788\nipv6 route 2a02:6b8:fc20:212::/64 fe80::a:12 vlan788\nipv6\
    \ route 2a02:6b8:fc20:213::/64 fe80::a:13 vlan788\nipv6 route 2a02:6b8:fc20:214::/64\
    \ fe80::a:14 vlan788\nipv6 route 2a02:6b8:fc20:215::/64 fe80::a:15 vlan788\nipv6\
    \ route 2a02:6b8:fc20:216::/64 fe80::a:16 vlan788\nipv6 route 2a02:6b8:fc20:217::/64\
    \ fe80::a:17 vlan788\nipv6 route 2a02:6b8:fc20:218::/64 fe80::a:18 vlan788\nipv6\
    \ route 2a02:6b8:fc20:219::/64 fe80::a:19 vlan788\nipv6 route 2a02:6b8:fc20:21a::/64\
    \ fe80::a:1a vlan788\nipv6 route 2a02:6b8:fc20:21b::/64 fe80::a:1b vlan788\nipv6\
    \ route 2a02:6b8:fc20:21c::/64 fe80::a:1c vlan788\nipv6 route 2a02:6b8:fc20:21d::/64\
    \ fe80::a:1d vlan788\nipv6 route 2a02:6b8:fc20:21e::/64 fe80::a:1e vlan788\nipv6\
    \ route 2a02:6b8:fc20:21f::/64 fe80::a:1f vlan788\nipv6 route 2a02:6b8:fc20:220::/64\
    \ fe80::a:20 vlan788\nipv6 route 2a02:6b8:fc20:221::/64 fe80::a:21 vlan788\nipv6\
    \ route 2a02:6b8:fc20:222::/64 fe80::a:22 vlan788\nipv6 route 2a02:6b8:fc20:223::/64\
    \ fe80::a:23 vlan788\nipv6 route 2a02:6b8:fc20:224::/64 fe80::a:24 vlan788\nipv6\
    \ route 2a02:6b8:fc20:225::/64 fe80::a:25 vlan788\nipv6 route 2a02:6b8:fc20:226::/64\
    \ fe80::a:26 vlan788\nipv6 route 2a02:6b8:fc20:227::/64 fe80::a:27 vlan788\nipv6\
    \ route 2a02:6b8:fc20:228::/64 fe80::a:28 vlan788\nipv6 route 2a02:6b8:fc20:229::/64\
    \ fe80::a:29 vlan788\nipv6 route 2a02:6b8:fc20:22a::/64 fe80::a:2a vlan788\nipv6\
    \ route 2a02:6b8:fc20:22b::/64 fe80::a:2b vlan788\nipv6 route 2a02:6b8:fc20:22c::/64\
    \ fe80::a:2c vlan788\nipv6 route 2a02:6b8:fc20:22d::/64 fe80::a:2d vlan788\nipv6\
    \ route 2a02:6b8:fc20:22e::/64 fe80::a:2e vlan788\nipv6 route 2a02:6b8:fc20:22f::/64\
    \ fe80::a:2f vlan788\n!\ninterface vlan333\n ipv6 nd mtu 9000\n ipv6 nd prefix\
    \ 2a02:6b8:c0e:1004::/64\n ipv6 nd other-config-flag\n ipv6 nd ra-interval 10\n\
    \ ipv6 nd ra-lifetime 1800\n no ipv6 nd suppress-ra\n!\ninterface vlan688\n ipv6\
    \ nd mtu 9000\n ipv6 nd prefix 2a02:6b8:c20:200::/57 no-autoconfig\n ipv6 nd ra-interval\
    \ 10\n ipv6 nd ra-lifetime 1800\n no ipv6 nd suppress-ra\n!\ninterface vlan700\n\
    \ ipv6 nd mtu 9000\n ipv6 nd prefix 2a02:6b8:fc09:1004::/64 no-autoconfig\n ipv6\
    \ nd ra-interval 10\n ipv6 nd ra-lifetime 0\n no ipv6 nd suppress-ra\n!\ninterface\
    \ vlan788\n ipv6 nd mtu 9000\n ipv6 nd prefix 2a02:6b8:fc20:200::/57 no-autoconfig\n\
    \ ipv6 nd ra-interval 10\n ipv6 nd ra-lifetime 0\n no ipv6 nd suppress-ra\n!\n\
    !\n!!! ASN: 65100.64002\nrouter bgp 4266457602 \n bgp router-id 172.24.213.101\n\
    \ no bgp default ipv4-unicast\n bgp bestpath as-path multipath-relax\n neighbor\
    \ S1 peer-group\n neighbor S1 timers 60 3600\n neighbor fe80::1:c1 peer-group\
    \ S1\n!!! ASN: 65100.65001\n neighbor fe80::1:c1 remote-as 4266458601\n neighbor\
    \ fe80::1:c1 interface swp49\n neighbor S1 bfd 4 500 500\n neighbor fe80::1:c2\
    \ peer-group S1\n!!! ASN: 65100.65001\n neighbor fe80::1:c2 remote-as 4266458601\n\
    \ neighbor fe80::1:c2 interface swp50\n neighbor S1 bfd 4 500 500\n !\n address-family\
    \ ipv6 unicast\n  neighbor S1 activate\n  neighbor S1 route-map TOR_IMPORT_S1\
    \ in\n  neighbor S1 route-map TOR_EXPORT_S1 out\n  maximum-paths 64\n  redistribute\
    \ connected route-map IMPORT_DIRECT\n  maximum-paths 64\n exit-address-family\n\
    !\n!\nip community-list standard DONT_ANNOUNCE_COMMUNITY permit 13238:999\n!\n\
    ip community-list standard GSHUT_COMMUNITY permit 65535:0\n!\n!\nroute-map IMPORT_DIRECT\
    \ permit 3330\n match interface vlan333\n set community 13238:3099\n!\nroute-map\
    \ IMPORT_DIRECT permit 6880\n match interface vlan688\n set community 13238:3099\n\
    !\nroute-map IMPORT_DIRECT permit 7000\n match interface vlan700\n set community\
    \ 13238:3098\n!\nroute-map IMPORT_DIRECT permit 7880\n match interface vlan788\n\
    \ set community 13238:3098\n!\n!\nroute-map TOR_EXPORT_S1 deny 10\n match community\
    \ DONT_ANNOUNCE_COMMUNITY\n!\nroute-map TOR_EXPORT_S1 permit 20\n!\n!\nroute-map\
    \ TOR_IMPORT_S1 permit 10\n match community GSHUT_COMMUNITY\n set community 13238:999\
    \ additive\n set local-preference 0\n!\nroute-map TOR_IMPORT_S1 permit 20\n set\
    \ community 13238:999 additive\n set local-preference 100\n!\n!\nline vty\n!\n"
  /etc/network/interfaces: |+
    # This file describes the network interfaces available on your system
    # and how to activate them. For more information, see interfaces(5).

    source /etc/network/interfaces.d/*.intf
    auto lo
    iface lo inet loopback


    auto dummy0
    iface dummy0
        bridge-access 999
        link-type dummy
        mtu 9000

    auto eth0
    iface eth0
        address 172.24.213.101/22
        gateway 172.24.215.254
        mtu 1500
        vrf mgmt

    auto mgmt
    iface mgmt
        address 127.0.0.1/8
        address ::1/128
        vrf-table auto

    auto bridge
    iface bridge
        bridge-vlan-aware yes
        bridge-pvid 999
        bridge-vids 333 688 700 788
        bridge-ports dummy0 swp1 swp2 swp3 swp4 swp5 swp6 swp7 swp8 swp9 swp10 swp11 swp12 swp13 swp14 swp15 swp16 swp17 swp18 swp19 swp20 swp21 swp22 swp23 swp24 swp25 swp26 swp27 swp28 swp29 swp30 swp31 swp32 swp33 swp34 swp35 swp36 swp37 swp38 swp39 swp40 swp41 swp42 swp43 swp44 swp45 swp46 swp47 swp48


    auto swp1
    iface swp1
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp2
    iface swp2
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp3
    iface swp3
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp4
    iface swp4
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp5
    iface swp5
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp6
    iface swp6
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp7
    iface swp7
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp8
    iface swp8
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp9
    iface swp9
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp10
    iface swp10
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp11
    iface swp11
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp12
    iface swp12
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp13
    iface swp13
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp14
    iface swp14
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp15
    iface swp15
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp16
    iface swp16
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp17
    iface swp17
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp18
    iface swp18
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp19
    iface swp19
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp20
    iface swp20
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp21
    iface swp21
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp22
    iface swp22
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp23
    iface swp23
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp24
    iface swp24
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp25
    iface swp25
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp26
    iface swp26
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp27
    iface swp27
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp28
    iface swp28
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp29
    iface swp29
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp30
    iface swp30
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp31
    iface swp31
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp32
    iface swp32
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp33
    iface swp33
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp34
    iface swp34
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp35
    iface swp35
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp36
    iface swp36
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp37
    iface swp37
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp38
    iface swp38
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp39
    iface swp39
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp40
    iface swp40
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp41
    iface swp41
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp42
    iface swp42
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp43
    iface swp43
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp44
    iface swp44
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp45
    iface swp45
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp46
    iface swp46
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp47
    iface swp47
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788

    auto swp48
    iface swp48
        link-autoneg off
        link-speed 10000
        mstpctl-bpduguard yes
        mstpctl-portadminedge yes
        mtu 9000
        bridge-pvid 333
        bridge-vids 688 700 788


    auto swp49
    iface swp49
        mtu 9000

    auto swp50
    iface swp50
        mtu 9000


    auto vlan333
    iface vlan333
        address 2a02:6b8:c0e:1004::1/64
        address fe80::1/64
        mtu 9000
        vlan-id 333
        vlan-raw-device bridge
        ipv6-addrgen off
        post-up dhcrelay6_ctl.py -i vlan333 start 2a02:6b8:0:3400::5004
        pre-down dhcrelay6_ctl.py -i vlan333 stop

    auto vlan688
    iface vlan688
        address 2a02:6b8:c20:200::1/57
        address fe80::1/64
        mtu 9000
        vlan-id 688
        vlan-raw-device bridge
        ipv6-addrgen off

    auto vlan700
    iface vlan700
        address 2a02:6b8:fc09:1004::1/64
        address fe80::1/64
        mtu 9000
        vlan-id 700
        vlan-raw-device bridge
        ipv6-addrgen off

    auto vlan788
    iface vlan788
        address 2a02:6b8:fc20:200::1/57
        address fe80::1/64
        mtu 9000
        vlan-id 788
        vlan-raw-device bridge
        ipv6-addrgen off


    auto swp49
    iface swp49
        address fe80::e2:d1/64
        mtu 9000
        ipv6-addrgen off

    auto swp50
    iface swp50
        address fe80::e2:d2/64
        mtu 9000
        ipv6-addrgen off


    auto swp51
    iface swp51
        mtu 9000

    auto swp52
    iface swp52
        mtu 9000

    auto swp53
    iface swp53
        mtu 9000

    auto swp54
    iface swp54
        mtu 9000

    auto swp55
    iface swp55
        mtu 9000

    auto swp56
    iface swp56
        mtu 9000

  /etc/snmp/snmpd.conf: "# sec.name\tsource\t\t\tcommunity\ncom2sec  mynet 95.108.132.157\
    \                          aish117      # ceto\ncom2sec6 mynet 2a02:6b8:0:1608::82c1:3e7d\
    \              aish117      # ceto\ncom2sec  mynet 93.158.168.133            \
    \              aish117      # harybdis\ncom2sec6 mynet 2a02:6b8:0:c01a::54c9:b8c9\
    \              aish117      # harybdis\ncom2sec  mynet 95.108.132.129        \
    \                  aish117      # iva-b-cacti\ncom2sec6 mynet 2a02:6b8:0:823::5f6c:849e\
    \               aish117      # iva-b-cacti\ncom2sec  mynet 95.108.133.81     \
    \                      znoc         # iva-b-grad1\ncom2sec6 mynet 2a02:6b8:b010:50a4::81\
    \                  znoc         # iva-b-grad1\ncom2sec  mynet 95.108.133.82  \
    \                         znoc         # iva-b-grad2\ncom2sec6 mynet 2a02:6b8:b010:50a4:225:90ff:fee3:ce8d\
    \   znoc         # iva-b-grad2\ncom2sec  mynet 127.0.0.1                     \
    \          monitor      # localhost\ncom2sec  mynet 127.0.0.1                \
    \               znoc         # localhost_znoc\ncom2sec6 mynet 2a02:6b8:b011:6407:e61d:2dff:fe01:fa20\
    \  racktables   # man1-rt1\ncom2sec  mynet 5.45.222.203                      \
    \      znoc         # mar-test1\ncom2sec6 mynet 2a02:6b8:0:2b10::203         \
    \           znoc         # mar-test1\ncom2sec  mynet 87.250.243.140          \
    \                znoc         # myt-grad1\ncom2sec6 mynet 2a02:6b8:b010:7012::2000\
    \                znoc         # myt-grad1\ncom2sec  mynet 95.108.248.129     \
    \                     aish117      # mytinfra-cacti\ncom2sec6 mynet 2a02:6b8:b010:e011::5f6c:f881\
    \           aish117      # mytinfra-cacti\ncom2sec  mynet 93.158.158.84      \
    \                     znoc         # noc-jump\ncom2sec6 mynet 2a02:6b8:b010:31::1000\
    \                  znoc         # noc-jump\ncom2sec  mynet 93.158.158.81     \
    \                      znoc         # noc-jumper\ncom2sec6 mynet 2a02:6b8:b010:31::81\
    \                    znoc         # noc-jumper\ncom2sec  mynet 77.88.1.117   \
    \                          racktables   # noc-myt\ncom2sec6 mynet 2a02:6b8:0:1482::100\
    \                    racktables   # noc-myt\ncom2sec  mynet 93.158.158.93    \
    \                       racktables   # noc-sas\ncom2sec6 mynet 2a02:6b8:b010:31::100\
    \                   racktables   # noc-sas\ncom2sec  mynet 87.250.232.33     \
    \                      znoc         # plumbum\ncom2sec6 mynet 2a02:6b8:b010:8009::21\
    \                  znoc         # plumbum\ncom2sec6 mynet 2a02:6b8:0:1423:225:90ff:fee4:2bb0\
    \      znoc         # portugal\ncom2sec  mynet 213.180.215.13                \
    \          znoc         # portugal\ncom2sec  mynet 87.250.232.36             \
    \              znoc         # red1-zbx1\ncom2sec6 mynet 2a02:6b8:b010:8009::19\
    \                  znoc         # red1-zbx1\ncom2sec  mynet 87.250.232.35    \
    \                       znoc         # red1-zbxdb1\ncom2sec6 mynet 2a02:6b8:b010:8009::20\
    \                  znoc         # red1-zbxdb1\ncom2sec  mynet 37.9.68.107    \
    \                         znoc         # sas-test-grad1.net\ncom2sec6 mynet 2a02:6b8:b010:88:216:3eff:fec9:1640\
    \     znoc         # sas-test-grad1.net\ncom2sec  mynet 5.255.214.115        \
    \                   aish117      # sas1-cacti\ncom2sec6 mynet 2a02:6b8:0:1a43::5ff:d673\
    \               aish117      # sas1-cacti\ncom2sec  mynet 37.9.68.100        \
    \                     znoc         # sas1-grad1\ncom2sec6 mynet 2a02:6b8:b010:88::101\
    \                   znoc         # sas1-grad1\ncom2sec  mynet 37.9.68.102    \
    \                         znoc         # sas1-grad2\ncom2sec6 mynet 2a02:6b8:b010:88::201\
    \                   znoc         # sas1-grad2\ncom2sec  mynet 87.250.232.34  \
    \                         aish117      # skylla\ncom2sec6 mynet 2a02:6b8:b010:8009::3\
    \                   aish117      # skylla\ncom2sec  mynet 93.158.169.11      \
    \                     znoc         # vla1-grad1\ncom2sec6 mynet 2a02:6b8:0:c012::10\
    \                     znoc         # vla1-grad1\n\n\ngroup mygroup v2c       \
    \ mynet\n\n# incl/excl subtree            mask\n\nview default-ro included .1.3.6.1.2.1.1\n\
    view default-ro included .1.3.6.1.2.1.2\nview default-ro included .1.3.6.1.2.1.5\n\
    view default-ro included .1.3.6.1.2.1.25.1.6.0\nview default-ro included .1.3.6.1.2.1.31.1.1.1\n\
    view default-ro included .1.3.6.1.4.1.2021.9.1\nview default-ro included .1.3.6.1.4.1.2021.10.1.3\n\
    view default-ro included .1.3.6.1.4.1.2021.11\nview default-ro included .1.3.6.1.4.1.2021.13.15\n\
    view default-ro included .1.3.6.1.4.1.8072.2.1.2\nview default-ro included .1.3.6.1.2.1.25.2.3\n\
    view default-ro included .1.3.6.1.4.1.11069.320.767\n\n\n\n\npass_persist 1.3.6.1.4.1.11069.320.767\
    \ /usr/share/snmpd-plug/snmpd_ethtool.py\n\n\npass_persist 1.3.6.1.2.1.2.2.1.2\
    \ /usr/share/snmp/snmpifDesc_pp.py\n\n\npass_persist 1.2.840.10006.300.43 /usr/share/snmp/ieee8023_lag_pp.py\n\
    \n\npass_persist 1.3.6.1.2.1.17 /usr/share/snmp/bridge_pp.py\n\n\npass_persist\
    \ 1.3.6.1.2.1.31.1.1.1.18 /usr/share/snmp/snmpifAlias_pp.py\n\n\npass_persist\
    \ 1.3.6.1.2.1.47 /usr/share/snmp/entity_pp.py\n\n\npass_persist 1.3.6.1.2.1.99\
    \ /usr/share/snmp/entity_sensor_pp.py\n\n\npass_persist 1.3.6.1.4.1.40310.1 /usr/share/snmp/resq_pp.py\n\
    \n\npass_persist 1.3.6.1.4.1.40310.2 /usr/share/snmp/cl_drop_cntrs_pp.py\n\n\n\
    pass_persist 1.3.6.1.4.1.40310.3 /usr/share/snmp/cl_poe_pp.py\n\n\npass_persist\
    \ 1.3.6.1.4.1.13238.2 /usr/share/snmp/cfglisterAudit_pp.py\n\n\n\n\npass -p 10\
    \ 1.3.6.1.2.1.1.1 /usr/share/snmp/sysDescr_pass.py\n\n\n\n# context\tsec.model\t\
    sec.level\tprefix\tread\t\twrite\tnotify\naccess mygroup\t\"\"\tany\t\tnoauth\t\
    \texact\tdefault-ro\tnone\tnone\n\nsyslocation Yandex\nsyscontact noc@yandex.net\n\
    \nincludeAllDisks 7%\n\nload 12 14 14\n\nmaster  agentx\nagentXPerms 775 750 root\
    \ monitor\nagentaddress udp:161,udp6:161\nagentxsocket /var/agentx/master\ncreateuser\
    \ _snmptrapusernameX\niquerysecname _snmptrapusernameX\nrouser _snmptrapusernameX\n\
    trap2sink 77.88.1.117 TzVZ8\ntrap2sink 93.158.158.93 TzVZ8\nmonitor -r 60 -o laNames\
    \ -o laErrMessage \"laTable\" laErrorFlag != 0\nnotificationEvent cfglisterTrap\
    \ .1.3.6.1.4.1.13238.1.1 -i 1.3.6.1.4.1.13238.2.1 -i 1.3.6.1.4.1.13238.2.2\nmonitor\
    \ -I -S -r 1 -e cfglisterTrap \"cfglisterTrap\" != 1.3.6.1.4.1.13238.2.2\n"
  /etc/sx_ecmp_hash/sx_ecmp_hash.json: |
    {
        "router_port_hash": {
            "all": {
                "hash_params": {
                    "hash_type": "SX_ROUTER_ECMP_HASH_TYPE_CRC",
                    "symmetric_hash": true,
                    "seed": 98335671
                },
                "hash_fields_enable": [
                    "SX_ROUTER_ECMP_HASH_FIELD_ENABLE_OUTER_L2_NON_IP",
                    "SX_ROUTER_ECMP_HASH_FIELD_ENABLE_OUTER_L2_IPV4",
                    "SX_ROUTER_ECMP_HASH_FIELD_ENABLE_OUTER_L2_IPV6",
                    "SX_ROUTER_ECMP_HASH_FIELD_ENABLE_OUTER_IPV4_NON_TCP_UDP",
                    "SX_ROUTER_ECMP_HASH_FIELD_ENABLE_OUTER_IPV4_TCP_UDP",
                    "SX_ROUTER_ECMP_HASH_FIELD_ENABLE_OUTER_IPV6_NON_TCP_UDP",
                    "SX_ROUTER_ECMP_HASH_FIELD_ENABLE_OUTER_IPV6_TCP_UDP",
                    "SX_ROUTER_ECMP_HASH_FIELD_ENABLE_OUTER_L4_IPV4",
                    "SX_ROUTER_ECMP_HASH_FIELD_ENABLE_OUTER_L4_IPV6",
                    "SX_ROUTER_ECMP_HASH_FIELD_ENABLE_INNER_L2_IPV4",
                    "SX_ROUTER_ECMP_HASH_FIELD_ENABLE_INNER_L2_IPV6",
                    "SX_ROUTER_ECMP_HASH_FIELD_ENABLE_INNER_IPV4_NON_TCP_UDP",
                    "SX_ROUTER_ECMP_HASH_FIELD_ENABLE_INNER_IPV4_TCP_UDP",
                    "SX_ROUTER_ECMP_HASH_FIELD_ENABLE_INNER_IPV6_NON_TCP_UDP",
                    "SX_ROUTER_ECMP_HASH_FIELD_ENABLE_INNER_IPV6_TCP_UDP",
                    "SX_ROUTER_ECMP_HASH_FIELD_ENABLE_INNER_L4_IPV4",
                    "SX_ROUTER_ECMP_HASH_FIELD_ENABLE_INNER_L4_IPV6"
                ],
                "hash_fields": [
                    "SX_ROUTER_ECMP_HASH_OUTER_IPV4_PROTOCOL",
                    "SX_ROUTER_ECMP_HASH_OUTER_IPV6_NEXT_HEADER",
                    "SX_ROUTER_ECMP_HASH_OUTER_IPV4_SIP_BYTE_0",
                    "SX_ROUTER_ECMP_HASH_OUTER_IPV4_SIP_BYTE_1",
                    "SX_ROUTER_ECMP_HASH_OUTER_IPV4_SIP_BYTE_2",
                    "SX_ROUTER_ECMP_HASH_OUTER_IPV4_SIP_BYTE_3",
                    "SX_ROUTER_ECMP_HASH_OUTER_IPV6_SIP_BYTES_0_TO_7",
                    "SX_ROUTER_ECMP_HASH_OUTER_IPV6_SIP_BYTE_8",
                    "SX_ROUTER_ECMP_HASH_OUTER_IPV6_SIP_BYTE_9",
                    "SX_ROUTER_ECMP_HASH_OUTER_IPV6_SIP_BYTE_10",
                    "SX_ROUTER_ECMP_HASH_OUTER_IPV6_SIP_BYTE_11",
                    "SX_ROUTER_ECMP_HASH_OUTER_IPV6_SIP_BYTE_12",
                    "SX_ROUTER_ECMP_HASH_OUTER_IPV6_SIP_BYTE_13",
                    "SX_ROUTER_ECMP_HASH_OUTER_IPV6_SIP_BYTE_14",
                    "SX_ROUTER_ECMP_HASH_OUTER_IPV6_SIP_BYTE_15",
                    "SX_ROUTER_ECMP_HASH_OUTER_IPV4_DIP_BYTE_0",
                    "SX_ROUTER_ECMP_HASH_OUTER_IPV4_DIP_BYTE_1",
                    "SX_ROUTER_ECMP_HASH_OUTER_IPV4_DIP_BYTE_2",
                    "SX_ROUTER_ECMP_HASH_OUTER_IPV4_DIP_BYTE_3",
                    "SX_ROUTER_ECMP_HASH_OUTER_IPV6_DIP_BYTES_0_TO_7",
                    "SX_ROUTER_ECMP_HASH_OUTER_IPV6_DIP_BYTE_8",
                    "SX_ROUTER_ECMP_HASH_OUTER_IPV6_DIP_BYTE_9",
                    "SX_ROUTER_ECMP_HASH_OUTER_IPV6_DIP_BYTE_10",
                    "SX_ROUTER_ECMP_HASH_OUTER_IPV6_DIP_BYTE_11",
                    "SX_ROUTER_ECMP_HASH_OUTER_IPV6_DIP_BYTE_12",
                    "SX_ROUTER_ECMP_HASH_OUTER_IPV6_DIP_BYTE_13",
                    "SX_ROUTER_ECMP_HASH_OUTER_IPV6_DIP_BYTE_14",
                    "SX_ROUTER_ECMP_HASH_OUTER_IPV6_DIP_BYTE_15",
                    "SX_ROUTER_ECMP_HASH_OUTER_TCP_UDP_SPORT",
                    "SX_ROUTER_ECMP_HASH_OUTER_TCP_UDP_DPORT",
                    "SX_ROUTER_ECMP_HASH_INNER_IPV4_SIP_BYTE_0",
                    "SX_ROUTER_ECMP_HASH_INNER_IPV4_SIP_BYTE_1",
                    "SX_ROUTER_ECMP_HASH_INNER_IPV4_SIP_BYTE_2",
                    "SX_ROUTER_ECMP_HASH_INNER_IPV4_SIP_BYTE_3",
                    "SX_ROUTER_ECMP_HASH_INNER_IPV6_SIP_BYTES_0_TO_7",
                    "SX_ROUTER_ECMP_HASH_INNER_IPV6_SIP_BYTE_8",
                    "SX_ROUTER_ECMP_HASH_INNER_IPV6_SIP_BYTE_9",
                    "SX_ROUTER_ECMP_HASH_INNER_IPV6_SIP_BYTE_10",
                    "SX_ROUTER_ECMP_HASH_INNER_IPV6_SIP_BYTE_11",
                    "SX_ROUTER_ECMP_HASH_INNER_IPV6_SIP_BYTE_12",
                    "SX_ROUTER_ECMP_HASH_INNER_IPV6_SIP_BYTE_13",
                    "SX_ROUTER_ECMP_HASH_INNER_IPV6_SIP_BYTE_14",
                    "SX_ROUTER_ECMP_HASH_INNER_IPV6_SIP_BYTE_15",
                    "SX_ROUTER_ECMP_HASH_INNER_IPV4_DIP_BYTE_0",
                    "SX_ROUTER_ECMP_HASH_INNER_IPV4_DIP_BYTE_1",
                    "SX_ROUTER_ECMP_HASH_INNER_IPV4_DIP_BYTE_2",
                    "SX_ROUTER_ECMP_HASH_INNER_IPV4_DIP_BYTE_3",
                    "SX_ROUTER_ECMP_HASH_INNER_IPV6_DIP_BYTES_0_TO_7",
                    "SX_ROUTER_ECMP_HASH_INNER_IPV6_DIP_BYTE_8",
                    "SX_ROUTER_ECMP_HASH_INNER_IPV6_DIP_BYTE_9",
                    "SX_ROUTER_ECMP_HASH_INNER_IPV6_DIP_BYTE_10",
                    "SX_ROUTER_ECMP_HASH_INNER_IPV6_DIP_BYTE_11",
                    "SX_ROUTER_ECMP_HASH_INNER_IPV6_DIP_BYTE_12",
                    "SX_ROUTER_ECMP_HASH_INNER_IPV6_DIP_BYTE_13",
                    "SX_ROUTER_ECMP_HASH_INNER_IPV6_DIP_BYTE_14",
                    "SX_ROUTER_ECMP_HASH_INNER_IPV6_DIP_BYTE_15",
                    "SX_ROUTER_ECMP_HASH_INNER_TCP_UDP_SPORT",
                    "SX_ROUTER_ECMP_HASH_INNER_TCP_UDP_DPORT",
                    "SX_ROUTER_ECMP_HASH_OUTER_IPV6_FLOW_LABEL"
                ]
            }
        }
    }
  /etc/telegraf/telegraf.conf: |
    # generated by annushka

    [agent]
    collection_jitter = "4s"
    flush_interval = "10s"
    interval = "30s"
    metric_batch_size = 2000
    metric_buffer_limit = 200000
    round_interval = true


    [[inputs.cpu]]
    fielddrop = ["time_*"]
    interval = "10s"
    percpu = true
    totalcpu = true

    [[inputs.disk]]
    ignore_fs = ["tmpfs", "devtmpfs", "devfs", "overlay", "aufs", "squashfs", "cgroup", "debugfs", "mqueue"]

    [[inputs.diskio]]

    [[inputs.ethtool]]
    interface_exclude = ["dummy*", "vlan*", "swp*.*", "bridge", "Hbf", "mgmt", "ip6tnl0", "brport*"]
    interval = "120s"

    [[inputs.kernel]]

    [[inputs.mem]]

    [[inputs.net]]
    interval = "10s"

    [[inputs.processes]]

    [[inputs.procstat]]
    exe = "telegraf"
    fielddrop = ["memory_swap", "cpu_time_guest", "cpu_time_guest_nice", "cpu_time_steal", "cpu_time_stolen", "pid", "rlimit_file_locks_soft", "nice_priority", "rlimit_num_fds_hard", "rlimit_num_fds_soft", "rlimit_realtime_priority_hard", "rlimit_realtime_priority_soft", "created_at"]
    tagexclude = ["pattern", "exe"]

    [[inputs.system]]
    fielddrop = ["uptime_format"]


    [[outputs.http]]
    data_format = "json"
    timeout = "15s"
    url = "http://grad.yandex.net/send?project=noc"


    [[processors.regex]]

    [[processors.regex.tags]]
    key = "host"
    pattern = "^([\\w\\-]+)\\..+$"
    replacement = "${1}"


    [[processors.strings]]

    [[processors.strings.replace]]
    new = "_"
    old = "#"
    tag = "process_name"
  /usr/lib/python2.7/dist-packages/cumulus/__chip_config/mlx/datapath.conf: |
    #
    # Default datapath configuration for Mellanox Spectrum chip
    # Copyright 2016, 2017, Cumulus Networks, Inc.  All rights reserved.
    #

    # priority group ID assigned to each priority group
    priority_group.network.id = 0
    priority_group.heartbeats.id = 0
    priority_group.goodbulk.id = 0
    priority_group.badbulk.id = 0


    # --- ingress buffer space allocations ---
    #
    # total buffer
    #  - ingress minimum buffer allocations
    #  - ingress service pool buffer allocations
    #  - priority group ingress headroom allocations
    #  - ingress global headroom allocations
    #  = total ingress shared buffer size

    # ingress service pool buffer allocation: percent of total buffer
    # If a service pool has no priority groups, the buffer is added
    # to the shared buffer space.
    ingress_service_pool.0.percent = 90.0  # all priority groups
    ingress_service_pool.0.mode = 1 # dynamic buffering

    port.ingress_buffer.shared_percent = 0.0
    port.ingress_buffer.dynamic_quota = 11

    # priority group minimum buffer allocation: percent of total buffer cells
    # priority group shared buffer allocation: percent of total shared buffer size
    # if a priority group has no packet priority values assigned to it, the buffers will not be allocated


    priority_group.network.ingress_buffer.min_percent   = 0.0
    priority_group.network.ingress_buffer.dynamic_quota = 11

    priority_group.heartbeats.ingress_buffer.min_percent   = 0.0
    priority_group.heartbeats.ingress_buffer.dynamic_quota = 11

    priority_group.goodbulk.ingress_buffer.min_percent      = 5.0
    priority_group.goodbulk.ingress_buffer.dynamic_quota    = 11

    priority_group.badbulk.ingress_buffer.min_percent      = 0.0
    priority_group.badbulk.ingress_buffer.dynamic_quota    = 11


    # --- egress buffer space allocations ---
    #
    # total egress buffer
    #  - minimum buffer allocations
    #  = total service pool buffer size
    #
    # Service pool buffer allocation: percent of total
    # buffer size.
    egress_service_pool.0.percent = 90.0   # all priority groups, UC and MC
    egress_service_pool.0.mode = 1

    port.egress_buffer.uc.sp_percent = 0.0
    port.egress_buffer.uc.sp_dynamic_quota = 11

    # Front panel port egress buffer limits enforced for each
    # priority group.
    # Unlimited egress buffers not supported on Spectrum.
    priority_group.control.unlimited_egress_buffer  = false
    priority_group.service.unlimited_egress_buffer  = false
    priority_group.bulk.unlimited_egress_buffer     = false

    #
    # if a priority group has no cos values assigned to it, the buffers will not be allocated
    #

    # priority group minimum buffer allocation: percent of total buffer

    priority_group.network.egress_buffer.uc.min_percent      =  3.50
    priority_group.heartbeats.egress_buffer.uc.min_percent   =  3.50
    priority_group.goodbulk.egress_buffer.uc.min_percent   =  2.00
    priority_group.badbulk.egress_buffer.uc.min_percent   =  0.00

    priority_group.network.egress_buffer.mc.min_percent      =  0.00
    priority_group.heartbeats.egress_buffer.mc.min_percent   =  0.00
    priority_group.goodbulk.egress_buffer.mc.min_percent   =  0.00
    priority_group.badbulk.egress_buffer.mc.min_percent   =  0.00


    # Priority group service pool buffer limits: percent of the
    # assigned service pool.
    ### quota 9 = alpha2; quota 11=alpha8; quota 255=alpha inf
    priority_group.badbulk.egress_buffer.uc.dynamic_quota    = 8
    priority_group.goodbulk.egress_buffer.uc.dynamic_quota    = 11
    priority_group.network.egress_buffer.uc.dynamic_quota = 11
    priority_group.heartbeats.egress_buffer.uc.dynamic_quota = 11

    priority_group.badbulk.egress_buffer.mc.dynamic_quota    = 9
    priority_group.goodbulk.egress_buffer.mc.dynamic_quota    = 9
    priority_group.network.egress_buffer.mc.dynamic_quota = 9
    priority_group.heartbeats.egress_buffer.mc.dynamic_quota = 9


    # the per-port limit on multicast packets (applies to all switch priorities)
    #mc_buffer.port.percent = 0.2

    # internal cos values mapped to egress queues
    # multicast queue: same as unicast queue
    cos_egr_queue.cos_0.uc  = 0
    cos_egr_queue.cos_0.cpu = 0

    cos_egr_queue.cos_1.uc  = 1
    cos_egr_queue.cos_1.cpu = 1

    cos_egr_queue.cos_2.uc  = 2
    cos_egr_queue.cos_2.cpu = 2

    cos_egr_queue.cos_3.uc  = 3
    cos_egr_queue.cos_3.cpu = 3

    cos_egr_queue.cos_4.uc  = 4
    cos_egr_queue.cos_4.cpu = 4

    cos_egr_queue.cos_5.uc  = 5
    cos_egr_queue.cos_5.cpu = 5

    cos_egr_queue.cos_6.uc  = 6
    cos_egr_queue.cos_6.cpu = 6

    cos_egr_queue.cos_7.uc  = 7
    cos_egr_queue.cos_7.cpu = 7

    #TCAM resource forwarding profile
    # Valid profiles -
    #    default, ipmc-heavy, acl-heavy, ipmc-max
    tcam_resource.profile = default

    # Resilient hash timers: in milliseconds
    # resilient_hash_active_timer = 120000
    # resilient_hash_max_unbalanced_timer = 4294967295

    # HASH config for  ECMP to enable custom fields
    # Fields will be applicable for ECMP hash
    # calculation
    # Uncomment to enable custom fields configured below
    hash_config.enable = true

    #hash Fields available ( assign true to enable)
    #ip protocol
    hash_config.ip_prot = true
    #source ip
    hash_config.sip = true
    #destination ip
    hash_config.dip = true
    #source port
    hash_config.sport = true
    #destination port
    hash_config.dport = true
    #ipv6 flow label
    hash_config.ip6_label = false
    #ingress interface
    hash_config.ing_intf = false

    #inner fields for  IPv4-over-IPv6 and IPv6-over-IPv6
    hash_config.inner_ip_prot = false
    hash_config.inner_sip = true
    hash_config.inner_dip = true
    hash_config.inner_sport = true
    hash_config.inner_dport = true
    hash_config.inner_ip6_label = false
    # Hash config end #


    #LAG HASH config
    #HASH config for LACP to enable custom fields
    #Fields will be applicable for LAG hash
    #calculation
    #Uncomment to enable custom fields configured below
    #lag_hash_config.enable = true

    lag_hash_config.smac = true
    lag_hash_config.dmac = true
    lag_hash_config.sip  = true
    lag_hash_config.dip  = true
    lag_hash_config.ether_type = true
    lag_hash_config.vlan_id = true
    lag_hash_config.sport = true
    lag_hash_config.dport = true
    lag_hash_config.ip_prot = true

