// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`babelPlugins esmodules: false appendViewName 1`] = `
"\\"use strict\\";

Object.defineProperty(exports, \\"__esModule\\", {
  value: true
});
exports.b = exports.B = B;

function B() {}

B.viewName = \\"B\\";"
`;

exports[`babelPlugins esmodules: false clsGenPlugin 1`] = `
"\\"use strict\\";

Object.defineProperty(exports, \\"__esModule\\", {
  value: true
});
exports.Block = Block;

function Block(data, req, execView) {
  return \\"full-random-block\\" + \\"part-random-part\\";
}"
`;

exports[`babelPlugins esmodules: false includeReplace 1`] = `
"\\"use strict\\";

(function () {
  doSomething();
})();"
`;

exports[`babelPlugins esmodules: false pathsBabelPlugin 1`] = `
"\\"use strict\\";

var _blockView = require(\\"./block.view.tsx\\");"
`;

exports[`babelPlugins esmodules: false replaceBaseViewDef 1`] = `
"\\"use strict\\";

Object.defineProperty(exports, \\"__esModule\\", {
  value: true
});
var _exportNames = {
  Block: true
};
exports.Block = Block;

var _block = require(\\"@blockBase/block/block.view\\");

Object.keys(_block).forEach(function (key) {
  if (key === \\"default\\" || key === \\"__esModule\\") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _block[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _block[key];
    }
  });
});

function Block(data, req, execView) {
  return execView(Block.base) + execView(\\"BlockInner\\");
}"
`;

exports[`babelPlugins esmodules: false replaceTestDepsPlugin 1`] = `
"\\"use strict\\";

const views = home.commonViews.inherit();
const execView = views.execView;
const mockView = views,
      restoreViews = views.cleanViews;
describe('home-logo', function () {
  it('default', function () {
    const html = execView('home-logo', {}, mockReq({}, reqs.std));
    expect(html).toMatchSnapshot();
  });
});"
`;

exports[`babelPlugins esmodules: false transformCachedDecl 1`] = `
"\\"use strict\\";

Object.defineProperty(exports, \\"__esModule\\", {
  value: true
});
exports.Block1 = Block1;
exports.Block2 = void 0;

var _makeCached = _interopRequireDefault(require(\\"@lib/views/makeCached\\"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Block1(arg) {
  return 'abc';
}

;
const Block2 = /*#__PURE__*/(0, _makeCached.default)(function Block2(arg) {});
exports.Block2 = Block2;
;"
`;

exports[`babelPlugins esmodules: false transformCachedDecl 2`] = `
"\\"use strict\\";

Object.defineProperty(exports, \\"__esModule\\", {
  value: true
});
exports.Block1 = Block1;
exports.Block2 = Block2;

function Block1(arg) {
  return 'abc';
}

;

function Block2(arg) {}

;"
`;

exports[`babelPlugins esmodules: false transformViewsUsageRef 1`] = `
"\\"use strict\\";

Object.defineProperty(exports, \\"__esModule\\", {
  value: true
});
exports.Block = Block;
exports.BlockInner = BlockInner;

var _blockView = require(\\"@block/block/block.view.tsx\\");

function Block(data, req, execView) {
  return execView(_blockView.BlockInner);
}

function BlockInner() {
  return 'abc';
}"
`;

exports[`babelPlugins esmodules: false transformViewsUsageRef 2`] = `
"\\"use strict\\";

Object.defineProperty(exports, \\"__esModule\\", {
  value: true
});
exports.Block = Block;
exports.Block2 = void 0;
exports.BlockInner = BlockInner;
exports.Root = Root;

var _blockView = require(\\"@block/block/block.view.tsx\\");

var _makeCached = _interopRequireDefault(require(\\"@lib/views/makeCached\\"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Root(data, req, execView) {
  return execView(_blockView.Block) + execView(_blockView.Block2) + execView(_blockView.BlockInner);
}

;

function Block(data, req, execView) {
  return execView(_blockView.BlockInner);
}

Block.isCached = true;
const Block2 = (0, _makeCached.default)(function Block2(data, req, execView) {
  return execView(_blockView.BlockInner);
});
exports.Block2 = Block2;

function BlockInner() {
  return 'abc';
}"
`;

exports[`babelPlugins esmodules: false transformViewsUsageString 1`] = `
"\\"use strict\\";

Object.defineProperty(exports, \\"__esModule\\", {
  value: true
});
exports.Block = Block;
exports.BlockInner = BlockInner;

var _other = require(\\"../other/other.view\\");

var _block = require(\\"@blockBase/block/block.view\\");

const Something = home.Something;

function Block(data, req, execView) {
  return execView((BlockInner, \\"BlockInner\\")) + execView(_block.BlockInner) + execView((_other.Other, \\"Other\\")) + execView((_other.Other2, \\"Other2\\")) + execView(Something);
}

function BlockInner() {
  return 'abc';
}"
`;

exports[`babelPlugins esmodules: true appendViewName 1`] = `
"export function B() {}
B.viewName = \\"B\\";
export { B as b };"
`;

exports[`babelPlugins esmodules: true clsGenPlugin 1`] = `
"export function Block(data, req, execView) {
  return \\"full-random-block\\" + \\"part-random-part\\";
}"
`;

exports[`babelPlugins esmodules: true includeReplace 1`] = `
"(function () {
  doSomething();
})();"
`;

exports[`babelPlugins esmodules: true pathsBabelPlugin 1`] = `"import { Block } from \\"./block.view.tsx\\";"`;

exports[`babelPlugins esmodules: true replaceBaseViewDef 1`] = `
"export function Block(data, req, execView) {
  return execView(Block.base) + execView(\\"BlockInner\\");
}
export * from '@blockBase/block/block.view';"
`;

exports[`babelPlugins esmodules: true replaceTestDepsPlugin 1`] = `
"const views = home.commonViews.inherit();
const execView = views.execView;
const mockView = views,
      restoreViews = views.cleanViews;
describe('home-logo', function () {
  it('default', function () {
    const html = execView('home-logo', {}, mockReq({}, reqs.std));
    expect(html).toMatchSnapshot();
  });
});"
`;

exports[`babelPlugins esmodules: true transformCachedDecl 1`] = `
"import _cached from \\"@lib/views/makeCached\\";
export function Block1(arg) {
  return 'abc';
}
;
export const Block2 = /*#__PURE__*/_cached(function Block2(arg) {});
;"
`;

exports[`babelPlugins esmodules: true transformCachedDecl 2`] = `
"export function Block1(arg) {
  return 'abc';
}
;
export function Block2(arg) {}
;"
`;

exports[`babelPlugins esmodules: true transformViewsUsageRef 1`] = `
"import { Block as _Block$MaybeOverriden, BlockInner as _BlockInner$MaybeOverriden } from \\"@block/block/block.view.tsx\\";
export function Block(data, req, execView) {
  return execView(_BlockInner$MaybeOverriden);
}
export function BlockInner() {
  return 'abc';
}"
`;

exports[`babelPlugins esmodules: true transformViewsUsageRef 2`] = `
"import { Root as _Root$MaybeOverriden, Block as _Block$MaybeOverriden, Block2 as _Block2$MaybeOverriden, BlockInner as _BlockInner$MaybeOverriden } from \\"@block/block/block.view.tsx\\";
import cached from '@lib/views/makeCached';
export function Root(data, req, execView) {
  return execView(_Block$MaybeOverriden) + execView(_Block2$MaybeOverriden) + execView(_BlockInner$MaybeOverriden);
}
;
export function Block(data, req, execView) {
  return execView(_BlockInner$MaybeOverriden);
}
Block.isCached = true;
export const Block2 = cached(function Block2(data, req, execView) {
  return execView(_BlockInner$MaybeOverriden);
});
export function BlockInner() {
  return 'abc';
}"
`;

exports[`babelPlugins esmodules: true transformViewsUsageString 1`] = `
"import { Other } from '../other/other.view';
import { Other2 as OtherSecond } from '../other/other.view';
import { BlockInner as BlockInnerBase } from '@blockBase/block/block.view';
const Something = home.Something;
export function Block(data, req, execView) {
  return execView((BlockInner, \\"BlockInner\\")) + execView(BlockInnerBase) + execView((Other, \\"Other\\")) + execView((OtherSecond, \\"Other2\\")) + execView(Something);
}
export function BlockInner() {
  return 'abc';
}"
`;
