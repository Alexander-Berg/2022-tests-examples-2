// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	models "a.yandex-team.ru/portal/avocado/libs/utils/base/models"
	mock "github.com/stretchr/testify/mock"
)

// robotGetter is an autogenerated mock type for the robotGetter type
type robotGetter struct {
	mock.Mock
}

// GetRobot provides a mock function with given fields:
func (_m *robotGetter) GetRobot() models.Robot {
	ret := _m.Called()

	var r0 models.Robot
	if rf, ok := ret.Get(0).(func() models.Robot); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(models.Robot)
	}

	return r0
}

// GetRobotOrErr provides a mock function with given fields:
func (_m *robotGetter) GetRobotOrErr() (models.Robot, error) {
	ret := _m.Called()

	var r0 models.Robot
	if rf, ok := ret.Get(0).(func() models.Robot); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(models.Robot)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTnewRobotGetter interface {
	mock.TestingT
	Cleanup(func())
}

// newRobotGetter creates a new instance of robotGetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newRobotGetter(t mockConstructorTestingTnewRobotGetter) *robotGetter {
	mock := &robotGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
