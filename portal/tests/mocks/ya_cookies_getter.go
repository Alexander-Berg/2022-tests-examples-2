// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	models "a.yandex-team.ru/portal/avocado/libs/utils/base/models"
	mock "github.com/stretchr/testify/mock"
)

// yaCookiesGetter is an autogenerated mock type for the yaCookiesGetter type
type yaCookiesGetter struct {
	mock.Mock
}

// GetYaCookies provides a mock function with given fields:
func (_m *yaCookiesGetter) GetYaCookies() models.YaCookies {
	ret := _m.Called()

	var r0 models.YaCookies
	if rf, ok := ret.Get(0).(func() models.YaCookies); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(models.YaCookies)
	}

	return r0
}

// GetYaCookiesOrErr provides a mock function with given fields:
func (_m *yaCookiesGetter) GetYaCookiesOrErr() (models.YaCookies, error) {
	ret := _m.Called()

	var r0 models.YaCookies
	if rf, ok := ret.Get(0).(func() models.YaCookies); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(models.YaCookies)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTnewYaCookiesGetter interface {
	mock.TestingT
	Cleanup(func())
}

// newYaCookiesGetter creates a new instance of yaCookiesGetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newYaCookiesGetter(t mockConstructorTestingTnewYaCookiesGetter) *yaCookiesGetter {
	mock := &yaCookiesGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
