// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	json "encoding/json"

	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// FieldParser is an autogenerated mock type for the FieldParser type
type FieldParser struct {
	mock.Mock
}

// ParseJSON provides a mock function with given fields: _a0
func (_m *FieldParser) ParseJSON(_a0 json.RawMessage) (interface{}, error) {
	ret := _m.Called(_a0)

	var r0 interface{}
	if rf, ok := ret.Get(0).(func(json.RawMessage) interface{}); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(json.RawMessage) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewFieldParser creates a new instance of FieldParser. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewFieldParser(t testing.TB) *FieldParser {
	mock := &FieldParser{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
