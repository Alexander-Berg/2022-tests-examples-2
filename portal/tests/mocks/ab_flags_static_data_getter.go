// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	madm "a.yandex-team.ru/portal/avocado/libs/utils/madm/v2"
	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// ABFlagsStaticDataGetter is an autogenerated mock type for the ABFlagsStaticDataGetter type
type ABFlagsStaticDataGetter struct {
	mock.Mock
}

// ABFlagsStaticData provides a mock function with given fields: mordazone, content, geos, times, request, device, mordaContent, args
func (_m *ABFlagsStaticDataGetter) ABFlagsStaticData(mordazone madm.MordaZoneGetter, content madm.MADMContentGetter, geos madm.GeoGetter, times madm.TimeGetter, request madm.RequestGetter, device madm.DeviceGetter, mordaContent madm.MordaContentGetter, args ...madm.Arg) (madm.Items, error) {
	_va := make([]interface{}, len(args))
	for _i := range args {
		_va[_i] = args[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, mordazone, content, geos, times, request, device, mordaContent)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 madm.Items
	if rf, ok := ret.Get(0).(func(madm.MordaZoneGetter, madm.MADMContentGetter, madm.GeoGetter, madm.TimeGetter, madm.RequestGetter, madm.DeviceGetter, madm.MordaContentGetter, ...madm.Arg) madm.Items); ok {
		r0 = rf(mordazone, content, geos, times, request, device, mordaContent, args...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(madm.Items)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(madm.MordaZoneGetter, madm.MADMContentGetter, madm.GeoGetter, madm.TimeGetter, madm.RequestGetter, madm.DeviceGetter, madm.MordaContentGetter, ...madm.Arg) error); ok {
		r1 = rf(mordazone, content, geos, times, request, device, mordaContent, args...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewABFlagsStaticDataGetter creates a new instance of ABFlagsStaticDataGetter. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewABFlagsStaticDataGetter(t testing.TB) *ABFlagsStaticDataGetter {
	mock := &ABFlagsStaticDataGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
