// Code generated by mockery 2.9.4. DO NOT EDIT.

package mocks

import (
	protoanswers "a.yandex-team.ru/apphost/lib/proto_answers"
	mock "github.com/stretchr/testify/mock"
)

// OriginRequestGetter is an autogenerated mock type for the OriginRequestGetter type
type OriginRequestGetter struct {
	mock.Mock
}

// DTO provides a mock function with given fields:
func (_m *OriginRequestGetter) DTO() (*protoanswers.THttpRequest, error) {
	ret := _m.Called()

	var r0 *protoanswers.THttpRequest
	if rf, ok := ret.Get(0).(func() *protoanswers.THttpRequest); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*protoanswers.THttpRequest)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetHost provides a mock function with given fields:
func (_m *OriginRequestGetter) GetHost() (string, error) {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetIP provides a mock function with given fields:
func (_m *OriginRequestGetter) GetIP() (string, error) {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
