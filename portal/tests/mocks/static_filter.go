// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	filters "a.yandex-team.ru/portal/avocado/libs/utils/madm/filters"
	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// StaticFilter is an autogenerated mock type for the StaticFilter type
type StaticFilter struct {
	mock.Mock
}

// Evaluate provides a mock function with given fields: ctx
func (_m *StaticFilter) Evaluate(ctx filters.Context) bool {
	ret := _m.Called(ctx)

	var r0 bool
	if rf, ok := ret.Get(0).(func(filters.Context) bool); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// GetName provides a mock function with given fields:
func (_m *StaticFilter) GetName() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// NewStaticFilter creates a new instance of StaticFilter. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewStaticFilter(t testing.TB) *StaticFilter {
	mock := &StaticFilter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
