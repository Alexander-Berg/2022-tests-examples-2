// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	models "a.yandex-team.ru/portal/avocado/libs/utils/base/models"
	mock "github.com/stretchr/testify/mock"
)

// bigBGetter is an autogenerated mock type for the bigBGetter type
type bigBGetter struct {
	mock.Mock
}

// GetBigB provides a mock function with given fields:
func (_m *bigBGetter) GetBigB() models.BigB {
	ret := _m.Called()

	var r0 models.BigB
	if rf, ok := ret.Get(0).(func() models.BigB); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(models.BigB)
	}

	return r0
}

// GetBigBOrErr provides a mock function with given fields:
func (_m *bigBGetter) GetBigBOrErr() (models.BigB, error) {
	ret := _m.Called()

	var r0 models.BigB
	if rf, ok := ret.Get(0).(func() models.BigB); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(models.BigB)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTnewBigBGetter interface {
	mock.TestingT
	Cleanup(func())
}

// newBigBGetter creates a new instance of bigBGetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newBigBGetter(t mockConstructorTestingTnewBigBGetter) *bigBGetter {
	mock := &bigBGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
