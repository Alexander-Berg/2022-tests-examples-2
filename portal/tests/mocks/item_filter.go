// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	testing "testing"

	storage "a.yandex-team.ru/portal/avocado/libs/utils/madm/v2/storage"
	mock "github.com/stretchr/testify/mock"
)

// itemFilter is an autogenerated mock type for the itemFilter type
type itemFilter struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0, _a1
func (_m *itemFilter) Execute(_a0 storage.Item, _a1 []interface{}) bool {
	ret := _m.Called(_a0, _a1)

	var r0 bool
	if rf, ok := ret.Get(0).(func(storage.Item, []interface{}) bool); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// newItemFilter creates a new instance of itemFilter. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func newItemFilter(t testing.TB) *itemFilter {
	mock := &itemFilter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
