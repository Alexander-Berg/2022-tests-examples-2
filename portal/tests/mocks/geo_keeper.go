// Code generated by mockery 2.9.4. DO NOT EDIT.

package mocks

import (
	models "a.yandex-team.ru/portal/avocado/libs/utils/base/models"
	morda_data "a.yandex-team.ru/portal/avocado/proto/morda_data"
	mock "github.com/stretchr/testify/mock"
)

// GeoKeeper is an autogenerated mock type for the GeoKeeper type
type GeoKeeper struct {
	mock.Mock
}

// GetGeo provides a mock function with given fields:
func (_m *GeoKeeper) GetGeo() models.Geo {
	ret := _m.Called()

	var r0 models.Geo
	if rf, ok := ret.Get(0).(func() models.Geo); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(models.Geo)
	}

	return r0
}

// GetGeoIfUpdated provides a mock function with given fields:
func (_m *GeoKeeper) GetGeoIfUpdated() *morda_data.Geo {
	ret := _m.Called()

	var r0 *morda_data.Geo
	if rf, ok := ret.Get(0).(func() *morda_data.Geo); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*morda_data.Geo)
		}
	}

	return r0
}

// GetGeoOrErr provides a mock function with given fields:
func (_m *GeoKeeper) GetGeoOrErr() (models.Geo, error) {
	ret := _m.Called()

	var r0 models.Geo
	if rf, ok := ret.Get(0).(func() models.Geo); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(models.Geo)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
