// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	models "a.yandex-team.ru/portal/avocado/libs/utils/base/models"
	mock "github.com/stretchr/testify/mock"
)

// deviceGetter is an autogenerated mock type for the deviceGetter type
type deviceGetter struct {
	mock.Mock
}

// GetDevice provides a mock function with given fields:
func (_m *deviceGetter) GetDevice() models.Device {
	ret := _m.Called()

	var r0 models.Device
	if rf, ok := ret.Get(0).(func() models.Device); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(models.Device)
	}

	return r0
}

// GetDeviceOrErr provides a mock function with given fields:
func (_m *deviceGetter) GetDeviceOrErr() (models.Device, error) {
	ret := _m.Called()

	var r0 models.Device
	if rf, ok := ret.Get(0).(func() models.Device); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(models.Device)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTnewDeviceGetter interface {
	mock.TestingT
	Cleanup(func())
}

// newDeviceGetter creates a new instance of deviceGetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newDeviceGetter(t mockConstructorTestingTnewDeviceGetter) *deviceGetter {
	mock := &deviceGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
