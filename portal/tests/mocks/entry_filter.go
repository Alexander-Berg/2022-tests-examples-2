// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// EntryFilter is an autogenerated mock type for the EntryFilter type
type EntryFilter struct {
	mock.Mock
}

// Filter provides a mock function with given fields: _a0
func (_m *EntryFilter) Filter(_a0 map[string]interface{}) (bool, error) {
	ret := _m.Called(_a0)

	var r0 bool
	if rf, ok := ret.Get(0).(func(map[string]interface{}) bool); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(map[string]interface{}) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewEntryFilter creates a new instance of EntryFilter. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewEntryFilter(t testing.TB) *EntryFilter {
	mock := &EntryFilter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
