// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	json "encoding/json"

	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// EntryParser is an autogenerated mock type for the EntryParser type
type EntryParser struct {
	mock.Mock
}

// ParseJSON provides a mock function with given fields: _a0
func (_m *EntryParser) ParseJSON(_a0 map[string]json.RawMessage) (map[string]interface{}, error) {
	ret := _m.Called(_a0)

	var r0 map[string]interface{}
	if rf, ok := ret.Get(0).(func(map[string]json.RawMessage) map[string]interface{}); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]interface{})
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(map[string]json.RawMessage) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewEntryParser creates a new instance of EntryParser. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewEntryParser(t testing.TB) *EntryParser {
	mock := &EntryParser{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
