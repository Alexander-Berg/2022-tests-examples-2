// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package bigb is a generated GoMock package.
package bigb

import (
	reflect "reflect"

	madm "a.yandex-team.ru/portal/avocado/libs/utils/madm/v2"
	contexts "a.yandex-team.ru/portal/avocado/morda-go/pkg/contexts"
	gomock "github.com/golang/mock/gomock"
)

// MockbigBMadmGetter is a mock of bigBMadmGetter interface.
type MockbigBMadmGetter struct {
	ctrl     *gomock.Controller
	recorder *MockbigBMadmGetterMockRecorder
}

// MockbigBMadmGetterMockRecorder is the mock recorder for MockbigBMadmGetter.
type MockbigBMadmGetterMockRecorder struct {
	mock *MockbigBMadmGetter
}

// NewMockbigBMadmGetter creates a new mock instance.
func NewMockbigBMadmGetter(ctrl *gomock.Controller) *MockbigBMadmGetter {
	mock := &MockbigBMadmGetter{ctrl: ctrl}
	mock.recorder = &MockbigBMadmGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockbigBMadmGetter) EXPECT() *MockbigBMadmGetterMockRecorder {
	return m.recorder
}

// GetBigBStatefulSearch mocks base method.
func (m *MockbigBMadmGetter) GetBigBStatefulSearch(base contexts.Base, themeID uint64) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBigBStatefulSearch", base, themeID)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBigBStatefulSearch indicates an expected call of GetBigBStatefulSearch.
func (mr *MockbigBMadmGetterMockRecorder) GetBigBStatefulSearch(base, themeID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBigBStatefulSearch", reflect.TypeOf((*MockbigBMadmGetter)(nil).GetBigBStatefulSearch), base, themeID)
}

// GetFirstBigBKeywords mocks base method.
func (m *MockbigBMadmGetter) GetFirstBigBKeywords(base contexts.Base) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFirstBigBKeywords", base)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFirstBigBKeywords indicates an expected call of GetFirstBigBKeywords.
func (mr *MockbigBMadmGetterMockRecorder) GetFirstBigBKeywords(base interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFirstBigBKeywords", reflect.TypeOf((*MockbigBMadmGetter)(nil).GetFirstBigBKeywords), base)
}

// GetRecentlyVisitedServices mocks base method.
func (m *MockbigBMadmGetter) GetRecentlyVisitedServices(base contexts.Base) (map[uint32]bigbRecentlyVisitedServices, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRecentlyVisitedServices", base)
	ret0, _ := ret[0].(map[uint32]bigbRecentlyVisitedServices)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRecentlyVisitedServices indicates an expected call of GetRecentlyVisitedServices.
func (mr *MockbigBMadmGetterMockRecorder) GetRecentlyVisitedServices(base interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRecentlyVisitedServices", reflect.TypeOf((*MockbigBMadmGetter)(nil).GetRecentlyVisitedServices), base)
}

// MockmadmDataGetter is a mock of madmDataGetter interface.
type MockmadmDataGetter struct {
	ctrl     *gomock.Controller
	recorder *MockmadmDataGetterMockRecorder
}

// MockmadmDataGetterMockRecorder is the mock recorder for MockmadmDataGetter.
type MockmadmDataGetterMockRecorder struct {
	mock *MockmadmDataGetter
}

// NewMockmadmDataGetter creates a new mock instance.
func NewMockmadmDataGetter(ctrl *gomock.Controller) *MockmadmDataGetter {
	mock := &MockmadmDataGetter{ctrl: ctrl}
	mock.recorder = &MockmadmDataGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockmadmDataGetter) EXPECT() *MockmadmDataGetterMockRecorder {
	return m.recorder
}

// StaticData mocks base method.
func (m *MockmadmDataGetter) StaticData(exportName madm.ExportName, ctx contexts.Base, args ...madm.Arg) (madm.Items, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{exportName, ctx}
	for _, a := range args {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "StaticData", varargs...)
	ret0, _ := ret[0].(madm.Items)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StaticData indicates an expected call of StaticData.
func (mr *MockmadmDataGetterMockRecorder) StaticData(exportName, ctx interface{}, args ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{exportName, ctx}, args...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StaticData", reflect.TypeOf((*MockmadmDataGetter)(nil).StaticData), varargs...)
}

// StaticDataAll mocks base method.
func (m *MockmadmDataGetter) StaticDataAll(exportName madm.ExportName) (madm.Items, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StaticDataAll", exportName)
	ret0, _ := ret[0].(madm.Items)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StaticDataAll indicates an expected call of StaticDataAll.
func (mr *MockmadmDataGetterMockRecorder) StaticDataAll(exportName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StaticDataAll", reflect.TypeOf((*MockmadmDataGetter)(nil).StaticDataAll), exportName)
}
