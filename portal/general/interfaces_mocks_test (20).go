// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package resolver is a generated GoMock package.
package resolver

import (
	geobase "a.yandex-team.ru/library/go/yandex/geobase"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockgeoBase is a mock of geoBase interface.
type MockgeoBase struct {
	ctrl     *gomock.Controller
	recorder *MockgeoBaseMockRecorder
}

// MockgeoBaseMockRecorder is the mock recorder for MockgeoBase.
type MockgeoBaseMockRecorder struct {
	mock *MockgeoBase
}

// NewMockgeoBase creates a new mock instance.
func NewMockgeoBase(ctrl *gomock.Controller) *MockgeoBase {
	mock := &MockgeoBase{ctrl: ctrl}
	mock.recorder = &MockgeoBaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockgeoBase) EXPECT() *MockgeoBaseMockRecorder {
	return m.recorder
}

// GetCapitalID mocks base method.
func (m *MockgeoBase) GetCapitalID(id geobase.ID) (geobase.ID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCapitalID", id)
	ret0, _ := ret[0].(geobase.ID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCapitalID indicates an expected call of GetCapitalID.
func (mr *MockgeoBaseMockRecorder) GetCapitalID(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCapitalID", reflect.TypeOf((*MockgeoBase)(nil).GetCapitalID), id)
}

// GetParentsIDsDef mocks base method.
func (m *MockgeoBase) GetParentsIDsDef(id geobase.ID) ([]geobase.ID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetParentsIDsDef", id)
	ret0, _ := ret[0].([]geobase.ID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetParentsIDsDef indicates an expected call of GetParentsIDsDef.
func (mr *MockgeoBaseMockRecorder) GetParentsIDsDef(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetParentsIDsDef", reflect.TypeOf((*MockgeoBase)(nil).GetParentsIDsDef), id)
}

// GetTimezoneByID mocks base method.
func (m *MockgeoBase) GetTimezoneByID(id geobase.ID) (*geobase.Timezone, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTimezoneByID", id)
	ret0, _ := ret[0].(*geobase.Timezone)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTimezoneByID indicates an expected call of GetTimezoneByID.
func (mr *MockgeoBaseMockRecorder) GetTimezoneByID(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTimezoneByID", reflect.TypeOf((*MockgeoBase)(nil).GetTimezoneByID), id)
}

// GetOnlyParentsIDsDef mocks base method.
func (m *MockgeoBase) GetOnlyParentsIDsDef(id geobase.ID) ([]geobase.ID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOnlyParentsIDsDef", id)
	ret0, _ := ret[0].([]geobase.ID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOnlyParentsIDsDef indicates an expected call of GetOnlyParentsIDsDef.
func (mr *MockgeoBaseMockRecorder) GetOnlyParentsIDsDef(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOnlyParentsIDsDef", reflect.TypeOf((*MockgeoBase)(nil).GetOnlyParentsIDsDef), id)
}

// GetRegionByID mocks base method.
func (m *MockgeoBase) GetRegionByID(id geobase.ID) (*geobase.Region, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRegionByID", id)
	ret0, _ := ret[0].(*geobase.Region)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRegionByID indicates an expected call of GetRegionByID.
func (mr *MockgeoBaseMockRecorder) GetRegionByID(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRegionByID", reflect.TypeOf((*MockgeoBase)(nil).GetRegionByID), id)
}
