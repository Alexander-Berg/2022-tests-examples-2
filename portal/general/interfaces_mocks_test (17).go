// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package geo is a generated GoMock package.
package geo

import (
	models "a.yandex-team.ru/portal/avocado/libs/utils/base/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockgeoParser is a mock of geoParser interface.
type MockgeoParser struct {
	ctrl     *gomock.Controller
	recorder *MockgeoParserMockRecorder
}

// MockgeoParserMockRecorder is the mock recorder for MockgeoParser.
type MockgeoParserMockRecorder struct {
	mock *MockgeoParser
}

// NewMockgeoParser creates a new mock instance.
func NewMockgeoParser(ctrl *gomock.Controller) *MockgeoParser {
	mock := &MockgeoParser{ctrl: ctrl}
	mock.recorder = &MockgeoParserMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockgeoParser) EXPECT() *MockgeoParserMockRecorder {
	return m.recorder
}

// Parse mocks base method.
func (m *MockgeoParser) Parse() (models.Geo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Parse")
	ret0, _ := ret[0].(models.Geo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Parse indicates an expected call of Parse.
func (mr *MockgeoParserMockRecorder) Parse() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Parse", reflect.TypeOf((*MockgeoParser)(nil).Parse))
}

// OverrideWithMordaZone mocks base method.
func (m *MockgeoParser) OverrideWithMordaZone(arg0 models.Geo, arg1 string) (models.Geo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OverrideWithMordaZone", arg0, arg1)
	ret0, _ := ret[0].(models.Geo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// OverrideWithMordaZone indicates an expected call of OverrideWithMordaZone.
func (mr *MockgeoParserMockRecorder) OverrideWithMordaZone(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OverrideWithMordaZone", reflect.TypeOf((*MockgeoParser)(nil).OverrideWithMordaZone), arg0, arg1)
}
