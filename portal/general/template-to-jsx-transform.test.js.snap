// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`transformTemplateToJsx attribute in inappropriate place 1`] = `
Object {
  "deps": Array [
    "Doctype",
  ],
  "isItValidJsx": true,
  "jsx": "export function Abacaba(data, req, execView) {
    return (
        <>
            <Doctype {...data} />
            <html
                _temp={
                    data.document__mod !== undefined
                        ? data.document__mod
                        : req.document__mod !== undefined
                        ? req.document__mod
                        : execView(\\"document__mod\\", data)
                }
                _temp1={
                    data.document__lang !== undefined
                        ? data.document__lang
                        : req.document__lang !== undefined
                        ? req.document__lang
                        : execView(\\"document__lang\\", data)
                }
            >
                <head xmlns:og=\\"http://ogp.me/ns#\\">
                    {data.head__content !== undefined
                        ? data.head__content
                        : req.head__content !== undefined
                        ? req.head__content
                        : execView(\\"head__content\\", data)}
                    {data.resources__head !== undefined
                        ? data.resources__head
                        : req.resources__head !== undefined
                        ? req.resources__head
                        : execView(\\"resources__head\\", data)}
                </head>
                {data.body !== undefined ? data.body : req.body !== undefined ? req.body : execView(\\"body\\", data)}
            </html>
        </>
    );
}
",
  "transformedJsx": "import _attributesGetter from \\"utils/attributes-getter\\";
import _childMapper from \\"utils/child-mapper\\";
export function Abacaba(data, req, execView) {
  return _childMapper.oneElem(execView(Doctype, data)) + _childMapper.oneElem(\\"<html \\" + _attributesGetter({
    _temp: data.document__mod !== undefined ? data.document__mod : req.document__mod !== undefined ? req.document__mod : execView(\\"document__mod\\", data),
    _temp1: data.document__lang !== undefined ? data.document__lang : req.document__lang !== undefined ? req.document__lang : execView(\\"document__lang\\", data)
  }) + \\">\\" + (_childMapper.oneElem(\\"<head xmlns:og='http://ogp.me/ns#'>\\" + (_childMapper.oneElem(data.head__content !== undefined ? data.head__content : req.head__content !== undefined ? req.head__content : execView(\\"head__content\\", data)) + _childMapper.oneElem(data.resources__head !== undefined ? data.resources__head : req.resources__head !== undefined ? req.resources__head : execView(\\"resources__head\\", data))) + \\"</head>\\") + _childMapper.oneElem(data.body !== undefined ? data.body : req.body !== undefined ? req.body : execView(\\"body\\", data))) + \\"</html>\\");
}",
}
`;

exports[`transformTemplateToJsx b-banner__img 1`] = `
Object {
  "deps": Array [],
  "isItValidJsx": true,
  "jsx": "export function BBanner__img(data) {
    return <img {...data.attrs} />;
}
",
  "transformedJsx": "import _attributesGetter from \\"utils/attributes-getter\\";
export function BBanner__img(data) {
  return \\"<img \\" + _attributesGetter(data.attrs) + \\">\\";
}",
}
`;

exports[`transformTemplateToJsx bem:headerMods.media-service__header 1`] = `
Object {
  "deps": Array [
    "home/getBEMClassname",
  ],
  "isItValidJsx": true,
  "jsx": "export function MediaService__layout(data) {
    return (
        <>
            <div className={getBEMClassname(\\"media-service__header\\", data.headerMods || {})}>
                {data.header}
                {data[\\"title-after\\"]}
                {data.more}
            </div>
        </>
    );
}
",
  "transformedJsx": "import _attributesGetter from \\"utils/attributes-getter\\";
import _childMapper from \\"utils/child-mapper\\";
export function MediaService__layout(data) {
  return _childMapper.oneElem(\\"<div \\" + _attributesGetter({
    className: getBEMClassname(\\"media-service__header\\", data.headerMods || {})
  }) + \\">\\" + (_childMapper.oneElem(data.header) + _childMapper.oneElem(data[\\"title-after\\"]) + _childMapper.oneElem(data.more)) + \\"</div>\\");
}",
}
`;

exports[`transformTemplateToJsx exec inside attribute 1`] = `
Object {
  "deps": Array [
    "Logo__url",
    "Logo__content__attrs",
    "CspNonce",
  ],
  "isItValidJsx": true,
  "jsx": "export function Abacaba(data, req, execView) {
    return (
        <>
            <div class=\\"logo__image_no_bg\\">
                <img src={execView(Logo__url, data)} _temp={execView(Logo__content__attrs, data)} />
                <script _temp1={execView(CspNonce, data)}>{data.fallback}</script>
            </div>
        </>
    );
}
",
  "transformedJsx": "import _childMapper from \\"utils/child-mapper\\";
import _attributesGetter from \\"utils/attributes-getter\\";
export function Abacaba(data, req, execView) {
  return _childMapper.oneElem(\\"<div class='logo__image_no_bg'>\\" + (_childMapper.oneElem(\\"<img \\" + _attributesGetter({
    src: execView(Logo__url, data),
    _temp: execView(Logo__content__attrs, data)
  }) + \\">\\") + _childMapper.oneElem(\\"<script \\" + _attributesGetter({
    _temp1: execView(CspNonce, data)
  }) + \\">\\" + _childMapper.oneElem(data.fallback) + \\"</script>\\")) + \\"</div>\\");
}",
}
`;

exports[`transformTemplateToJsx exec inside attribute 2 1`] = `
Object {
  "deps": Array [
    "CspNonce",
  ],
  "isItValidJsx": true,
  "jsx": "export function Body__layout(data, req, execView) {
    return (
        <>
            <style _temp={execView(CspNonce, data)}>{\`
            .b-page{display:none}
            \`}</style>
        </>
    );
}
",
  "transformedJsx": "import _childMapper from \\"utils/child-mapper\\";
import _attributesGetter from \\"utils/attributes-getter\\";
export function Body__layout(data, req, execView) {
  return _childMapper.oneElem(\\"<style \\" + _attributesGetter({
    _temp: execView(CspNonce, data)
  }) + \\">\\" + \`
            .b-page{display:none}
            \` + \\"</style>\\");
}",
}
`;

exports[`transformTemplateToJsx list__layout 1`] = `
Object {
  "deps": Array [
    "home/getBEMClassname",
  ],
  "isItValidJsx": true,
  "jsx": "export function Body__layout(data, req, execView) {
    const Component0 = data.tag !== undefined ? data.tag : req.tag !== undefined ? req.tag : execView(\\"tag\\", data);

    return (
        <>
            <Component0 class={getBEMClassname(\\"list\\", data || {})}>
                {data.content !== undefined
                    ? data.content
                    : req.content !== undefined
                    ? req.content
                    : execView(\\"content\\", data)}
            </Component0>
        </>
    );
}
",
  "transformedJsx": "import _childMapper from \\"utils/child-mapper\\";
export function Body__layout(data, req, execView) {
  const Component0 = data.tag !== undefined ? data.tag : req.tag !== undefined ? req.tag : execView(\\"tag\\", data);
  return _childMapper.oneElem(execView(Component0, {
    class: getBEMClassname(\\"list\\", data || {}),
    \\"content\\": _childMapper.oneElem(data.content !== undefined ? data.content : req.content !== undefined ? req.content : execView(\\"content\\", data))
  }));
}",
}
`;

exports[`transformTemplateToJsx name=[% name %] 1`] = `
Object {
  "deps": Array [],
  "isItValidJsx": true,
  "jsx": "export function Abacaba(data, req, execView) {
    return (
        <>
            <input
                name={data.name !== undefined ? data.name : req.name !== undefined ? req.name : execView(\\"name\\", data)}
                type=\\"hidden\\"
                value={
                    data.value !== undefined
                        ? data.value
                        : req.value !== undefined
                        ? req.value
                        : execView(\\"value\\", data)
                }
            />
        </>
    );
}
",
  "transformedJsx": "import _childMapper from \\"utils/child-mapper\\";
import _attributesGetter from \\"utils/attributes-getter\\";
export function Abacaba(data, req, execView) {
  return _childMapper.oneElem(\\"<input \\" + _attributesGetter({
    name: data.name !== undefined ? data.name : req.name !== undefined ? req.name : execView(\\"name\\", data),
    type: \\"hidden\\",
    value: data.value !== undefined ? data.value : req.value !== undefined ? req.value : execView(\\"value\\", data)
  }) + \\">\\");
}",
}
`;

exports[`transformTemplateToJsx plain string modifying 1`] = `
Object {
  "deps": Array [],
  "isItValidJsx": true,
  "jsx": "export function Abacabaabacaba() {
    return abacabaabacaba;
}
",
  "transformedJsx": "export function Abacabaabacaba() {
  return abacabaabacaba;
}",
}
`;

exports[`transformTemplateToJsx should be failed with attributes as a string 1`] = `
Object {
  "deps": Array [
    "CspNonce",
  ],
  "isItValidJsx": true,
  "jsx": "export function BBanner__adbcontent_iframe(data, req, execView) {
    return (
        <>
            <style _temp={execView(CspNonce, data)}>{\`
            @media screen and (max-width: \${
                data.minWidth !== undefined
                    ? data.minWidth
                    : req.minWidth !== undefined
                    ? req.minWidth
                    : execView(\\"minWidth\\", data)
            }px) {.banner__expand .banner__expand_inner {display: none;}}
        \`}</style>
        </>
    );
}
",
  "transformedJsx": "import _childMapper from \\"utils/child-mapper\\";
import _attributesGetter from \\"utils/attributes-getter\\";
export function BBanner__adbcontent_iframe(data, req, execView) {
  return _childMapper.oneElem(\\"<style \\" + _attributesGetter({
    _temp: execView(CspNonce, data)
  }) + \\">\\" + \`
            @media screen and (max-width: \${data.minWidth !== undefined ? data.minWidth : req.minWidth !== undefined ? req.minWidth : execView(\\"minWidth\\", data)}px) {.banner__expand .banner__expand_inner {display: none;}}
        \` + \\"</style>\\");
}",
}
`;

exports[`transformTemplateToJsx should be failed with scripts 1`] = `
Object {
  "deps": Array [],
  "isItValidJsx": true,
  "jsx": "export function BBanner__jsonapi_script(data, req) {
    return (
        <>
            var bannerData={data.banner}, bannerElem=document.querySelectorAll({\`.\${req.cls.full(\\"b-banner__wrap\\")}\`}
            )[0]; AwapsJsonAPI.Json.prototype.drawBanner(bannerElem, bannerData);
            AwapsJsonAPI.Json.prototype.expand(bannerData);
        </>
    );
}
",
  "transformedJsx": "import _childMapper from \\"utils/child-mapper\\";
export function BBanner__jsonapi_script(data, req) {
  return \\"var bannerData=\\" + _childMapper.oneElem(data.banner) + \\", bannerElem=document.querySelectorAll(\\" + \`.\${req.cls.full(\\"b-banner__wrap\\")}\` + \\")[0]; AwapsJsonAPI.Json.prototype.drawBanner(bannerElem, bannerData); AwapsJsonAPI.Json.prototype.expand(bannerData);\\";
}",
}
`;

exports[`transformTemplateToJsx should do nothing if no fillers 1`] = `
Object {
  "deps": Array [],
  "isItValidJsx": true,
  "jsx": "export function Abacaba() {
    return <span class=\\"afisha-event-film__content\\"></span>;
}
",
  "transformedJsx": "export function Abacaba() {
  return \\"<span class='afisha-event-film__content'></span>\\";
}",
}
`;

exports[`transformTemplateToJsx should format values correctly 1`] = `
Object {
  "deps": Array [
    "home/format",
  ],
  "isItValidJsx": true,
  "jsx": "export function Traffic(data) {
    return (
        <div class=\\"traffic__map-link\\">
            <img
                class=\\"traffic__map\\"
                src={\`https://\${format(data.src)}\`}
                width={data.width}
                height={data.height}
                alt=\\"\\"
            />
        </div>
    );
}
",
  "transformedJsx": "import _childMapper from \\"utils/child-mapper\\";
import _attributesGetter from \\"utils/attributes-getter\\";
export function Traffic(data) {
  return \\"<div class='traffic__map-link'>\\" + _childMapper.oneElem(\\"<img \\" + _attributesGetter({
    class: \\"traffic__map\\",
    src: \`https://\${format(data.src)}\`,
    width: data.width,
    height: data.height,
    alt: \\"\\"
  }) + \\">\\") + \\"</div>\\";
}",
}
`;

exports[`transformTemplateToJsx should modify bem classes 1`] = `
Object {
  "deps": Array [
    "home/getBEMClassname",
  ],
  "isItValidJsx": true,
  "jsx": "export function DeskNotifCard__pointsConfirm_screen_bigLayout(data) {
    return (
        <>
            <div class={getBEMClassname(\\"desk-notif-card__points-screen\\", data || {})}>{data[\\"confirm-link\\"]}</div>
        </>
    );
}
",
  "transformedJsx": "import _attributesGetter from \\"utils/attributes-getter\\";
import _childMapper from \\"utils/child-mapper\\";
export function DeskNotifCard__pointsConfirm_screen_bigLayout(data) {
  return _childMapper.oneElem(\\"<div \\" + _attributesGetter({
    class: getBEMClassname(\\"desk-notif-card__points-screen\\", data || {})
  }) + \\">\\" + _childMapper.oneElem(data[\\"confirm-link\\"]) + \\"</div>\\");
}",
}
`;

exports[`transformTemplateToJsx should modify filler 1`] = `
Object {
  "deps": Array [],
  "isItValidJsx": true,
  "jsx": "export function Abacaba(data) {
    return <span class=\\"afisha-event-film__content\\">{data.content}</span>;
}
",
  "transformedJsx": "import _childMapper from \\"utils/child-mapper\\";
export function Abacaba(data) {
  return \\"<span class='afisha-event-film__content'>\\" + _childMapper.oneElem(data.content) + \\"</span>\\";
}",
}
`;

exports[`transformTemplateToJsx should modify fillers with dot in property 1`] = `
Object {
  "deps": Array [],
  "isItValidJsx": true,
  "jsx": "export function Abacaba(data, req) {
    return (
        <div class={\`b-skin-bg b-skin-bg_newspring b-skin-bg_step_\${req.skin?.step}\`}>
            <div class=\\"b-newspring-bg-image\\"></div>
            <div class=\\"b-newspring-bike\\"></div>
            {req.skin?.decor}
        </div>
    );
}
",
  "transformedJsx": "import _attributesGetter from \\"utils/attributes-getter\\";
import _childMapper from \\"utils/child-mapper\\";
export function Abacaba(data, req) {
  var _req$skin, _req$skin2;

  return \\"<div \\" + _attributesGetter({
    class: \`b-skin-bg b-skin-bg_newspring b-skin-bg_step_\${(_req$skin = req.skin) === null || _req$skin === void 0 ? void 0 : _req$skin.step}\`
  }) + \\">\\" + (\\"<div class='b-newspring-bg-image'></div><div class='b-newspring-bike'></div>\\" + _childMapper.oneElem((_req$skin2 = req.skin) === null || _req$skin2 === void 0 ? void 0 : _req$skin2.decor)) + \\"</div>\\";
}",
}
`;

exports[`transformTemplateToJsx should modify self closing tags appropriately 1`] = `
Object {
  "deps": Array [
    "home/format",
  ],
  "isItValidJsx": true,
  "jsx": "export function Abacaba(data) {
    return <img src={\`//yastatic.net/weather/i/icons/funky/dark/48/\${format(data.icon)}.png\`} alt=\\"\\" />;
}
",
  "transformedJsx": "import _attributesGetter from \\"utils/attributes-getter\\";
export function Abacaba(data) {
  return \\"<img \\" + _attributesGetter({
    src: \`//yastatic.net/weather/i/icons/funky/dark/48/\${format(data.icon)}.png\`,
    alt: \\"\\"
  }) + \\">\\";
}",
}
`;

exports[`transformTemplateToJsx should modify several execView filler 1`] = `
Object {
  "deps": Array [
    "Answers__cardQuestion",
    "Answers__cardAnswer",
    "Answers__cardFooter",
  ],
  "isItValidJsx": true,
  "jsx": "export function Abacaba(data) {
    return (
        <div class=\\"answers__card-inner media-service__bg media-service__shadow\\">
            <Answers__cardQuestion {...data} />
            <Answers__cardAnswer {...data} />
            <Answers__cardFooter {...data} />
        </div>
    );
}
",
  "transformedJsx": "import _childMapper from \\"utils/child-mapper\\";
export function Abacaba(data, _temp, execView) {
  return \\"<div class='answers__card-inner media-service__bg media-service__shadow'>\\" + (_childMapper.oneElem(execView(Answers__cardQuestion, data)) + _childMapper.oneElem(execView(Answers__cardAnswer, data)) + _childMapper.oneElem(execView(Answers__cardFooter, data))) + \\"</div>\\";
}",
}
`;

exports[`transformTemplateToJsx should modify translation 1`] = `
Object {
  "deps": Array [
    "home/getBEMClassname",
  ],
  "isItValidJsx": true,
  "jsx": "export function DeskNotifCard__pointsConfirm_screen_bigLayout(data, req) {
    return (
        <>
            <div class={getBEMClassname(\\"desk-notif-card__points-screen\\", data || {})}>
                <div class=\\"desk-notif-card__points-question\\">{req.l10n(\\"traffic.personal.confirm\\")}</div>
                {data[\\"confirm-button\\"]}
                {data[\\"reject-button\\"]}
            </div>
        </>
    );
}
",
  "transformedJsx": "import _attributesGetter from \\"utils/attributes-getter\\";
import _childMapper from \\"utils/child-mapper\\";
export function DeskNotifCard__pointsConfirm_screen_bigLayout(data, req) {
  return _childMapper.oneElem(\\"<div \\" + _attributesGetter({
    class: getBEMClassname(\\"desk-notif-card__points-screen\\", data || {})
  }) + \\">\\" + (_childMapper.oneElem(\\"<div class='desk-notif-card__points-question'>\\" + _childMapper.oneElem(req.l10n('traffic.personal.confirm')) + \\"</div>\\") + _childMapper.oneElem(data[\\"confirm-button\\"]) + _childMapper.oneElem(data[\\"reject-button\\"])) + \\"</div>\\");
}",
}
`;

exports[`transformTemplateToJsx should modify with bem filler 1`] = `
Object {
  "deps": Array [
    "home/format",
  ],
  "isItValidJsx": true,
  "jsx": "export function Abacaba(data) {
    return (
        <>
            <span class={\`afisha-event-show__inner \${format(data.innerMix)}\`}>
                <span class={\`afisha-event-show__image \${format(data.imageMix)}\`} {...data.imageAttrs}></span>
                {data.price}
                <span class=\\"afisha-event-show__content\\">
                    <span class=\\"afisha-event-show__text\\">{data.content}</span>
                    {data.dates}
                </span>
            </span>
        </>
    );
}
",
  "transformedJsx": "import _childMapper from \\"utils/child-mapper\\";
import _attributesGetter from \\"utils/attributes-getter\\";
export function Abacaba(data) {
  return _childMapper.oneElem(\\"<span \\" + _attributesGetter({
    class: \`afisha-event-show__inner \${format(data.innerMix)}\`
  }) + \\">\\" + (_childMapper.oneElem(\\"<span \\" + _attributesGetter(Object.assign({
    class: \`afisha-event-show__image \${format(data.imageMix)}\`
  }, data.imageAttrs)) + \\"></span>\\") + _childMapper.oneElem(data.price) + _childMapper.oneElem(\\"<span class='afisha-event-show__content'>\\" + (_childMapper.oneElem(\\"<span class='afisha-event-show__text'>\\" + _childMapper.oneElem(data.content) + \\"</span>\\") + _childMapper.oneElem(data.dates)) + \\"</span>\\")) + \\"</span>\\");
}",
}
`;

exports[`transformTemplateToJsx should modify with cls 1`] = `
Object {
  "deps": Array [
    "Antiadb__treernd",
  ],
  "isItValidJsx": true,
  "jsx": "export function BBanner__adbcontent_iframe(data, req, execView) {
    return (
        <>
            {data[\\"b-banner__adbcontent_style_iframe\\"] !== undefined
                ? data[\\"b-banner__adbcontent_style_iframe\\"]
                : req[\\"b-banner__adbcontent_style_iframe\\"] !== undefined
                ? req[\\"b-banner__adbcontent_style_iframe\\"]
                : execView(\\"b-banner__adbcontent_style_iframe\\", data)}
            <div class={data.cls?.banner__parent}>
                <Antiadb__treernd {...data} />
                <div class={data.cls?.banner__content}>
                    <Antiadb__treernd {...data} />
                </div>
                <Antiadb__treernd {...data} />
            </div>
        </>
    );
}
",
  "transformedJsx": "import _attributesGetter from \\"utils/attributes-getter\\";
import _childMapper from \\"utils/child-mapper\\";
export function BBanner__adbcontent_iframe(data, req, execView) {
  var _data$cls, _data$cls2;

  return _childMapper.oneElem(data[\\"b-banner__adbcontent_style_iframe\\"] !== undefined ? data[\\"b-banner__adbcontent_style_iframe\\"] : req[\\"b-banner__adbcontent_style_iframe\\"] !== undefined ? req[\\"b-banner__adbcontent_style_iframe\\"] : execView(\\"b-banner__adbcontent_style_iframe\\", data)) + _childMapper.oneElem(\\"<div \\" + _attributesGetter({
    class: (_data$cls = data.cls) === null || _data$cls === void 0 ? void 0 : _data$cls.banner__parent
  }) + \\">\\" + (_childMapper.oneElem(execView(Antiadb__treernd, data)) + _childMapper.oneElem(\\"<div \\" + _attributesGetter({
    class: (_data$cls2 = data.cls) === null || _data$cls2 === void 0 ? void 0 : _data$cls2.banner__content
  }) + \\">\\" + _childMapper.oneElem(execView(Antiadb__treernd, data)) + \\"</div>\\") + _childMapper.oneElem(execView(Antiadb__treernd, data))) + \\"</div>\\");
}",
}
`;

exports[`transformTemplateToJsx should modify with inline styles 1`] = `
Object {
  "deps": Array [],
  "isItValidJsx": true,
  "jsx": "export function BBanner__adbcontent_iframe(data) {
    return (
        <>
            <style>{\`
            .\${data.cls?.banner__parent}{
                position:relative;
                width:\${data.sizernd?.width};
                height:\${data.sizernd?.height};
                margin:0 0 18px 20px;
            }
            .\${data.cls?.banner__size}{
                width:\${data.sizernd?.width};
                height:\${data.sizernd?.height};
                margin:0;
                display:block;
                border:none;
            }
        \`}</style>
        </>
    );
}
",
  "transformedJsx": "import _childMapper from \\"utils/child-mapper\\";
export function BBanner__adbcontent_iframe(data) {
  var _data$cls, _data$sizernd, _data$sizernd2, _data$cls2, _data$sizernd3, _data$sizernd4;

  return _childMapper.oneElem(\\"<style>\\" + \`
            .\${(_data$cls = data.cls) === null || _data$cls === void 0 ? void 0 : _data$cls.banner__parent}{
                position:relative;
                width:\${(_data$sizernd = data.sizernd) === null || _data$sizernd === void 0 ? void 0 : _data$sizernd.width};
                height:\${(_data$sizernd2 = data.sizernd) === null || _data$sizernd2 === void 0 ? void 0 : _data$sizernd2.height};
                margin:0 0 18px 20px;
            }
            .\${(_data$cls2 = data.cls) === null || _data$cls2 === void 0 ? void 0 : _data$cls2.banner__size}{
                width:\${(_data$sizernd3 = data.sizernd) === null || _data$sizernd3 === void 0 ? void 0 : _data$sizernd3.width};
                height:\${(_data$sizernd4 = data.sizernd) === null || _data$sizernd4 === void 0 ? void 0 : _data$sizernd4.height};
                margin:0;
                display:block;
                border:none;
            }
        \` + \\"</style>\\");
}",
}
`;

exports[`transformTemplateToJsx should modify without obvious source 1`] = `
Object {
  "deps": Array [],
  "isItValidJsx": true,
  "jsx": "export function Abacaba(data, req, execView) {
    return (
        <h1 class=\\"a11y-hidden\\">
            {data.label !== undefined ? data.label : req.label !== undefined ? req.label : execView(\\"label\\", data)}
        </h1>
    );
}
",
  "transformedJsx": "import _childMapper from \\"utils/child-mapper\\";
export function Abacaba(data, req, execView) {
  return \\"<h1 class='a11y-hidden'>\\" + _childMapper.oneElem(data.label !== undefined ? data.label : req.label !== undefined ? req.label : execView(\\"label\\", data)) + \\"</h1>\\";
}",
}
`;

exports[`transformTemplateToJsx should replace fillers inside string appropriately 1`] = `
Object {
  "deps": Array [],
  "isItValidJsx": true,
  "jsx": "export function Abacaba(data) {
    return \`\${data.content}\`;
}
",
  "transformedJsx": "export function Abacaba(data) {
  return \`\${data.content}\`;
}",
}
`;

exports[`transformTemplateToJsx should return fragment 1`] = `
Object {
  "deps": Array [],
  "isItValidJsx": true,
  "jsx": "export function Abacaba() {
    return (
        <>
            <div class=\\"stream-channels-list__categories\\"></div>
            <div class=\\"stream-channels-list__content\\"></div>
        </>
    );
}
",
  "transformedJsx": "export function Abacaba() {
  return \\"<div class='stream-channels-list__categories'></div><div class='stream-channels-list__content'></div>\\";
}",
}
`;

exports[`transformTemplateToJsx should work with bem:js 1`] = `
Object {
  "deps": Array [
    "home/getBEMClassname",
    "home/getBEMParams",
  ],
  "isItValidJsx": true,
  "jsx": "export function StreamInsertsMix(data) {
    return (
        <>
            <div
                class={getBEMClassname(\\"stream-inserts-mix\\", data || {})}
                {...data.attrs}
                data-bem={getBEMParams(data.js || {})}
            >
                <div class=\\"stream-inserts-mix__left\\">{data.dataLeft}</div>
                <div class=\\"stream-inserts-mix__center\\">{data.dataCenter}</div>
                <div class=\\"stream-inserts-mix__right\\">{data.dataRight}</div>
            </div>
        </>
    );
}
",
  "transformedJsx": "import _attributesGetter from \\"utils/attributes-getter\\";
import _childMapper from \\"utils/child-mapper\\";
export function StreamInsertsMix(data) {
  return _childMapper.oneElem(\\"<div \\" + _attributesGetter(Object.assign({
    class: getBEMClassname(\\"stream-inserts-mix\\", data || {})
  }, data.attrs, {
    \\"data-bem\\": getBEMParams(data.js || {})
  })) + \\">\\" + (_childMapper.oneElem(\\"<div class='stream-inserts-mix__left'>\\" + _childMapper.oneElem(data.dataLeft) + \\"</div>\\") + _childMapper.oneElem(\\"<div class='stream-inserts-mix__center'>\\" + _childMapper.oneElem(data.dataCenter) + \\"</div>\\") + _childMapper.oneElem(\\"<div class='stream-inserts-mix__right'>\\" + _childMapper.oneElem(data.dataRight) + \\"</div>\\")) + \\"</div>\\");
}",
}
`;

exports[`transformTemplateToJsx two fillers 1`] = `
Object {
  "deps": Array [
    "Card__title",
    "Card__subtitle",
  ],
  "isItValidJsx": true,
  "jsx": "export function Abacabaabacaba(data) {
    return (
        <>
            <Card__title {...data} />
            <Card__subtitle {...data} />
        </>
    );
}
",
  "transformedJsx": "import _childMapper from \\"utils/child-mapper\\";
export function Abacabaabacaba(data, _temp, execView) {
  return _childMapper.oneElem(execView(Card__title, data)) + _childMapper.oneElem(execView(Card__subtitle, data));
}",
}
`;
