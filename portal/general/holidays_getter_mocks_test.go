// Code generated by MockGen. DO NOT EDIT.
// Source: holidays_getter.go

// Package time is a generated GoMock package.
package time

import (
	models "a.yandex-team.ru/portal/avocado/libs/utils/base/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockHolidaysGetter is a mock of HolidaysGetter interface.
type MockHolidaysGetter struct {
	ctrl     *gomock.Controller
	recorder *MockHolidaysGetterMockRecorder
}

// MockHolidaysGetterMockRecorder is the mock recorder for MockHolidaysGetter.
type MockHolidaysGetterMockRecorder struct {
	mock *MockHolidaysGetter
}

// NewMockHolidaysGetter creates a new mock instance.
func NewMockHolidaysGetter(ctrl *gomock.Controller) *MockHolidaysGetter {
	mock := &MockHolidaysGetter{ctrl: ctrl}
	mock.recorder = &MockHolidaysGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHolidaysGetter) EXPECT() *MockHolidaysGetterMockRecorder {
	return m.recorder
}

// GetHoliday mocks base method.
func (m *MockHolidaysGetter) GetHoliday(arg0 []int, arg1 holidayDate) (models.HolidayInfo, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHoliday", arg0, arg1)
	ret0, _ := ret[0].(models.HolidayInfo)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// GetHoliday indicates an expected call of GetHoliday.
func (mr *MockHolidaysGetterMockRecorder) GetHoliday(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHoliday", reflect.TypeOf((*MockHolidaysGetter)(nil).GetHoliday), arg0, arg1)
}
