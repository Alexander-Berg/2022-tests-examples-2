// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package csp is a generated GoMock package.
package csp

import (
	models "a.yandex-team.ru/portal/avocado/libs/utils/base/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockcspParser is a mock of cspParser interface.
type MockcspParser struct {
	ctrl     *gomock.Controller
	recorder *MockcspParserMockRecorder
}

// MockcspParserMockRecorder is the mock recorder for MockcspParser.
type MockcspParserMockRecorder struct {
	mock *MockcspParser
}

// NewMockcspParser creates a new mock instance.
func NewMockcspParser(ctrl *gomock.Controller) *MockcspParser {
	mock := &MockcspParser{ctrl: ctrl}
	mock.recorder = &MockcspParserMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockcspParser) EXPECT() *MockcspParserMockRecorder {
	return m.recorder
}

// Parse mocks base method.
func (m *MockcspParser) Parse() models.CSP {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Parse")
	ret0, _ := ret[0].(models.CSP)
	return ret0
}

// Parse indicates an expected call of Parse.
func (mr *MockcspParserMockRecorder) Parse() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Parse", reflect.TypeOf((*MockcspParser)(nil).Parse))
}

// MockdeviceGetter is a mock of deviceGetter interface.
type MockdeviceGetter struct {
	ctrl     *gomock.Controller
	recorder *MockdeviceGetterMockRecorder
}

// MockdeviceGetterMockRecorder is the mock recorder for MockdeviceGetter.
type MockdeviceGetterMockRecorder struct {
	mock *MockdeviceGetter
}

// NewMockdeviceGetter creates a new mock instance.
func NewMockdeviceGetter(ctrl *gomock.Controller) *MockdeviceGetter {
	mock := &MockdeviceGetter{ctrl: ctrl}
	mock.recorder = &MockdeviceGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockdeviceGetter) EXPECT() *MockdeviceGetterMockRecorder {
	return m.recorder
}

// GetDevice mocks base method.
func (m *MockdeviceGetter) GetDevice() models.Device {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDevice")
	ret0, _ := ret[0].(models.Device)
	return ret0
}

// GetDevice indicates an expected call of GetDevice.
func (mr *MockdeviceGetterMockRecorder) GetDevice() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDevice", reflect.TypeOf((*MockdeviceGetter)(nil).GetDevice))
}
