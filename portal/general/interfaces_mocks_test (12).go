// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package conditions is a generated GoMock package.
package conditions

import (
	models "a.yandex-team.ru/portal/avocado/libs/utils/base/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockdeviceGetter is a mock of deviceGetter interface.
type MockdeviceGetter struct {
	ctrl     *gomock.Controller
	recorder *MockdeviceGetterMockRecorder
}

// MockdeviceGetterMockRecorder is the mock recorder for MockdeviceGetter.
type MockdeviceGetterMockRecorder struct {
	mock *MockdeviceGetter
}

// NewMockdeviceGetter creates a new mock instance.
func NewMockdeviceGetter(ctrl *gomock.Controller) *MockdeviceGetter {
	mock := &MockdeviceGetter{ctrl: ctrl}
	mock.recorder = &MockdeviceGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockdeviceGetter) EXPECT() *MockdeviceGetterMockRecorder {
	return m.recorder
}

// GetDevice mocks base method.
func (m *MockdeviceGetter) GetDevice() models.Device {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDevice")
	ret0, _ := ret[0].(models.Device)
	return ret0
}

// GetDevice indicates an expected call of GetDevice.
func (mr *MockdeviceGetterMockRecorder) GetDevice() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDevice", reflect.TypeOf((*MockdeviceGetter)(nil).GetDevice))
}

// MockmordaZoneGetter is a mock of mordaZoneGetter interface.
type MockmordaZoneGetter struct {
	ctrl     *gomock.Controller
	recorder *MockmordaZoneGetterMockRecorder
}

// MockmordaZoneGetterMockRecorder is the mock recorder for MockmordaZoneGetter.
type MockmordaZoneGetterMockRecorder struct {
	mock *MockmordaZoneGetter
}

// NewMockmordaZoneGetter creates a new mock instance.
func NewMockmordaZoneGetter(ctrl *gomock.Controller) *MockmordaZoneGetter {
	mock := &MockmordaZoneGetter{ctrl: ctrl}
	mock.recorder = &MockmordaZoneGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockmordaZoneGetter) EXPECT() *MockmordaZoneGetterMockRecorder {
	return m.recorder
}

// GetMordaZone mocks base method.
func (m *MockmordaZoneGetter) GetMordaZone() models.MordaZone {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMordaZone")
	ret0, _ := ret[0].(models.MordaZone)
	return ret0
}

// GetMordaZone indicates an expected call of GetMordaZone.
func (mr *MockmordaZoneGetterMockRecorder) GetMordaZone() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMordaZone", reflect.TypeOf((*MockmordaZoneGetter)(nil).GetMordaZone))
}

// MockrequestGetter is a mock of requestGetter interface.
type MockrequestGetter struct {
	ctrl     *gomock.Controller
	recorder *MockrequestGetterMockRecorder
}

// MockrequestGetterMockRecorder is the mock recorder for MockrequestGetter.
type MockrequestGetterMockRecorder struct {
	mock *MockrequestGetter
}

// NewMockrequestGetter creates a new mock instance.
func NewMockrequestGetter(ctrl *gomock.Controller) *MockrequestGetter {
	mock := &MockrequestGetter{ctrl: ctrl}
	mock.recorder = &MockrequestGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockrequestGetter) EXPECT() *MockrequestGetterMockRecorder {
	return m.recorder
}

// GetRequest mocks base method.
func (m *MockrequestGetter) GetRequest() models.Request {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRequest")
	ret0, _ := ret[0].(models.Request)
	return ret0
}

// GetRequest indicates an expected call of GetRequest.
func (mr *MockrequestGetterMockRecorder) GetRequest() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRequest", reflect.TypeOf((*MockrequestGetter)(nil).GetRequest))
}

// MockmordaContentGetter is a mock of mordaContentGetter interface.
type MockmordaContentGetter struct {
	ctrl     *gomock.Controller
	recorder *MockmordaContentGetterMockRecorder
}

// MockmordaContentGetterMockRecorder is the mock recorder for MockmordaContentGetter.
type MockmordaContentGetterMockRecorder struct {
	mock *MockmordaContentGetter
}

// NewMockmordaContentGetter creates a new mock instance.
func NewMockmordaContentGetter(ctrl *gomock.Controller) *MockmordaContentGetter {
	mock := &MockmordaContentGetter{ctrl: ctrl}
	mock.recorder = &MockmordaContentGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockmordaContentGetter) EXPECT() *MockmordaContentGetterMockRecorder {
	return m.recorder
}

// GetMordaContent mocks base method.
func (m *MockmordaContentGetter) GetMordaContent() models.MordaContent {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMordaContent")
	ret0, _ := ret[0].(models.MordaContent)
	return ret0
}

// GetMordaContent indicates an expected call of GetMordaContent.
func (mr *MockmordaContentGetterMockRecorder) GetMordaContent() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMordaContent", reflect.TypeOf((*MockmordaContentGetter)(nil).GetMordaContent))
}
