// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package compare is a generated GoMock package.
package compare

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockcalculatorProvider is a mock of calculatorProvider interface.
type MockcalculatorProvider struct {
	ctrl     *gomock.Controller
	recorder *MockcalculatorProviderMockRecorder
}

// MockcalculatorProviderMockRecorder is the mock recorder for MockcalculatorProvider.
type MockcalculatorProviderMockRecorder struct {
	mock *MockcalculatorProvider
}

// NewMockcalculatorProvider creates a new mock instance.
func NewMockcalculatorProvider(ctrl *gomock.Controller) *MockcalculatorProvider {
	mock := &MockcalculatorProvider{ctrl: ctrl}
	mock.recorder = &MockcalculatorProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockcalculatorProvider) EXPECT() *MockcalculatorProviderMockRecorder {
	return m.recorder
}

// GetFileMD5 mocks base method.
func (m *MockcalculatorProvider) GetFileMD5(path string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFileMD5", path)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFileMD5 indicates an expected call of GetFileMD5.
func (mr *MockcalculatorProviderMockRecorder) GetFileMD5(path interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFileMD5", reflect.TypeOf((*MockcalculatorProvider)(nil).GetFileMD5), path)
}
