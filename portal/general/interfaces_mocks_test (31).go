// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package spoksettings is a generated GoMock package.
package spoksettings

import (
	reflect "reflect"

	madm "a.yandex-team.ru/portal/avocado/libs/utils/madm/v2"
	gomock "github.com/golang/mock/gomock"
)

// MockdataGetter is a mock of dataGetter interface.
type MockdataGetter struct {
	ctrl     *gomock.Controller
	recorder *MockdataGetterMockRecorder
}

// MockdataGetterMockRecorder is the mock recorder for MockdataGetter.
type MockdataGetterMockRecorder struct {
	mock *MockdataGetter
}

// NewMockdataGetter creates a new mock instance.
func NewMockdataGetter(ctrl *gomock.Controller) *MockdataGetter {
	mock := &MockdataGetter{ctrl: ctrl}
	mock.recorder = &MockdataGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockdataGetter) EXPECT() *MockdataGetterMockRecorder {
	return m.recorder
}

// StaticDataAll mocks base method.
func (m *MockdataGetter) StaticDataAll(exportName madm.ExportName) (madm.Items, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StaticDataAll", exportName)
	ret0, _ := ret[0].(madm.Items)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StaticDataAll indicates an expected call of StaticDataAll.
func (mr *MockdataGetterMockRecorder) StaticDataAll(exportName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StaticDataAll", reflect.TypeOf((*MockdataGetter)(nil).StaticDataAll), exportName)
}
