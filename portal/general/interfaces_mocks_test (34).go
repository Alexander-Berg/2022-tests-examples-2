// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package yacookies is a generated GoMock package.
package yacookies

import (
	reflect "reflect"

	models "a.yandex-team.ru/portal/avocado/libs/utils/base/models"
	time "a.yandex-team.ru/portal/avocado/libs/utils/time"
	gomock "github.com/golang/mock/gomock"
)

// MockoriginRequestKeeper is a mock of originRequestKeeper interface.
type MockoriginRequestKeeper struct {
	ctrl     *gomock.Controller
	recorder *MockoriginRequestKeeperMockRecorder
}

// MockoriginRequestKeeperMockRecorder is the mock recorder for MockoriginRequestKeeper.
type MockoriginRequestKeeperMockRecorder struct {
	mock *MockoriginRequestKeeper
}

// NewMockoriginRequestKeeper creates a new mock instance.
func NewMockoriginRequestKeeper(ctrl *gomock.Controller) *MockoriginRequestKeeper {
	mock := &MockoriginRequestKeeper{ctrl: ctrl}
	mock.recorder = &MockoriginRequestKeeperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockoriginRequestKeeper) EXPECT() *MockoriginRequestKeeperMockRecorder {
	return m.recorder
}

// GetOriginRequest mocks base method.
func (m *MockoriginRequestKeeper) GetOriginRequest() (*models.OriginRequest, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOriginRequest")
	ret0, _ := ret[0].(*models.OriginRequest)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOriginRequest indicates an expected call of GetOriginRequest.
func (mr *MockoriginRequestKeeperMockRecorder) GetOriginRequest() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOriginRequest", reflect.TypeOf((*MockoriginRequestKeeper)(nil).GetOriginRequest))
}

// MockrequestGetter is a mock of requestGetter interface.
type MockrequestGetter struct {
	ctrl     *gomock.Controller
	recorder *MockrequestGetterMockRecorder
}

// MockrequestGetterMockRecorder is the mock recorder for MockrequestGetter.
type MockrequestGetterMockRecorder struct {
	mock *MockrequestGetter
}

// NewMockrequestGetter creates a new mock instance.
func NewMockrequestGetter(ctrl *gomock.Controller) *MockrequestGetter {
	mock := &MockrequestGetter{ctrl: ctrl}
	mock.recorder = &MockrequestGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockrequestGetter) EXPECT() *MockrequestGetterMockRecorder {
	return m.recorder
}

// GetRequest mocks base method.
func (m *MockrequestGetter) GetRequest() models.Request {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRequest")
	ret0, _ := ret[0].(models.Request)
	return ret0
}

// GetRequest indicates an expected call of GetRequest.
func (mr *MockrequestGetterMockRecorder) GetRequest() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRequest", reflect.TypeOf((*MockrequestGetter)(nil).GetRequest))
}

// MockyaCookiesParser is a mock of yaCookiesParser interface.
type MockyaCookiesParser struct {
	ctrl     *gomock.Controller
	recorder *MockyaCookiesParserMockRecorder
}

// MockyaCookiesParserMockRecorder is the mock recorder for MockyaCookiesParser.
type MockyaCookiesParserMockRecorder struct {
	mock *MockyaCookiesParser
}

// NewMockyaCookiesParser creates a new mock instance.
func NewMockyaCookiesParser(ctrl *gomock.Controller) *MockyaCookiesParser {
	mock := &MockyaCookiesParser{ctrl: ctrl}
	mock.recorder = &MockyaCookiesParserMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockyaCookiesParser) EXPECT() *MockyaCookiesParserMockRecorder {
	return m.recorder
}

// GetYandexUIDSalted mocks base method.
func (m *MockyaCookiesParser) GetYandexUIDSalted(yandexUID string) uint32 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetYandexUIDSalted", yandexUID)
	ret0, _ := ret[0].(uint32)
	return ret0
}

// GetYandexUIDSalted indicates an expected call of GetYandexUIDSalted.
func (mr *MockyaCookiesParserMockRecorder) GetYandexUIDSalted(yandexUID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetYandexUIDSalted", reflect.TypeOf((*MockyaCookiesParser)(nil).GetYandexUIDSalted), yandexUID)
}

// Parse mocks base method.
func (m *MockyaCookiesParser) Parse() (models.YaCookies, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Parse")
	ret0, _ := ret[0].(models.YaCookies)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Parse indicates an expected call of Parse.
func (mr *MockyaCookiesParserMockRecorder) Parse() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Parse", reflect.TypeOf((*MockyaCookiesParser)(nil).Parse))
}

// MocktimeProvider is a mock of timeProvider interface.
type MocktimeProvider struct {
	ctrl     *gomock.Controller
	recorder *MocktimeProviderMockRecorder
}

// MocktimeProviderMockRecorder is the mock recorder for MocktimeProvider.
type MocktimeProviderMockRecorder struct {
	mock *MocktimeProvider
}

// NewMocktimeProvider creates a new mock instance.
func NewMocktimeProvider(ctrl *gomock.Controller) *MocktimeProvider {
	mock := &MocktimeProvider{ctrl: ctrl}
	mock.recorder = &MocktimeProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MocktimeProvider) EXPECT() *MocktimeProviderMockRecorder {
	return m.recorder
}

// GetCurrentTime mocks base method.
func (m *MocktimeProvider) GetCurrentTime() time.Time {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCurrentTime")
	ret0, _ := ret[0].(time.Time)
	return ret0
}

// GetCurrentTime indicates an expected call of GetCurrentTime.
func (mr *MocktimeProviderMockRecorder) GetCurrentTime() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCurrentTime", reflect.TypeOf((*MocktimeProvider)(nil).GetCurrentTime))
}
