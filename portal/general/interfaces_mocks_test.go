// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package httpcache is a generated GoMock package.
package httpcache

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MocklogCtx is a mock of logCtx interface.
type MocklogCtx struct {
	ctrl     *gomock.Controller
	recorder *MocklogCtxMockRecorder
}

// MocklogCtxMockRecorder is the mock recorder for MocklogCtx.
type MocklogCtxMockRecorder struct {
	mock *MocklogCtx
}

// NewMocklogCtx creates a new mock instance.
func NewMocklogCtx(ctrl *gomock.Controller) *MocklogCtx {
	mock := &MocklogCtx{ctrl: ctrl}
	mock.recorder = &MocklogCtxMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MocklogCtx) EXPECT() *MocklogCtxMockRecorder {
	return m.recorder
}

// AddIncomingResponse mocks base method.
func (m *MocklogCtx) AddIncomingResponse(arg0, arg1 int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AddIncomingResponse", arg0, arg1)
}

// AddIncomingResponse indicates an expected call of AddIncomingResponse.
func (mr *MocklogCtxMockRecorder) AddIncomingResponse(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddIncomingResponse", reflect.TypeOf((*MocklogCtx)(nil).AddIncomingResponse), arg0, arg1)
}

// AddOutgoingRequest mocks base method.
func (m *MocklogCtx) AddOutgoingRequest(arg0 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AddOutgoingRequest", arg0)
}

// AddOutgoingRequest indicates an expected call of AddOutgoingRequest.
func (mr *MocklogCtxMockRecorder) AddOutgoingRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddOutgoingRequest", reflect.TypeOf((*MocklogCtx)(nil).AddOutgoingRequest), arg0)
}

// Error mocks base method.
func (m *MocklogCtx) Error(arg0 error) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Error", arg0)
}

// Error indicates an expected call of Error.
func (mr *MocklogCtxMockRecorder) Error(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Error", reflect.TypeOf((*MocklogCtx)(nil).Error), arg0)
}

// Warn mocks base method.
func (m *MocklogCtx) Warn(arg0 error) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Warn", arg0)
}

// Warn indicates an expected call of Warn.
func (mr *MocklogCtxMockRecorder) Warn(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Warn", reflect.TypeOf((*MocklogCtx)(nil).Warn), arg0)
}
