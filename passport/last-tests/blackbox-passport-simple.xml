<test>
    <variables>

        <path>
            <instance id="blackbox">blackbox</instance>
        </path>

        <cgi name="format">
            <instance id="xml">xml</instance>
            <instance id="json">json</instance>
        </cgi>

        <cgi name="method">
            <instance id="loginoccupation">loginoccupation</instance>
            <instance id="userinfo">userinfo</instance>
            <instance id="phone_operations">phone_operations</instance>
            <instance id="test_pwd_hashes">test_pwd_hashes</instance>
            <instance id="get_track">get_track</instance>
            <instance id="email_bindings">email_bindings</instance>
            <instance id="get_all_tracks">get_all_tracks</instance>
            <instance id="yakey_backup">yakey_backup</instance>
            <instance id="get_recovery_keys">get_recovery_keys</instance>
            <instance id="check_has_plus">check_has_plus</instance>
            <instance id="family_info">family_info</instance>
            <instance id="find_by_phone_numbers">find_by_phone_numbers</instance>
            <instance id="generate_public_id">generate_public_id</instance>
        </cgi>

        <cgi name="uid">
            <instance id="junit-test">70500</instance>
            <instance id="dot.user">70501</instance>
            <instance id="two_pwd_user">70499</instance>
            <instance id="invalid">invalid</instance>
            <instance id="public_id_v1">70502</instance>
            <instance id="doesntexist">100500</instance>

            <instance id="two_msgs">70470</instance>
            <instance id="two_msgs2">70480</instance>
            <instance id="three_msgs">70499</instance>

            <instance id="two_phones">4001681477</instance>
            <instance id="one_phone">71001</instance>
            <instance id="unbound_phone">4001356135</instance>
        </cgi>

        <cgi name="password">
            <instance id="qwerty">qwerty</instance>
            <instance id="qweqwe">qweqwe</instance>
        </cgi>

        <cgi name="hashes">
            <instance id="qwerty1">MTokMSQySWdPL2dodyRVeWpacllmeHl4dmdXMDlEMnp6Qncu</instance>
            <instance id="qwerty2">MTokMSRYaEl2enQvNCRLMG1wR2VNbnJEYll6NGc4QXExc3gw</instance>
            <instance id="qwerty12">MTokMSQySWdPL2dodyRVeWpacllmeHl4dmdXMDlEMnp6Qncu,MTokMSRYaEl2enQvNCRLMG1wR2VNbnJEYll6NGc4QXExc3gw</instance>
            <instance id="qweqwe1">MTokMSRPaVJqUXRvayRYYTlKWHRCYkxIb0piTXJ4VWlDU1Ux</instance>
            <instance id="qweqwe2">MTokMSRQTnNwWnMvMiRMMDZCNVpEV1hreUNnOGtQcVcwdnAw</instance>
            <instance id="qweqwe12">MTokMSRPaVJqUXRvayRYYTlKWHRCYkxIb0piTXJ4VWlDU1Ux,MTokMSRQTnNwWnMvMiRMMDZCNVpEV1hreUNnOGtQcVcwdnAw</instance>
            <instance id="qwerty1qweqwe2">MTokMSQySWdPL2dodyRVeWpacllmeHl4dmdXMDlEMnp6Qncu,MTokMSRQTnNwWnMvMiRMMDZCNVpEV1hreUNnOGtQcVcwdnAw</instance>
            <instance id="qwerty2qweqwe1">MTokMSRYaEl2enQvNCRLMG1wR2VNbnJEYll6NGc4QXExc3gw,MTokMSRPaVJqUXRvayRYYTlKWHRCYkxIb0piTXJ4VWlDU1Ux</instance>
            <instance id="bad">dsvrhdtsvhdfjdfj==</instance>
            <instance id="empty"></instance>
            <instance id="qwerty5_junit">NTokMSRiNVhtNXgyTiRyeDFvTktWTTZBaEs3b2hibFJWbk8w</instance>
            <instance id="qwerty5_dotuser">NTokMSRwRzd1d040QSRuNmJzRmswYjNZSjlKZHdZOVZzQWIu</instance>
            <instance id="qweqwe5_junit">NTokMSRJNWUyLzRHbiRCMXNINy5PSTA0Qy9RaWpGTDA5SkQx</instance>
            <instance id="qweqwe5_dotuser">NTokMSRJelRtL01TNyQ2Y05oNXljLnR5STczZVNvc0xHOTMu</instance>
        </cgi>

        <cgi name="logins">
            <instance id="list1">a,a&#10;b,,@mail,R-e-g-i-s-t,Google,colbacek,broot, yandex@mail.ru,kukutz@gmail.com, pdd@okna.ru,pdd@oxna.ru,100@oxna.ru,qwe@xn--80aalbavOOkw.xn--P1ai,qwe@Админкапдд.Рф,asd@xn--80aALBAvookw.xN--P1ai, mobi-test,uid-nxxo4use,uidosavr,uid-zhopa,klm,lsurn,phne.6XgvvRml,bbtst_reserved,malice@kinopoisk.ru,google@kinopoisk.ru,dot-user.gs@galatasaray.net,,yambot-7xoqpizd,kOLOnkish-MYuHUIaq,fuck30ctxkxmwBB2gh63h1rkft,malice,malice-public,junit-test-old,root-login,ТестовыйШкольник</instance>
            <instance id="list2">A,a	b,,@MAIL,r-E.G-i-s.t,gOOgle,coLBacek,BrOOt, yandex@MAIL.ru,Kukutz@GMAIL.com, Pdd@okna.ru,pdD@OxnA.ru,100@oXna.rU,qwe@xn--80AAlbavookW.XN--p1aI,qwe@АдминкаПДД.рФ,asd@xn--80aALbavookw.xn--P1AI, Mobi.Test,uid.nxxo4USE,UIDOsavr,UID-zhopa,Klm,Lsurn,PHNE-6xgVVrmL,BbTst_Reserved,Malice@Kinopoisk.RU,gOOgle@KinoPoisk.ru,dot.user.GS@GalataSaray.net,,yamBOT-7xoqPIZD,kolonkISH-MYUhuiaq,fuck30ctXKXmwbb2gh63h1RKFt,MALICE,MALICE.Public,Junit-Test.old,Root.Login,теСТОвыйшКОЛьниК</instance>
            <instance id="list3">a,A&#09;b,,@mail,R-e-g-I.S.T,GOOGLE,colbaCEK,bROoT, Yandex@mail.ru,KUKUTZ@Gmail.Com, pDD@okna.ru,pDd@oXna.Ru,100@oKNa.Ru,qwe@xn--80aalbAVookw.Xn--p1Ai,qwe@адмИНКАпдд.РФ,asd@xn--80aalbavOOKw.Xn--P1ai, mObI.TeSt,UID-nxxo4use,UIDoSaVr,uid.ZHopa,KLM,LSURN,phne-6xGvvRMl,bBTst_rEsErvEd,malice@KINOpoisk.Ru,GooGle@KinoPoisk.ru,dot-user-gs@Galatasaray.Net,,YambOt-7XOqPizd,kOlOnKish-myuhuiaQ,FUCK30ctxkxmwbb2gh63h1rkfT,Malice,mAlice.PUBlIc,junit.test-Old,rOOt-lOgIn,тестовыйшкольник</instance>
        </cgi>

        <cgi name="ignore_stoplist">
            <instance id="yes">yes</instance>
            <instance id="no">No</instance>
            <instance id="one">1</instance>
            <instance id="empty"></instance>
            <instance id="junk">wont_tell</instance>
        </cgi>

        <cgi name="is_pdd">
            <instance id="true">tRUe</instance>
            <instance id="no">No</instance>
            <instance id="one">1</instance>
            <instance id="empty"></instance>
            <instance id="junk">wont_tell</instance>
        </cgi>

        <cgi name="login">
            <instance id="tests">test*</instance>
            <instance id="test43">Test43</instance>
            <instance id="test44">test44</instance>
            <instance id="othertester">OtherTester</instance>
            <instance id="qwe">qwe</instance>
            <instance id="any">*</instance>
            <instance id="empty"></instance>
        </cgi>

        <cgi name="userip">
            <instance id="localhost">127.0.0.1</instance>
        </cgi>

        <cgi name="getphonebindings">
            <instance id="current">current</instance>
            <instance id="history">history</instance>
            <instance id="all">all</instance>
            <instance id="unbound">unbound</instance>
            <instance id="unknown">unknown</instance>
        </cgi>

        <cgi name="finished_before">
            <instance id="with_data">2065707484</instance>
            <instance id="no_data">2065707482</instance>
            <instance id="empty"></instance>
        </cgi>

        <cgi name="track_id">
            <instance id="normal">13093f924f16b855c8d1f8e418e41138</instance>
            <instance id="bad1">13093f924f16b855c8d1f8e418e41131</instance>
            <instance id="bad2">13093f924f16b855c8d1f8e418e41138ad</instance>
            <instance id="bad3">13093f924</instance>
            <instance id="bad4">13093f924f16b855c8d1f8e418e41</instance>
            <instance id="bad5">13093f924f16b855c8d1f8e418e41138---</instance>
            <instance id="bad6">13093f924f16b855c8d1f8e418e41138+</instance>
        </cgi>

        <cgi name="email">
            <instance id="cerevra_yt">cerevra@yandex-team.ru</instance>
            <instance id="bad">yyyyy@ttt.com</instance>
        </cgi>

        <cgi name="phone_number">
            <instance id="1">79161111111</instance>
            <instance id="2">79162222222</instance>
            <instance id="has_plus">79032426488</instance>
            <instance id="has_plus_blocked">79688138198</instance>
            <instance id="pdd_has_plus">79163333333</instance>
            <instance id="sh1_blocked__sh2_ok">79164444444</instance>
            <instance id="bad">some shit</instance>
        </cgi>

        <cgi name="meta">
            <instance id="true">tRue</instance>
            <instance id="false">faLse</instance>
        </cgi>

        <cgi name="key_id">
            <instance id="key1">AAECAwQFBgcICQoLDA0</instance>
            <instance id="key1pad">AAECAwQFBgcICQoLDA0=</instance>
            <instance id="key2">BAMCAQAFBgcICQoLDA2qu8zd7v8+/+</instance>
            <instance id="key2pad">BAMCAQAFBgcICQoLDA2qu8zd7v8+/+=</instance>
            <instance id="wrong_key">M1ssIn9_K3Y-1</instance>
        </cgi>

        <cgi name="family_id">
            <instance id="f1">f1</instance>
            <instance id="f2">f2</instance>
            <instance id="f3">f3</instance>
            <instance id="full_family">f120936</instance>
        </cgi>

        <cgi name="get_allow_more_kids">
            <instance id="yes">yes</instance>
        </cgi>

        <cgi name="get_place">
            <instance id="yes">yes</instance>
        </cgi>

        <cgi name="numbers">
            <instance id="bad">123,bad,4567</instance>
            <instance id="empty">,,</instance>
            <!--
            02 non existing number,
            79161112233 in users external_attributes but not in phone_bindings, plus pdd, plus disabled pdd domain user
            79161111111 in phone_bindings but not in external_attributes, plus disabled pdd user
            79032426488 many uids, some not bound, some missin/disabled/need_pwd_create/need_pwd_change, 2 ok
            -->
            <instance id="some">02,79161111111,79161112233,79032426488,79161112233,</instance>
            <instance id="same">!02!,7-916-111-11-11,7(916)111-2233,7903 242 6488;,(7 916) 111 22 33,</instance>
        </cgi>

        <cgi name="version">
            <instance id="0">0</instance>
            <instance id="1">1</instance>
            <instance id="bad">no</instance>
        </cgi>

        <cgi name="get_members_info">
            <instance id="all">all</instance>
            <instance id="kids">kids</instance>
            <instance id="children">children</instance>
            <instance id="adults">adults</instance>
            <instance id="invalid">someone</instance>
        </cgi>

        <cgi name="attributes">
            <instance id="is_child">210</instance>
        </cgi>

        <cgi name="user_ticket" func="gen_user_ticket">
            <instance id="42">
                <arg name="default_uid">42</arg>
            </instance>
            <instance id="4053749013">
                <arg name="default_uid">4053749013</arg>
            </instance>
            <instance id="70496">
                <arg name="default_uid">70496</arg>
            </instance>
            <instance id="bad_default_uid">
                <arg name="default_uid">0</arg>
            </instance>
            <instance id="invalid">
                <arg name="const_value">foobar</arg>
            </instance>
        </cgi>

        <!-- results: -->

        <result name="list_stop_nopdd">
            <body func="matchxpath">
                <arg name="/doc/exception">dontmatch</arg>
                <arg name="/doc/error">dontmatch</arg>
                <arg name="count(/doc/login)">34</arg>
                <arg name="/doc/login[translate(@name,'A','a')='a']">occupied</arg>
                <arg name="/doc/login[translate(@name,'A','a')='a']/@uid">1865</arg>
                <arg name="/doc/login[translate(@name,'AB	&#10;&#09;','ab   ')='a b']">malformed</arg>
                <arg name="/doc/login[translate(@name,'AB	&#10;&#09;','ab   ')='a b']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'MAIL','mail')='@mail']">malformed</arg>
                <arg name="/doc/login[translate(@name,'MAIL','mail')='@mail']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'REGIST.','regist-')='r-e-g-i-s-t']">occupied</arg>
                <arg name="/doc/login[translate(@name,'REGIST.','regist-')='r-e-g-i-s-t']/@uid">3000358237</arg>
                <arg name="/doc/login[translate(@name,'GOLE','gole')='google']">stoplist</arg>
                <arg name="/doc/login[translate(@name,'GOLE','gole')='google']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'COLBAEK','colbaek')='colbacek']">free</arg>
                <arg name="/doc/login[translate(@name,'COLBAEK','colbaek')='colbacek']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'BROT','brot')='broot']">stoplist</arg>
                <arg name="/doc/login[translate(@name,'BROT','brot')='broot']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'YANDEXMILRU','yandexmilru')='yandex@mail.ru']">free</arg>
                <arg name="/doc/login[translate(@name,'YANDEXMILRU','yandexmilru')='yandex@mail.ru']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'KUTZGMAILCO','kutzgmailco')='kukutz@gmail.com']">occupied</arg>
                <arg name="/doc/login[translate(@name,'KUTZGMAILCO','kutzgmailco')='kukutz@gmail.com']/@uid">589</arg>
                <arg name="/doc/login[translate(@name,'PDOKNARU','pdoknaru')='pdd@okna.ru']">free</arg>
                <arg name="/doc/login[translate(@name,'PDOKNARU','pdoknaru')='pdd@okna.ru']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'PDOXKNARU','pdoxknaru')='pdd@oxna.ru']">free</arg>
                <arg name="/doc/login[translate(@name,'PDOXKNARU','pdoxknaru')='pdd@oxna.ru']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'OKXxNARU','okkknaru')='100@okna.ru']">free</arg>
                <arg name="/doc/login[translate(@name,'OKXxNARU','okkknaru')='100@okna.ru']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'QWEXNALBVOKPI','qwexnalbvokpi')='qwe@xn--80aalbavookw.xn--p1ai']">free</arg>
                <arg name="/doc/login[translate(@name,'QWEXNALBVOKPI','qwexnalbvokpi')='qwe@xn--80aalbavookw.xn--p1ai']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'QWEАДМИНКПРФ','qweадминкпрф')='qwe@админкапдд.рф']">free</arg>
                <arg name="/doc/login[translate(@name,'QWEАДМИНКПРФ','qweадминкпрф')='qwe@админкапдд.рф']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'ASDXNLBVOKPI','asdxnlbvokpi')='asd@xn--80aalbavookw.xn--p1ai']">free</arg>
                <arg name="/doc/login[translate(@name,'ASDXNLBVOKPI','asdxnlbvokpi')='asd@xn--80aalbavookw.xn--p1ai']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'MOBITES.','mobites-')='mobi-test']">stoplist</arg>
                <arg name="/doc/login[translate(@name,'MOBITES.','mobites-')='mobi-test']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'UIDNXOSE.','uidnxose-')='uid-nxxo4use']">stoplist</arg>
                <arg name="/doc/login[translate(@name,'UIDNXOSE.','uidnxose-')='uid-nxxo4use']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'UIDZHOPA.','uidzhopa-')='uid-zhopa']">stoplist</arg>
                <arg name="/doc/login[translate(@name,'UIDZHOPA.','uidzhopa-')='uid-zhopa']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'UIDOSAVR','uidosavr')='uidosavr']">free</arg>
                <arg name="/doc/login[translate(@name,'UIDOSAVR','uidosavr')='uidosavr']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'BTRESVD','btresvd')='bbtst_reserved']">occupied</arg>
                <arg name="/doc/login[translate(@name,'BTRESVD','btresvd')='bbtst_reserved']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'KLM','klm')='klm']">stoplist</arg>
                <arg name="/doc/login[translate(@name,'KLM','klm')='klm']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'LSURN','lsurn')='lsurn']">stoplist</arg>
                <arg name="/doc/login[translate(@name,'LSURN','lsurn')='lsurn']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'PHNEXGVRML.','phnexgvrml-')='phne-6xgvvrml']">stoplist</arg>
                <arg name="/doc/login[translate(@name,'PHNEXGVRML.','phnexgvrml-')='phne-6xgvvrml']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'MALICEKNOPSRU','maliceknopsru')='malice@kinopoisk.ru']">occupied</arg>
                <arg name="/doc/login[translate(@name,'MALICEKNOPSRU','maliceknopsru')='malice@kinopoisk.ru']/@uid">70505</arg>
                <arg name="/doc/login[translate(@name,'GOLEKINPISRU','golekinpisru')='google@kinopoisk.ru']">free</arg>
                <arg name="/doc/login[translate(@name,'GOLEKINPISRU','golekinpisru')='google@kinopoisk.ru']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'DOTUSERGALYN-','dotusergalyn.')='dot.user.gs@galatasaray.net']">occupied</arg>
                <arg name="/doc/login[translate(@name,'DOTUSERGALYN-','dotusergalyn.')='dot.user.gs@galatasaray.net']/@uid">70501</arg>
                <arg name="/doc/login[translate(@name,'YAMBOTXQPIZD','yambotxqpizd')='yambot-7xoqpizd']">stoplist</arg>
                <arg name="/doc/login[translate(@name,'YAMBOTXQPIZD','yambotxqpizd')='yambot-7xoqpizd']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'KOLNISHMYHUAQ','kolnishmyhuaq')='kolonkish-myuhuiaq']">occupied</arg>
                <arg name="/doc/login[translate(@name,'KOLNISHMYHUAQ','kolnishmyhuaq')='kolonkish-myuhuiaq']/@uid">4034756320</arg>
                <arg name="/doc/login[translate(@name,'FUCKTXMWBGHR','fucktxmwbghr')='fuck30ctxkxmwbb2gh63h1rkft']">public_id</arg>
                <arg name="/doc/login[translate(@name,'FUCKTXMWBGHR','fucktxmwbghr')='fuck30ctxkxmwbb2gh63h1rkft']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'MALICE','malice')='malice']">occupied</arg>
                <arg name="/doc/login[translate(@name,'MALICE','malice')='malice']/@uid">70493</arg>
                <arg name="/doc/login[translate(@name,'MALICEPUB.','malicepub-')='malice-public']">public_id</arg>
                <arg name="/doc/login[translate(@name,'MALICEPUB.','malicepub-')='malice-public']/@uid">70495</arg>
                <arg name="/doc/login[translate(@name,'JUNITESOLD.','junitesold-')='junit-test-old']">public_id</arg>
                <arg name="/doc/login[translate(@name,'JUNITESOLD.','junitesold-')='junit-test-old']/@uid">70500</arg>
                <arg name="/doc/login[translate(@name,'ROTLGIN.','rotlgin-')='root-login']">stoplist</arg>
                <arg name="/doc/login[translate(@name,'ROTLGIN.','rotlgin-')='root-login']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'ТЕСОВЫЙШКЛНИ','тесовыйшклни')='тестовыйшкольник']">occupied</arg>
                <arg name="/doc/login[translate(@name,'ТЕСОВЫЙШКЛНИ','тесовыйшклни')='тестовыйшкольник']/@uid">71012</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/exception">dontmatch</arg>
                <arg name="/error">dontmatch</arg>
                <arg name="/logins" res_mod="key_count">34</arg>
                <!-- TODO No translate() in json point -->
            </jsonBody>
        </result>

        <result name="list_nostop_nopdd">
            <body func="matchxpath">
                <arg name="/doc/exception">dontmatch</arg>
                <arg name="/doc/error">dontmatch</arg>
                <arg name="count(/doc/login)">34</arg>
                <arg name="/doc/login[translate(@name,'A','a')='a']">occupied</arg>
                <arg name="/doc/login[translate(@name,'A','a')='a']/@uid">1865</arg>
                <arg name="/doc/login[translate(@name,'AB	&#10;&#09;','ab   ')='a b']">malformed</arg>
                <arg name="/doc/login[translate(@name,'AB	&#10;&#09;','ab   ')='a b']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'MAIL','mail')='@mail']">malformed</arg>
                <arg name="/doc/login[translate(@name,'MAIL','mail')='@mail']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'REGIST.','regist-')='r-e-g-i-s-t']">occupied</arg>
                <arg name="/doc/login[translate(@name,'REGIST.','regist-')='r-e-g-i-s-t']/@uid">3000358237</arg>
                <arg name="/doc/login[translate(@name,'GOLE','gole')='google']">occupied</arg>
                <arg name="/doc/login[translate(@name,'GOLE','gole')='google']/@uid">67507</arg>
                <arg name="/doc/login[translate(@name,'COLBAEK','colbaek')='colbacek']">free</arg>
                <arg name="/doc/login[translate(@name,'COLBAEK','colbaek')='colbacek']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'BROT','brot')='broot']">free</arg>
                <arg name="/doc/login[translate(@name,'BROT','brot')='broot']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'YANDEXMILRU','yandexmilru')='yandex@mail.ru']">free</arg>
                <arg name="/doc/login[translate(@name,'YANDEXMILRU','yandexmilru')='yandex@mail.ru']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'KUTZGMAILCO','kutzgmailco')='kukutz@gmail.com']">occupied</arg>
                <arg name="/doc/login[translate(@name,'KUTZGMAILCO','kutzgmailco')='kukutz@gmail.com']/@uid">589</arg>
                <arg name="/doc/login[translate(@name,'PDOKNARU','pdoknaru')='pdd@okna.ru']">free</arg>
                <arg name="/doc/login[translate(@name,'PDOKNARU','pdoknaru')='pdd@okna.ru']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'PDOXKNARU','pdoxknaru')='pdd@oxna.ru']">free</arg>
                <arg name="/doc/login[translate(@name,'PDOXKNARU','pdoxknaru')='pdd@oxna.ru']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'OKXxNARU','okkknaru')='100@okna.ru']">free</arg>
                <arg name="/doc/login[translate(@name,'OKXxNARU','okkknaru')='100@okna.ru']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'QWEXNALBVOKPI','qwexnalbvokpi')='qwe@xn--80aalbavookw.xn--p1ai']">free</arg>
                <arg name="/doc/login[translate(@name,'QWEXNALBVOKPI','qwexnalbvokpi')='qwe@xn--80aalbavookw.xn--p1ai']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'QWEАДМИНКПРФ','qweадминкпрф')='qwe@админкапдд.рф']">free</arg>
                <arg name="/doc/login[translate(@name,'QWEАДМИНКПРФ','qweадминкпрф')='qwe@админкапдд.рф']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'ASDXNLBVOKPI','asdxnlbvokpi')='asd@xn--80aalbavookw.xn--p1ai']">free</arg>
                <arg name="/doc/login[translate(@name,'ASDXNLBVOKPI','asdxnlbvokpi')='asd@xn--80aalbavookw.xn--p1ai']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'MOBITES.','mobites-')='mobi-test']">free</arg>
                <arg name="/doc/login[translate(@name,'MOBITES.','mobites-')='mobi-test']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'UIDNXOSE.','uidnxose-')='uid-nxxo4use']">occupied</arg>
                <arg name="/doc/login[translate(@name,'UIDNXOSE.','uidnxose-')='uid-nxxo4use']/@uid">2000034344</arg>
                <arg name="/doc/login[translate(@name,'UIDZHOPA.','uidzhopa-')='uid-zhopa']">free</arg>
                <arg name="/doc/login[translate(@name,'UIDZHOPA.','uidzhopa-')='uid-zhopa']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'UIDOSAVR','uidosavr')='uidosavr']">free</arg>
                <arg name="/doc/login[translate(@name,'UIDOSAVR','uidosavr')='uidosavr']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'BTRESVD','btresvd')='bbtst_reserved']">occupied</arg>
                <arg name="/doc/login[translate(@name,'BTRESVD','btresvd')='bbtst_reserved']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'KLM','klm')='klm']">occupied</arg>
                <arg name="/doc/login[translate(@name,'KLM','klm')='klm']/@uid">2000034625</arg>
                <arg name="/doc/login[translate(@name,'LSURN','lsurn')='lsurn']">free</arg>
                <arg name="/doc/login[translate(@name,'LSURN','lsurn')='lsurn']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'PHNEXGVRML.','phnexgvrml-')='phne-6xgvvrml']">occupied</arg>
                <arg name="/doc/login[translate(@name,'PHNEXGVRML.','phnexgvrml-')='phne-6xgvvrml']/@uid">3000297554</arg>
                <arg name="/doc/login[translate(@name,'MALICEKNOPSRU','maliceknopsru')='malice@kinopoisk.ru']">occupied</arg>
                <arg name="/doc/login[translate(@name,'MALICEKNOPSRU','maliceknopsru')='malice@kinopoisk.ru']/@uid">70505</arg>
                <arg name="/doc/login[translate(@name,'GOLEKINPISRU','golekinpisru')='google@kinopoisk.ru']">free</arg>
                <arg name="/doc/login[translate(@name,'GOLEKINPISRU','golekinpisru')='google@kinopoisk.ru']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'DOTUSERGALYN-','dotusergalyn.')='dot.user.gs@galatasaray.net']">occupied</arg>
                <arg name="/doc/login[translate(@name,'DOTUSERGALYN-','dotusergalyn.')='dot.user.gs@galatasaray.net']/@uid">70501</arg>
                <arg name="/doc/login[translate(@name,'YAMBOTXQPIZD','yambotxqpizd')='yambot-7xoqpizd']">occupied</arg>
                <arg name="/doc/login[translate(@name,'YAMBOTXQPIZD','yambotxqpizd')='yambot-7xoqpizd']/@uid">4028670290</arg>
                <arg name="/doc/login[translate(@name,'KOLNISHMYHUAQ','kolnishmyhuaq')='kolonkish-myuhuiaq']">occupied</arg>
                <arg name="/doc/login[translate(@name,'KOLNISHMYHUAQ','kolnishmyhuaq')='kolonkish-myuhuiaq']/@uid">4034756320</arg>
                <arg name="/doc/login[translate(@name,'FUCKTXMWBGHR','fucktxmwbghr')='fuck30ctxkxmwbb2gh63h1rkft']">public_id</arg>
                <arg name="/doc/login[translate(@name,'FUCKTXMWBGHR','fucktxmwbghr')='fuck30ctxkxmwbb2gh63h1rkft']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'MALICE','malice')='malice']">occupied</arg>
                <arg name="/doc/login[translate(@name,'MALICE','malice')='malice']/@uid">70493</arg>
                <arg name="/doc/login[translate(@name,'MALICEPUB.','malicepub-')='malice-public']">public_id</arg>
                <arg name="/doc/login[translate(@name,'MALICEPUB.','malicepub-')='malice-public']/@uid">70495</arg>
                <arg name="/doc/login[translate(@name,'JUNITESOLD.','junitesold-')='junit-test-old']">public_id</arg>
                <arg name="/doc/login[translate(@name,'JUNITESOLD.','junitesold-')='junit-test-old']/@uid">70500</arg>
                <arg name="/doc/login[translate(@name,'ROTLGIN.','rotlgin-')='root-login']">public_id</arg>
                <arg name="/doc/login[translate(@name,'ROTLGIN.','rotlgin-')='root-login']/@uid">70497</arg>
                <arg name="/doc/login[translate(@name,'ТЕСОВЫЙШКЛНИ','тесовыйшклни')='тестовыйшкольник']">occupied</arg>
                <arg name="/doc/login[translate(@name,'ТЕСОВЫЙШКЛНИ','тесовыйшклни')='тестовыйшкольник']/@uid">71012</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/exception">dontmatch</arg>
                <arg name="/error">dontmatch</arg>
                <arg name="/logins" res_mod="key_count">34</arg>
                <!-- TODO No translate() in json point -->
            </jsonBody>
        </result>

        <result name="list_stop_pdd">
            <body func="matchxpath">
                <arg name="/doc/exception">dontmatch</arg>
                <arg name="/doc/error">dontmatch</arg>
                <arg name="count(/doc/login)">34</arg>
                <arg name="/doc/login[translate(@name,'A','a')='a']">occupied</arg>
                <arg name="/doc/login[translate(@name,'A','a')='a']/@uid">1865</arg>
                <arg name="/doc/login[translate(@name,'AB	&#10;&#09;','ab   ')='a b']">malformed</arg>
                <arg name="/doc/login[translate(@name,'AB	&#10;&#09;','ab   ')='a b']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'MAIL','mail')='@mail']">malformed</arg>
                <arg name="/doc/login[translate(@name,'MAIL','mail')='@mail']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'REGIST.','regist-')='r-e-g-i-s-t']">occupied</arg>
                <arg name="/doc/login[translate(@name,'REGIST.','regist-')='r-e-g-i-s-t']/@uid">3000358237</arg>
                <arg name="/doc/login[translate(@name,'GOLE','gole')='google']">stoplist</arg>
                <arg name="/doc/login[translate(@name,'GOLE','gole')='google']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'COLBAEK','colbaek')='colbacek']">free</arg>
                <arg name="/doc/login[translate(@name,'COLBAEK','colbaek')='colbacek']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'BROT','brot')='broot']">stoplist</arg>
                <arg name="/doc/login[translate(@name,'BROT','brot')='broot']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'YANDEXMILRU','yandexmilru')='yandex@mail.ru']">free</arg>
                <arg name="/doc/login[translate(@name,'YANDEXMILRU','yandexmilru')='yandex@mail.ru']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'KUTZGMAILCO','kutzgmailco')='kukutz@gmail.com']">free</arg>
                <arg name="/doc/login[translate(@name,'KUTZGMAILCO','kutzgmailco')='kukutz@gmail.com']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'PDOKNARU','pdoknaru')='pdd@okna.ru']">occupied</arg>
                <arg name="/doc/login[translate(@name,'PDOKNARU','pdoknaru')='pdd@okna.ru']/@uid">1130000000000002</arg>
                <arg name="/doc/login[translate(@name,'PDOXKNARU','pdoxknaru')='pdd@oxna.ru']">occupied</arg>
                <arg name="/doc/login[translate(@name,'PDOXKNARU','pdoxknaru')='pdd@oxna.ru']/@uid">1130000000000002</arg>
                <arg name="/doc/login[translate(@name,'OKXxNARU','okkknaru')='100@okna.ru']">occupied</arg>
                <arg name="/doc/login[translate(@name,'OKXxNARU','okkknaru')='100@okna.ru']/@uid">1130000000000001</arg>
                <arg name="/doc/login[translate(@name,'QWEXNALBVOKPI','qwexnalbvokpi')='qwe@xn--80aalbavookw.xn--p1ai']">occupied</arg>
                <arg name="/doc/login[translate(@name,'QWEXNALBVOKPI','qwexnalbvokpi')='qwe@xn--80aalbavookw.xn--p1ai']/@uid">1130000000036031</arg>
                <arg name="/doc/login[translate(@name,'QWEАДМИНКПРФ','qweадминкпрф')='qwe@админкапдд.рф']">occupied</arg>
                <arg name="/doc/login[translate(@name,'QWEАДМИНКПРФ','qweадминкпрф')='qwe@админкапдд.рф']/@uid">1130000000036031</arg>
                <arg name="/doc/login[translate(@name,'ASDXNLBVOKPI','asdxnlbvokpi')='asd@xn--80aalbavookw.xn--p1ai']">free</arg>
                <arg name="/doc/login[translate(@name,'ASDXNLBVOKPI','asdxnlbvokpi')='asd@xn--80aalbavookw.xn--p1ai']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'MOBITES.','mobites-')='mobi-test']">stoplist</arg>
                <arg name="/doc/login[translate(@name,'MOBITES.','mobites-')='mobi-test']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'UIDNXOSE.','uidnxose-')='uid-nxxo4use']">stoplist</arg>
                <arg name="/doc/login[translate(@name,'UIDNXOSE.','uidnxose-')='uid-nxxo4use']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'UIDZHOPA.','uidzhopa-')='uid-zhopa']">stoplist</arg>
                <arg name="/doc/login[translate(@name,'UIDZHOPA.','uidzhopa-')='uid-zhopa']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'UIDOSAVR','uidosavr')='uidosavr']">free</arg>
                <arg name="/doc/login[translate(@name,'UIDOSAVR','uidosavr')='uidosavr']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'BTRESVD','btresvd')='bbtst_reserved']">occupied</arg>
                <arg name="/doc/login[translate(@name,'BTRESVD','btresvd')='bbtst_reserved']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'KLM','klm')='klm']">stoplist</arg>
                <arg name="/doc/login[translate(@name,'KLM','klm')='klm']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'LSURN','lsurn')='lsurn']">stoplist</arg>
                <arg name="/doc/login[translate(@name,'LSURN','lsurn')='lsurn']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'PHNEXGVRML.','phnexgvrml-')='phne-6xgvvrml']">stoplist</arg>
                <arg name="/doc/login[translate(@name,'PHNEXGVRML.','phnexgvrml-')='phne-6xgvvrml']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'MALICEKNOPSRU','maliceknopsru')='malice@kinopoisk.ru']">free</arg>
                <arg name="/doc/login[translate(@name,'MALICEKNOPSRU','maliceknopsru')='malice@kinopoisk.ru']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'GOLEKINPISRU','golekinpisru')='google@kinopoisk.ru']">free</arg>
                <arg name="/doc/login[translate(@name,'GOLEKINPISRU','golekinpisru')='google@kinopoisk.ru']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'DOTUSERGALYN-','dotusergalyn.')='dot.user.gs@galatasaray.net']">free</arg>
                <arg name="/doc/login[translate(@name,'DOTUSERGALYN-','dotusergalyn.')='dot.user.gs@galatasaray.net']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'YAMBOTXQPIZD','yambotxqpizd')='yambot-7xoqpizd']">stoplist</arg>
                <arg name="/doc/login[translate(@name,'YAMBOTXQPIZD','yambotxqpizd')='yambot-7xoqpizd']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'KOLNISHMYHUAQ','kolnishmyhuaq')='kolonkish-myuhuiaq']">occupied</arg>
                <arg name="/doc/login[translate(@name,'KOLNISHMYHUAQ','kolnishmyhuaq')='kolonkish-myuhuiaq']/@uid">4034756320</arg>
                <arg name="/doc/login[translate(@name,'FUCKTXMWBGHR','fucktxmwbghr')='fuck30ctxkxmwbb2gh63h1rkft']">public_id</arg>
                <arg name="/doc/login[translate(@name,'FUCKTXMWBGHR','fucktxmwbghr')='fuck30ctxkxmwbb2gh63h1rkft']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'MALICE','malice')='malice']">occupied</arg>
                <arg name="/doc/login[translate(@name,'MALICE','malice')='malice']/@uid">70493</arg>
                <arg name="/doc/login[translate(@name,'MALICEPUB.','malicepub-')='malice-public']">public_id</arg>
                <arg name="/doc/login[translate(@name,'MALICEPUB.','malicepub-')='malice-public']/@uid">70495</arg>
                <arg name="/doc/login[translate(@name,'JUNITESOLD.','junitesold-')='junit-test-old']">public_id</arg>
                <arg name="/doc/login[translate(@name,'JUNITESOLD.','junitesold-')='junit-test-old']/@uid">70500</arg>
                <arg name="/doc/login[translate(@name,'ROTLGIN.','rotlgin-')='root-login']">stoplist</arg>
                <arg name="/doc/login[translate(@name,'ROTLGIN.','rotlgin-')='root-login']/@uid">dontmatch</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/exception">dontmatch</arg>
                <arg name="/error">dontmatch</arg>
                <arg name="/logins" res_mod="key_count">34</arg>
                <!-- TODO No translate() in json point -->
            </jsonBody>
        </result>

        <result name="list_nostop_pdd">
            <body func="matchxpath">
                <arg name="/doc/exception">dontmatch</arg>
                <arg name="/doc/error">dontmatch</arg>
                <arg name="count(/doc/login)">34</arg>
                <arg name="/doc/login[translate(@name,'A','a')='a']">occupied</arg>
                <arg name="/doc/login[translate(@name,'A','a')='a']/@uid">1865</arg>
                <arg name="/doc/login[translate(@name,'AB	&#10;&#09;','ab   ')='a b']">malformed</arg>
                <arg name="/doc/login[translate(@name,'AB	&#10;&#09;','ab   ')='a b']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'MAIL','mail')='@mail']">malformed</arg>
                <arg name="/doc/login[translate(@name,'MAIL','mail')='@mail']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'REGIST.','regist-')='r-e-g-i-s-t']">occupied</arg>
                <arg name="/doc/login[translate(@name,'REGIST.','regist-')='r-e-g-i-s-t']/@uid">3000358237</arg>
                <arg name="/doc/login[translate(@name,'GOLE','gole')='google']">occupied</arg>
                <arg name="/doc/login[translate(@name,'GOLE','gole')='google']/@uid">67507</arg>
                <arg name="/doc/login[translate(@name,'COLBAEK','colbaek')='colbacek']">free</arg>
                <arg name="/doc/login[translate(@name,'COLBAEK','colbaek')='colbacek']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'BROT','brot')='broot']">free</arg>
                <arg name="/doc/login[translate(@name,'BROT','brot')='broot']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'YANDEXMILRU','yandexmilru')='yandex@mail.ru']">free</arg>
                <arg name="/doc/login[translate(@name,'YANDEXMILRU','yandexmilru')='yandex@mail.ru']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'KUTZGMAILCO','kutzgmailco')='kukutz@gmail.com']">free</arg>
                <arg name="/doc/login[translate(@name,'KUTZGMAILCO','kutzgmailco')='kukutz@gmail.com']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'PDOKNARU','pdoknaru')='pdd@okna.ru']">occupied</arg>
                <arg name="/doc/login[translate(@name,'PDOKNARU','pdoknaru')='pdd@okna.ru']/@uid">1130000000000002</arg>
                <arg name="/doc/login[translate(@name,'PDOXKNARU','pdoxknaru')='pdd@oxna.ru']">occupied</arg>
                <arg name="/doc/login[translate(@name,'PDOXKNARU','pdoxknaru')='pdd@oxna.ru']/@uid">1130000000000002</arg>
                <arg name="/doc/login[translate(@name,'OKXxNARU','okkknaru')='100@okna.ru']">occupied</arg>
                <arg name="/doc/login[translate(@name,'OKXxNARU','okkknaru')='100@okna.ru']/@uid">1130000000000001</arg>
                <arg name="/doc/login[translate(@name,'QWEXNALBVOKPI','qwexnalbvokpi')='qwe@xn--80aalbavookw.xn--p1ai']">occupied</arg>
                <arg name="/doc/login[translate(@name,'QWEXNALBVOKPI','qwexnalbvokpi')='qwe@xn--80aalbavookw.xn--p1ai']/@uid">1130000000036031</arg>
                <arg name="/doc/login[translate(@name,'QWEАДМИНКПРФ','qweадминкпрф')='qwe@админкапдд.рф']">occupied</arg>
                <arg name="/doc/login[translate(@name,'QWEАДМИНКПРФ','qweадминкпрф')='qwe@админкапдд.рф']/@uid">1130000000036031</arg>
                <arg name="/doc/login[translate(@name,'ASDXNLBVOKPI','asdxnlbvokpi')='asd@xn--80aalbavookw.xn--p1ai']">free</arg>
                <arg name="/doc/login[translate(@name,'ASDXNLBVOKPI','asdxnlbvokpi')='asd@xn--80aalbavookw.xn--p1ai']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'MOBITES.','mobites-')='mobi-test']">free</arg>
                <arg name="/doc/login[translate(@name,'MOBITES.','mobites-')='mobi-test']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'UIDNXOSE.','uidnxose-')='uid-nxxo4use']">occupied</arg>
                <arg name="/doc/login[translate(@name,'UIDNXOSE.','uidnxose-')='uid-nxxo4use']/@uid">2000034344</arg>
                <arg name="/doc/login[translate(@name,'UIDZHOPA.','uidzhopa-')='uid-zhopa']">free</arg>
                <arg name="/doc/login[translate(@name,'UIDZHOPA.','uidzhopa-')='uid-zhopa']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'UIDOSAVR','uidosavr')='uidosavr']">free</arg>
                <arg name="/doc/login[translate(@name,'UIDOSAVR','uidosavr')='uidosavr']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'BTRESVD','btresvd')='bbtst_reserved']">occupied</arg>
                <arg name="/doc/login[translate(@name,'BTRESVD','btresvd')='bbtst_reserved']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'KLM','klm')='klm']">occupied</arg>
                <arg name="/doc/login[translate(@name,'KLM','klm')='klm']/@uid">2000034625</arg>
                <arg name="/doc/login[translate(@name,'LSURN','lsurn')='lsurn']">free</arg>
                <arg name="/doc/login[translate(@name,'LSURN','lsurn')='lsurn']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'PHNEXGVRML.','phnexgvrml-')='phne-6xgvvrml']">occupied</arg>
                <arg name="/doc/login[translate(@name,'PHNEXGVRML.','phnexgvrml-')='phne-6xgvvrml']/@uid">3000297554</arg>
                <arg name="/doc/login[translate(@name,'MALICEKNOPSRU','maliceknopsru')='malice@kinopoisk.ru']">free</arg>
                <arg name="/doc/login[translate(@name,'MALICEKNOPSRU','maliceknopsru')='malice@kinopoisk.ru']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'GOLEKINPISRU','golekinpisru')='google@kinopoisk.ru']">free</arg>
                <arg name="/doc/login[translate(@name,'GOLEKINPISRU','golekinpisru')='google@kinopoisk.ru']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'DOTUSERGALYN-','dotusergalyn.')='dot.user.gs@galatasaray.net']">free</arg>
                <arg name="/doc/login[translate(@name,'DOTUSERGALYN-','dotusergalyn.')='dot.user.gs@galatasaray.net']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'YAMBOTXQPIZD','yambotxqpizd')='yambot-7xoqpizd']">occupied</arg>
                <arg name="/doc/login[translate(@name,'YAMBOTXQPIZD','yambotxqpizd')='yambot-7xoqpizd']/@uid">4028670290</arg>
                <arg name="/doc/login[translate(@name,'KOLNISHMYHUAQ','kolnishmyhuaq')='kolonkish-myuhuiaq']">occupied</arg>
                <arg name="/doc/login[translate(@name,'KOLNISHMYHUAQ','kolnishmyhuaq')='kolonkish-myuhuiaq']/@uid">4034756320</arg>
                <arg name="/doc/login[translate(@name,'FUCKTXMWBGHR','fucktxmwbghr')='fuck30ctxkxmwbb2gh63h1rkft']">public_id</arg>
                <arg name="/doc/login[translate(@name,'FUCKTXMWBGHR','fucktxmwbghr')='fuck30ctxkxmwbb2gh63h1rkft']/@uid">dontmatch</arg>
                <arg name="/doc/login[translate(@name,'MALICE','malice')='malice']">occupied</arg>
                <arg name="/doc/login[translate(@name,'MALICE','malice')='malice']/@uid">70493</arg>
                <arg name="/doc/login[translate(@name,'MALICEPUB.','malicepub-')='malice-public']">public_id</arg>
                <arg name="/doc/login[translate(@name,'MALICEPUB.','malicepub-')='malice-public']/@uid">70495</arg>
                <arg name="/doc/login[translate(@name,'JUNITESOLD.','junitesold-')='junit-test-old']">public_id</arg>
                <arg name="/doc/login[translate(@name,'JUNITESOLD.','junitesold-')='junit-test-old']/@uid">70500</arg>
                <arg name="/doc/login[translate(@name,'ROTLGIN.','rotlgin-')='root-login']">public_id</arg>
                <arg name="/doc/login[translate(@name,'ROTLGIN.','rotlgin-')='root-login']/@uid">70497</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/exception">dontmatch</arg>
                <arg name="/error">dontmatch</arg>
                <arg name="/logins" res_mod="key_count">34</arg>
                <!-- TODO No translate() in json point -->
            </jsonBody>
        </result>

        <result name="po_match">
            <body func="matchxpath">
                <arg name="/doc/exception">dontmatch</arg>
                <arg name="/doc/error">dontmatch</arg>
                <arg name="count(/doc/phone_operations/item)" comp="relation" min="2"></arg>
                <arg name="/doc/phone_operations/item[1]/@operation">2,70501,3,79161111111,1,1413379912,2065707483,1234,13,127,1434555590,1434555617,0,0,0</arg>
                <arg name="/doc/phone_operations/item[2]/@operation">3,70501,4,1,3,1413380025,2065707483,1234,127,127,1434555590,1434555617,0,0,2</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/exception/value">dontmatch</arg>
                <arg name="/exception/id">dontmatch</arg>
                <arg name="/phone_operations" comp="relation" min="2" res_mod="array_size"></arg>
                <arg name="/phone_operations/0">2,70501,3,79161111111,1,1413379912,2065707483,1234,13,127,1434555590,1434555617,0,0,0</arg>
                <arg name="/phone_operations/1">3,70501,4,1,3,1413380025,2065707483,1234,127,127,1434555590,1434555617,0,0,2</arg>
            </jsonBody>
        </result>
        <result name="po_no_match">
            <body func="matchregex">
                <arg name="dontmatch">exception</arg>
                <arg name="dontmatch">error</arg>
                <arg name="dontmatch">2,70501,3,79161111111,1,1413379912,2065707483,1234,13,127,1434555590,1434555617,0,0,0</arg>
                <arg name="dontmatch">3,70501,4,1,3,1413380025,2065707483,1234,127,127,1434555590,1434555617,0,0,2</arg>
            </body>
            <jsonBody func="matchregex">
                <arg name="dontmatch">exception</arg>
                <arg name="dontmatch">error</arg>
                <arg name="dontmatch">2,70501,3,79161111111,1,1413379912,2065707483,1234,13,127,1434555590,1434555617,0,0,0</arg>
                <arg name="dontmatch">3,70501,4,1,3,1413380025,2065707483,1234,127,127,1434555590,1434555617,0,0,2</arg>
            </jsonBody>
        </result>
        <result name="po_exception">
            <body func="matchxpath">
                <arg name="/doc/exception[@id='2']">INVALID_PARAMS</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/exception/value">INVALID_PARAMS</arg>
                <arg name="/exception/id">2</arg>
            </jsonBody>
        </result>

        <result name="dummy">
            <body func="matchxpath">
                <arg name="/doc/exception">dontmatch</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/exception">dontmatch</arg>
            </jsonBody>
        </result>

        <result name="pwd_true">
            <body func="matchregex">
                <arg name="dontmatch">&gt;0&lt;/hash&gt;</arg>
                <arg name="exp">&gt;1&lt;/hash&gt;</arg>
            </body>
            <jsonBody func="matchregex">
                <arg name="dontmatch">false</arg>
                <arg name="exp">true</arg>
            </jsonBody>
        </result>
        <result name="pwd_false">
            <body func="matchregex">
                <arg name="dontmatch">&gt;1&lt;/hash&gt;</arg>
                <arg name="exp">&gt;0&lt;/hash&gt;</arg>
            </body>
            <jsonBody func="matchregex">
                <arg name="dontmatch">true</arg>
                <arg name="exp">false</arg>
            </jsonBody>
        </result>

        <result name="pwd_qwerty1_true_qweqwe2_false">
            <body func="matchxpath">
                <arg name="/doc/exception">dontmatch</arg>
                <arg name="count(/doc/hash)">2</arg>
                <arg name="/doc/hash[@value='MTokMSQySWdPL2dodyRVeWpacllmeHl4dmdXMDlEMnp6Qncu']">1</arg>
                <arg name="/doc/hash[@value='MTokMSRQTnNwWnMvMiRMMDZCNVpEV1hreUNnOGtQcVcwdnAw']">0</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/exception">dontmatch</arg>
                <arg name="/hashes" res_mod="key_count">2</arg>
                <arg name="/hashes/MTokMSQySWdPL2dodyRVeWpacllmeHl4dmdXMDlEMnp6Qncu">true</arg>
                <arg name="/hashes/MTokMSRQTnNwWnMvMiRMMDZCNVpEV1hreUNnOGtQcVcwdnAw">false</arg>
            </jsonBody>
        </result>
        <result name="pwd_qwerty1_false_qweqwe2_true">
            <body func="matchxpath">
                <arg name="/doc/exception">dontmatch</arg>
                <arg name="count(/doc/hash)">2</arg>
                <arg name="/doc/hash[@value='MTokMSQySWdPL2dodyRVeWpacllmeHl4dmdXMDlEMnp6Qncu']">0</arg>
                <arg name="/doc/hash[@value='MTokMSRQTnNwWnMvMiRMMDZCNVpEV1hreUNnOGtQcVcwdnAw']">1</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/exception">dontmatch</arg>
                <arg name="/hashes" res_mod="key_count">2</arg>
                <arg name="/hashes/MTokMSQySWdPL2dodyRVeWpacllmeHl4dmdXMDlEMnp6Qncu">false</arg>
                <arg name="/hashes/MTokMSRQTnNwWnMvMiRMMDZCNVpEV1hreUNnOGtQcVcwdnAw">true</arg>
            </jsonBody>
        </result>
        <result name="pwd_qwerty2_true_qweqwe1_false">
            <body func="matchxpath">
                <arg name="/doc/exception">dontmatch</arg>
                <arg name="count(/doc/hash)">2</arg>
                <arg name="/doc/hash[@value='MTokMSRYaEl2enQvNCRLMG1wR2VNbnJEYll6NGc4QXExc3gw']">1</arg>
                <arg name="/doc/hash[@value='MTokMSRPaVJqUXRvayRYYTlKWHRCYkxIb0piTXJ4VWlDU1Ux']">0</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/exception">dontmatch</arg>
                <arg name="/hashes" res_mod="key_count">2</arg>
                <arg name="/hashes/MTokMSRYaEl2enQvNCRLMG1wR2VNbnJEYll6NGc4QXExc3gw">true</arg>
                <arg name="/hashes/MTokMSRPaVJqUXRvayRYYTlKWHRCYkxIb0piTXJ4VWlDU1Ux">false</arg>
            </jsonBody>
        </result>
        <result name="pwd_qwerty2_false_qweqwe1_true">
            <body func="matchxpath">
                <arg name="/doc/exception">dontmatch</arg>
                <arg name="count(/doc/hash)">2</arg>
                <arg name="/doc/hash[@value='MTokMSRYaEl2enQvNCRLMG1wR2VNbnJEYll6NGc4QXExc3gw']">0</arg>
                <arg name="/doc/hash[@value='MTokMSRPaVJqUXRvayRYYTlKWHRCYkxIb0piTXJ4VWlDU1Ux']">1</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/exception">dontmatch</arg>
                <arg name="/hashes" res_mod="key_count">2</arg>
                <arg name="/hashes/MTokMSRYaEl2enQvNCRLMG1wR2VNbnJEYll6NGc4QXExc3gw">false</arg>
                <arg name="/hashes/MTokMSRPaVJqUXRvayRYYTlKWHRCYkxIb0piTXJ4VWlDU1Ux">true</arg>
            </jsonBody>
        </result>


        <result name="track_ok">
            <body func="matchxpath">
                <arg name="/doc/uid">70480</arg>
                <arg name="/doc/track_id">13093f924f16b855c8d1f8e418e41138</arg>
                <arg name="/doc/created">1439450074</arg>
                <arg name="/doc/expired">2145906001</arg>
                <arg name="/doc/content">{"flags":48}</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/uid">70480</arg>
                <arg name="/track_id">13093f924f16b855c8d1f8e418e41138</arg>
                <arg name="/created">1439450074</arg>
                <arg name="/expired">2145906001</arg>
                <arg name="/content/flags">48</arg>
            </jsonBody>
        </result>
        <result name="track_bad">
            <body func="matchxpath">
                <arg name="/doc/created">dontmatch</arg>
                <arg name="/doc/expired">dontmatch</arg>
                <arg name="/doc/content">dontmatch</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/created">dontmatch</arg>
                <arg name="/expired">dontmatch</arg>
                <arg name="/content">dontmatch</arg>
            </jsonBody>
        </result>

        <result name="all_tracks_ok">
            <body func="matchxpath">
                <arg name="count(/doc/track)">3</arg>
                <arg name="/doc/track[1]/uid">70500</arg>
                <arg name="/doc/track[1]/track_id">bc968a106e53c3a22ea1ceef3aa5ab12</arg>
                <arg name="/doc/track[1]/created">1465912550</arg>
                <arg name="/doc/track[1]/expired">2145906011</arg>
                <arg name="/doc/track[1]/content">{"short_code": "764862", "type": 42, "address": "lensvol 123@yandex-team.ru"}</arg>
                <arg name="/doc/track[2]/uid">70500</arg>
                <arg name="/doc/track[2]/track_id">d09a675d82b887cd52b90150ac20deca</arg>
                <arg name="/doc/track[2]/created">1465913092</arg>
                <arg name="/doc/track[2]/expired">2145906991</arg>
                <arg name="/doc/track[2]/content">{"short_code": "622681", "type": 42, "address": "karganov@yandex-team.ru"}</arg>
                <arg name="/doc/track[3]/uid">70500</arg>
                <arg name="/doc/track[3]/track_id">796b80cf0a8a2952fc543a44dea8f72b</arg>
                <arg name="/doc/track[3]/created">1465913260</arg>
                <arg name="/doc/track[3]/expired">2145996991</arg>
                <arg name="/doc/track[3]/content">{"short_code": "326478", "type": 42, "address": "karganov@yandex-team.ru"}</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/track" res_mod="array_size">3</arg>
                <arg name="/track/0/uid">70500</arg>
                <arg name="/track/0/track_id">bc968a106e53c3a22ea1ceef3aa5ab12</arg>
                <arg name="/track/0/created">1465912550</arg>
                <arg name="/track/0/expired">2145906011</arg>
                <arg name="/track/0/content/short_code">764862</arg>
                <arg name="/track/0/content/type">42</arg>
                <arg name="/track/0/content/address">lensvol 123@yandex-team.ru</arg>
                <arg name="/track/1/uid">70500</arg>
                <arg name="/track/1/track_id">d09a675d82b887cd52b90150ac20deca</arg>
                <arg name="/track/1/created">1465913092</arg>
                <arg name="/track/1/expired">2145906991</arg>
                <arg name="/track/1/content/short_code">622681</arg>
                <arg name="/track/1/content/type">42</arg>
                <arg name="/track/1/content/address">karganov@yandex-team.ru</arg>
                <arg name="/track/2/uid">70500</arg>
                <arg name="/track/2/track_id">796b80cf0a8a2952fc543a44dea8f72b</arg>
                <arg name="/track/2/created">1465913260</arg>
                <arg name="/track/2/expired">2145996991</arg>
                <arg name="/track/2/content/short_code">326478</arg>
                <arg name="/track/2/content/type">42</arg>
                <arg name="/track/2/content/address">karganov@yandex-team.ru</arg>
            </jsonBody>
        </result>
        <result name="all_tracks_bad">
            <body func="matchxpath">
                <arg name="count(/doc/track)">0</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/track" res_mod="array_size">0</arg>
            </jsonBody>
        </result>

        <result name="email_bindings_ok">
            <body func="matchxpath">
                <arg name="count(/doc/uids/item)">3</arg>
                <arg name="/doc/uids/item[@id='71001']"></arg>
                <arg name="/doc/uids/item[@id='71002']"></arg>
                <arg name="/doc/uids/item[@id='4001166905']"></arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/uids" res_mod="array_size">3</arg>
                <arg name="/uids/0">71001</arg>
                <arg name="/uids/1">71002</arg>
                <arg name="/uids/2">4001166905</arg>
            </jsonBody>
        </result>
        <result name="email_bindings_bad">
            <body func="matchxpath">
                <arg name="count(/doc/uids)">1</arg>
                <arg name="count(/doc/uids/item)">0</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/uids" res_mod="array_size">0</arg>
            </jsonBody>
        </result>

        <result name="yakey_missing_phone">
            <status-code>200</status-code>
            <body func="matchxpath">
                <arg name="/doc/exception">INVALID_PARAMS</arg>
                <arg name="/doc/exception/@id">2</arg>
                <arg name="/doc/error" comp="starts_with">BlackBox error: Missing phone_number argument</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/exception/value">INVALID_PARAMS</arg>
                <arg name="/exception/id">2</arg>
                <arg name="/error" comp="starts_with">BlackBox error: Missing phone_number argument</arg>
            </jsonBody>
        </result>
        <result name="yakey_bad_phone">
            <status-code>200</status-code>
            <body func="matchxpath">
                <arg name="/doc/exception">INVALID_PARAMS</arg>
                <arg name="/doc/exception/@id">2</arg>
                <arg name="/doc/error" comp="starts_with">BlackBox error: invalid phone_number value</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/exception/value">INVALID_PARAMS</arg>
                <arg name="/exception/id">2</arg>
                <arg name="/error" comp="starts_with">BlackBox error: invalid phone_number value</arg>
            </jsonBody>
        </result>
        <result name="yakey_one">
            <status-code>200</status-code>
            <body func="matchxpath">
                <arg name="/doc/exception">dontmatch</arg>
                <arg name="count(/doc/yakey_backups/item)">1</arg>
                <arg name="/doc/yakey_backups/item[@phone_number='79161111111']/@backup">bla bla bla фыва пролдж Yakey.Backup</arg>
                <arg name="/doc/yakey_backups/item[@phone_number='79161111111']/@device_name">favorite iphone</arg>
                <arg name="/doc/yakey_backups/item[@phone_number='79161111111']/@updated" comp="relation" min="1475498000"></arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/exception">dontmatch</arg>
                <arg name="/yakey_backups" res_mod="array_size">1</arg>
                <arg name="/yakey_backups/0/phone_number">79161111111</arg>
                <arg name="/yakey_backups/0/backup">bla bla bla фыва пролдж Yakey.Backup</arg>
                <arg name="/yakey_backups/0/updated" comp="relation" min="1475498000"></arg>
                <arg name="/yakey_backups/0/device_name">favorite iphone</arg>
            </jsonBody>
        </result>
        <result name="yakey_one_meta">
            <status-code>200</status-code>
            <body func="matchxpath">
                <arg name="/doc/exception">dontmatch</arg>
                <arg name="/doc/yakey_backups/item[@phone_number='79161111111']/@backup">dontmatch</arg>
                <arg name="/doc/yakey_backups/item[@phone_number='79161111111']/@device_name">favorite iphone</arg>
                <arg name="/doc/yakey_backups/item[@phone_number='79161111111']/@updated" comp="relation" min="1475498000"></arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/exception">dontmatch</arg>
                <arg name="/yakey_backups" res_mod="array_size">1</arg>
                <arg name="/yakey_backups/0/phone_number">79161111111</arg>
                <arg name="/yakey_backups/0/backup">dontmatch</arg>
                <arg name="/yakey_backups/0/updated" comp="relation" min="1475498000"></arg>
                <arg name="/yakey_backups/0/device_name">favorite iphone</arg>
            </jsonBody>
        </result>
        <result name="yakey_empty">
            <status-code>200</status-code>
            <body func="matchxpath">
                <arg name="/doc/exception">dontmatch</arg>
                <arg name="/doc/yakey_backups"></arg>
                <arg name="/doc/yakey_backups/item">dontmatch</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/exception">dontmatch</arg>
                <arg name="/yakey_backups" res_mod="array_size">0</arg>
            </jsonBody>
        </result>

        <result name="invalid_uid">
            <body func="matchxpath">
                <arg name="/doc/exception[@id='2']">INVALID_PARAMS</arg>
                <arg name="/doc/error" comp="starts_with" substitute="1">BlackBox error: invalid uid value: '\~`cgi:uid`'</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/exception/value">INVALID_PARAMS</arg>
                <arg name="/exception/id">2</arg>
                <arg name="/error" comp="starts_with" substitute="1">BlackBox error: invalid uid value: '\~`cgi:uid`'</arg>
            </jsonBody>
        </result>
        <result name="missing_uid">
            <body func="matchxpath">
                <arg name="/doc/exception[@id='2']">INVALID_PARAMS</arg>
                <arg name="/doc/error" comp="starts_with">BlackBox error: Missing uid argument</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/exception/value">INVALID_PARAMS</arg>
                <arg name="/exception/id">2</arg>
                <arg name="/error" comp="starts_with">BlackBox error: Missing uid argument</arg>
            </jsonBody>
        </result>
        <result name="missing_key_id">
            <body func="matchxpath">
                <arg name="/doc/exception[@id='2']">INVALID_PARAMS</arg>
                <arg name="/doc/error" comp="starts_with">BlackBox error: Missing key_id argument</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/exception/value">INVALID_PARAMS</arg>
                <arg name="/exception/id">2</arg>
                <arg name="/error" comp="starts_with">BlackBox error: Missing key_id argument</arg>
            </jsonBody>
        </result>
        <result name="invalid_version">
            <body func="matchxpath">
                <arg name="/doc/exception[@id='2']">INVALID_PARAMS</arg>
                <arg name="/doc/error" comp="starts_with" substitute="1">BlackBox error: invalid version value: '\~`cgi:version`'</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/exception/value">INVALID_PARAMS</arg>
                <arg name="/exception/id">2</arg>
                <arg name="/error" comp="starts_with" substitute="1">BlackBox error: invalid version value: '\~`cgi:version`'</arg>
            </jsonBody>
        </result>

        <result name="recovery_keys_empty">
            <status-code>200</status-code>
            <body func="matchxpath">
                <arg name="/doc/exception">dontmatch</arg>
                <arg name="/doc/recovery_key"></arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/exception">dontmatch</arg>
                <arg name="/recovery_key"></arg>
            </jsonBody>
        </result>
        <result name="recovery_keys_70500_1">
            <status-code>200</status-code>
            <body func="matchxpath">
                <arg name="/doc/exception">dontmatch</arg>
                <arg name="/doc/recovery_key">AAECAwQFBgcICQoLDAAADf/+/fw=</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/exception">dontmatch</arg>
                <arg name="/recovery_key">AAECAwQFBgcICQoLDAAADf/+/fw=</arg>
            </jsonBody>
        </result>
        <result name="recovery_keys_70500_2">
            <status-code>200</status-code>
            <body func="matchxpath">
                <arg name="/doc/exception">dontmatch</arg>
                <arg name="/doc/recovery_key">AA==</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/exception">dontmatch</arg>
                <arg name="/recovery_key">AA==</arg>
            </jsonBody>
        </result>
        <result name="recovery_keys_70501">
            <status-code>200</status-code>
            <body func="matchxpath">
                <arg name="/doc/exception">dontmatch</arg>
                <arg name="/doc/recovery_key">SSdtIGJpbmFyeSB2YWx1ZQ==</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/exception">dontmatch</arg>
                <arg name="/recovery_key">SSdtIGJpbmFyeSB2YWx1ZQ==</arg>
            </jsonBody>
        </result>

        <result name="check_has_plus_true">
            <body func="matchxpath">
                <arg name="/doc/has_plus">1</arg>
                <arg name="count(/doc/uid)">1</arg>
                <arg name="/doc/uid">71001</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="" res_mod="key_count">2</arg>
                <arg name="/has_plus">true</arg>
                <arg name="/uids" res_mod="array_size">1</arg>
                <arg name="/uids/0">71001</arg>
            </jsonBody>
        </result>
        <result name="check_has_plus_true_pdd">
            <body func="matchxpath">
                <arg name="/doc/has_plus">1</arg>
                <arg name="count(/doc/uid)">1</arg>
                <arg name="/doc/uid">1130000000165441</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="" res_mod="key_count">2</arg>
                <arg name="/has_plus">true</arg>
                <arg name="/uids" res_mod="array_size">1</arg>
                <arg name="/uids/0">1130000000165441</arg>
            </jsonBody>
        </result>
        <result name="check_has_plus_true_several">
            <body func="matchxpath">
                <arg name="/doc/has_plus">1</arg>
                <arg name="count(/doc/uid)">1</arg>
                <arg name="/doc/uid">1130000000011693</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="" res_mod="key_count">2</arg>
                <arg name="/has_plus">true</arg>
                <arg name="/uids" res_mod="array_size">1</arg>
                <arg name="/uids/0">1130000000011693</arg>
            </jsonBody>
        </result>
        <result name="check_has_plus_false">
            <body func="matchxpath">
                <arg name="/doc/has_plus">0</arg>
                <arg name="count(/doc/uid)">0</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="" res_mod="key_count">2</arg>
                <arg name="/has_plus">false</arg>
                <arg name="/uids" res_mod="array_size">0</arg>
            </jsonBody>
        </result>

        <result name="family_info_f1_with_place">
            <body func="matchxpath">
                <arg name="/doc/status/value">OK</arg>
                <arg name="/doc/status/description">dontmatch</arg>
                <arg name="count(/doc/family)">1</arg>
                <arg name="/doc/family/@id">f1</arg>
                <arg name="/doc/family/admin_uid">70500</arg>
                <arg name="count(/doc/family/user)">3</arg>
                <arg name="/doc/family/user[@uid='70500'][@place='1']"></arg>
                <arg name="/doc/family/user[@uid='71001'][@place='2']"></arg>
                <arg name="/doc/family/user[@uid='71011'][@place='4']"></arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/status" res_mod="key_count">1</arg>
                <arg name="/status/value">OK</arg>
                <arg name="/family" res_mod="key_count">1</arg>
                <arg name="/family/f1" res_mod="key_count">2</arg>
                <arg name="/family/f1/admin_uid">70500</arg>
                <arg name="/family/f1/users" res_mod="array_size">3</arg>
                <arg name="/family/f1/users/0" res_mod="key_count">2</arg>
                <arg name="/family/f1/users/0/uid">70500</arg>
                <arg name="/family/f1/users/0/place">1</arg>
                <arg name="/family/f1/users/1" res_mod="key_count">2</arg>
                <arg name="/family/f1/users/1/uid">71001</arg>
                <arg name="/family/f1/users/1/place">2</arg>
                <arg name="/family/f1/users/2" res_mod="key_count">2</arg>
                <arg name="/family/f1/users/2/uid">71011</arg>
                <arg name="/family/f1/users/2/place">4</arg>
            </jsonBody>
        </result>
        <result name="family_info_f2_with_place">
            <body func="matchxpath">
                <arg name="/doc/status/value">OK</arg>
                <arg name="/doc/status/description">dontmatch</arg>
                <arg name="count(/doc/family)">1</arg>
                <arg name="/doc/family/@id">f2</arg>
                <arg name="/doc/family/admin_uid">42</arg>
                <arg name="count(/doc/family/user)">1</arg>
                <arg name="/doc/family/user[@uid='42'][@place='1']"></arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/status" res_mod="key_count">1</arg>
                <arg name="/status/value">OK</arg>
                <arg name="/family" res_mod="key_count">1</arg>
                <arg name="/family/f2" res_mod="key_count">2</arg>
                <arg name="/family/f2/admin_uid">42</arg>
                <arg name="/family/f2/users" res_mod="array_size">1</arg>
                <arg name="/family/f2/users/0" res_mod="key_count">2</arg>
                <arg name="/family/f2/users/0/uid">42</arg>
                <arg name="/family/f2/users/0/place">1</arg>
            </jsonBody>
        </result>
        <result name="family_info_f1">
            <body func="matchxpath">
                <arg name="/doc/status/value">OK</arg>
                <arg name="/doc/status/description">dontmatch</arg>
                <arg name="count(/doc/family)">1</arg>
                <arg name="/doc/family/@id">f1</arg>
                <arg name="/doc/family/admin_uid">70500</arg>
                <arg name="count(/doc/family/user)">3</arg>
                <arg name="/doc/family/user[@uid='70500']"></arg>
                <arg name="/doc/family/user[@uid='71001']"></arg>
                <arg name="/doc/family/user[@uid='71011']"></arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/status" res_mod="key_count">1</arg>
                <arg name="/status/value">OK</arg>
                <arg name="/family" res_mod="key_count">1</arg>
                <arg name="/family/f1" res_mod="key_count">2</arg>
                <arg name="/family/f1/admin_uid">70500</arg>
                <arg name="/family/f1/users" res_mod="array_size">3</arg>
                <arg name="/family/f1/users/0" res_mod="key_count">1</arg>
                <arg name="/family/f1/users/0/uid">70500</arg>
                <arg name="/family/f1/users/1" res_mod="key_count">1</arg>
                <arg name="/family/f1/users/1/uid">71001</arg>
                <arg name="/family/f1/users/2" res_mod="key_count">1</arg>
                <arg name="/family/f1/users/2/uid">71011</arg>
            </jsonBody>
        </result>
        <result name="family_info_f2">
            <body func="matchxpath">
                <arg name="/doc/status/value">OK</arg>
                <arg name="/doc/status/description">dontmatch</arg>
                <arg name="count(/doc/family)">1</arg>
                <arg name="/doc/family/@id">f2</arg>
                <arg name="/doc/family/admin_uid">42</arg>
                <arg name="count(/doc/family/user)">1</arg>
                <arg name="/doc/family/user[@uid='42']"></arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/status" res_mod="key_count">1</arg>
                <arg name="/status/value">OK</arg>
                <arg name="/family" res_mod="key_count">1</arg>
                <arg name="/family/f2" res_mod="key_count">2</arg>
                <arg name="/family/f2/admin_uid">42</arg>
                <arg name="/family/f2/users" res_mod="array_size">1</arg>
                <arg name="/family/f2/users/0" res_mod="key_count">1</arg>
                <arg name="/family/f2/users/0/uid">42</arg>
            </jsonBody>
        </result>
        <result name="family_info_empty">
            <body func="matchxpath">
                <arg name="/doc/status/value">MISSING_FAMILY</arg>
                <arg name="/doc/status/description" substitute="1">Family was not found: '\~`cgi:family_id`'</arg>
                <arg name="count(/doc/family)">1</arg>
                <arg name="/doc/family"></arg>
                <arg name="/doc/family/@id">f3</arg>
                <arg name="/doc/family/admin_uid">dontmatch</arg>
                <arg name="/doc/family/user">dontmatch</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/status" res_mod="key_count">2</arg>
                <arg name="/status/value">MISSING_FAMILY</arg>
                <arg name="/status/description" substitute="1">Family was not found: '\~`cgi:family_id`'</arg>
                <arg name="/family" res_mod="key_count">1</arg>
                <arg name="/family/f3" res_mod="key_count">0</arg>
            </jsonBody>
        </result>
        <result name="family_info__bad_get_members_info">
            <body func="matchxpath">
                <arg name="/doc/exception[@id='2']">INVALID_PARAMS</arg>
                <arg name="/doc/error" comp="starts_with" substitute="1">BlackBox error: Unsupported get_members_info value: '\~`cgi:get_members_info`'. Could be: 'all' or 'kids'. request_id=</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/exception/value">INVALID_PARAMS</arg>
                <arg name="/exception/id">2</arg>
                <arg name="/error" comp="starts_with" substitute="1">BlackBox error: Unsupported get_members_info value: '\~`cgi:get_members_info`'. Could be: 'all' or 'kids'. request_id=</arg>
            </jsonBody>
        </result>

        <result name="family_info_f1_with_place_with_members_info_all">
            <body func="matchxpath">
                <arg name="/doc/status/value">OK</arg>
                <arg name="/doc/status/description">dontmatch</arg>
                <arg name="count(/doc/family)">1</arg>
                <arg name="/doc/family/@id">f1</arg>
                <arg name="/doc/family/admin_uid">70500</arg>
                <arg name="count(/doc/family/user)">3</arg>
                <arg name="/doc/family/user[@place='1'][@uid='70500']/uid">70500</arg>
                <arg name="/doc/family/user[@place='2'][@uid='71001']/uid">71001</arg>
                <arg name="/doc/family/user[@place='4'][@uid='71011'][@is_child='1']/uid">71011</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/status" res_mod="key_count">1</arg>
                <arg name="/status/value">OK</arg>
                <arg name="/family" res_mod="key_count">1</arg>
                <arg name="/family/f1" res_mod="key_count">2</arg>
                <arg name="/family/f1/admin_uid">70500</arg>
                <arg name="/family/f1/users" res_mod="array_size">3</arg>
                <arg name="/family/f1/users/0" res_mod="key_count">3</arg>
                <arg name="/family/f1/users/0/uid">70500</arg>
                <arg name="/family/f1/users/0/place">1</arg>
                <arg name="/family/f1/users/0/info/uid/value">70500</arg>
                <arg name="/family/f1/users/1" res_mod="key_count">3</arg>
                <arg name="/family/f1/users/1/uid">71001</arg>
                <arg name="/family/f1/users/1/place">2</arg>
                <arg name="/family/f1/users/1/info/uid/value">71001</arg>
                <arg name="/family/f1/users/2" res_mod="key_count">4</arg>
                <arg name="/family/f1/users/2/uid">71011</arg>
                <arg name="/family/f1/users/2/place">4</arg>
                <arg name="/family/f1/users/2/is_child">true</arg>
                <arg name="/family/f1/users/2/info/uid/value">71011</arg>
            </jsonBody>
        </result>
        <result name="family_info_f2_with_place_with_members_info_all">
            <body func="matchxpath">
                <arg name="/doc/status/value">OK</arg>
                <arg name="/doc/status/description">dontmatch</arg>
                <arg name="count(/doc/family)">1</arg>
                <arg name="/doc/family/@id">f2</arg>
                <arg name="/doc/family/admin_uid">42</arg>
                <arg name="count(/doc/family/user)">2</arg>
                <arg name="/doc/family/user[@place='1'][@uid='42']/uid">42</arg>
                <arg name="/doc/family/user[@place='1']/@is_kid">dontmatch</arg>
                <arg name="/doc/family/user[@place='2'][@is_kid='1'][@uid='4053749013']/uid">4053749013</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/status" res_mod="key_count">1</arg>
                <arg name="/status/value">OK</arg>
                <arg name="/family" res_mod="key_count">1</arg>
                <arg name="/family/f2" res_mod="key_count">2</arg>
                <arg name="/family/f2/admin_uid">42</arg>
                <arg name="/family/f2/users" res_mod="array_size">2</arg>
                <arg name="/family/f2/users/0" res_mod="key_count">3</arg>
                <arg name="/family/f2/users/0/uid">42</arg>
                <arg name="/family/f2/users/0/place">1</arg>
                <arg name="/family/f2/users/0/info/uid/value">42</arg>
                <arg name="/family/f2/users/1" res_mod="key_count">4</arg>
                <arg name="/family/f2/users/1/uid">4053749013</arg>
                <arg name="/family/f2/users/1/place">2</arg>
                <arg name="/family/f2/users/1/is_kid">true</arg>
                <arg name="/family/f2/users/1/info/uid/value">4053749013</arg>
            </jsonBody>
        </result>
        <result name="family_info_f1_with_members_info_all">
            <body func="matchxpath">
                <arg name="/doc/status/value">OK</arg>
                <arg name="/doc/status/description">dontmatch</arg>
                <arg name="count(/doc/family)">1</arg>
                <arg name="/doc/family/@id">f1</arg>
                <arg name="/doc/family/admin_uid">70500</arg>
                <arg name="count(/doc/family/user)">3</arg>
                <arg name="/doc/family/user[@uid='70500']/uid">70500</arg>
                <arg name="/doc/family/user[@uid='71001']/uid">71001</arg>
                <arg name="/doc/family/user[@uid='71011'][@is_child='1']/uid">71011</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/status" res_mod="key_count">1</arg>
                <arg name="/status/value">OK</arg>
                <arg name="/family" res_mod="key_count">1</arg>
                <arg name="/family/f1" res_mod="key_count">2</arg>
                <arg name="/family/f1/admin_uid">70500</arg>
                <arg name="/family/f1/users" res_mod="array_size">3</arg>
                <arg name="/family/f1/users/0" res_mod="key_count">2</arg>
                <arg name="/family/f1/users/0/uid">70500</arg>
                <arg name="/family/f1/users/0/info/uid/value">70500</arg>
                <arg name="/family/f1/users/1" res_mod="key_count">2</arg>
                <arg name="/family/f1/users/1/uid">71001</arg>
                <arg name="/family/f1/users/1/info/uid/value">71001</arg>
                <arg name="/family/f1/users/2" res_mod="key_count">3</arg>
                <arg name="/family/f1/users/2/uid">71011</arg>
                <arg name="/family/f1/users/2/is_child">true</arg>
                <arg name="/family/f1/users/2/info/uid/value">71011</arg>
            </jsonBody>
        </result>
        <result name="family_info_f2_with_members_info_all">
            <body func="matchxpath">
                <arg name="/doc/status/value">OK</arg>
                <arg name="/doc/status/description">dontmatch</arg>
                <arg name="count(/doc/family)">1</arg>
                <arg name="/doc/family/@id">f2</arg>
                <arg name="/doc/family/admin_uid">42</arg>
                <arg name="count(/doc/family/user)">2</arg>
                <arg name="/doc/family/user[@uid='42']/uid">42</arg>
                <arg name="/doc/family/user[@uid='42']/@is_kid">dontmatch</arg>
                <arg name="/doc/family/user[@is_kid='1'][@uid='4053749013']/uid">4053749013</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/status" res_mod="key_count">1</arg>
                <arg name="/status/value">OK</arg>
                <arg name="/family" res_mod="key_count">1</arg>
                <arg name="/family/f2" res_mod="key_count">2</arg>
                <arg name="/family/f2/admin_uid">42</arg>
                <arg name="/family/f2/users" res_mod="array_size">2</arg>
                <arg name="/family/f2/users/0" res_mod="key_count">2</arg>
                <arg name="/family/f2/users/0/uid">42</arg>
                <arg name="/family/f2/users/0/info/uid/value">42</arg>
                <arg name="/family/f2/users/1" res_mod="key_count">3</arg>
                <arg name="/family/f2/users/1/uid">4053749013</arg>
                <arg name="/family/f2/users/1/is_kid">true</arg>
                <arg name="/family/f2/users/1/info/uid/value">4053749013</arg>
            </jsonBody>
        </result>

        <result name="family_info_f1_with_place_with_members_info_kids">
            <body func="matchxpath">
                <arg name="/doc/status/value">OK</arg>
                <arg name="/doc/status/description">dontmatch</arg>
                <arg name="count(/doc/family)">1</arg>
                <arg name="/doc/family/@id">f1</arg>
                <arg name="/doc/family/admin_uid">70500</arg>
                <arg name="count(/doc/family/user)">0</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/status" res_mod="key_count">1</arg>
                <arg name="/status/value">OK</arg>
                <arg name="/family" res_mod="key_count">1</arg>
                <arg name="/family/f1" res_mod="key_count">2</arg>
                <arg name="/family/f1/admin_uid">70500</arg>
                <arg name="/family/f1/users" res_mod="array_size">0</arg>
            </jsonBody>
        </result>
        <result name="family_info_f2_with_place_with_members_info_kids">
            <body func="matchxpath">
                <arg name="/doc/status/value">OK</arg>
                <arg name="/doc/status/description">dontmatch</arg>
                <arg name="count(/doc/family)">1</arg>
                <arg name="/doc/family/@id">f2</arg>
                <arg name="/doc/family/admin_uid">42</arg>
                <arg name="count(/doc/family/user)">1</arg>
                <arg name="/doc/family/user[@place='2'][@is_kid='1'][@uid='4053749013']/uid">4053749013</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/status" res_mod="key_count">1</arg>
                <arg name="/status/value">OK</arg>
                <arg name="/family" res_mod="key_count">1</arg>
                <arg name="/family/f2" res_mod="key_count">2</arg>
                <arg name="/family/f2/admin_uid">42</arg>
                <arg name="/family/f2/users" res_mod="array_size">1</arg>
                <arg name="/family/f2/users/0" res_mod="key_count">4</arg>
                <arg name="/family/f2/users/0/uid">4053749013</arg>
                <arg name="/family/f2/users/0/place">2</arg>
                <arg name="/family/f2/users/0/is_kid">true</arg>
                <arg name="/family/f2/users/0/info/uid/value">4053749013</arg>
            </jsonBody>
        </result>
        <result name="family_info_f1_with_members_info_kids">
            <body func="matchxpath">
                <arg name="/doc/status/value">OK</arg>
                <arg name="/doc/status/description">dontmatch</arg>
                <arg name="count(/doc/family)">1</arg>
                <arg name="/doc/family/@id">f1</arg>
                <arg name="/doc/family/admin_uid">70500</arg>
                <arg name="count(/doc/family/user)">0</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/status" res_mod="key_count">1</arg>
                <arg name="/status/value">OK</arg>
                <arg name="/family" res_mod="key_count">1</arg>
                <arg name="/family/f1" res_mod="key_count">2</arg>
                <arg name="/family/f1/admin_uid">70500</arg>
                <arg name="/family/f1/users" res_mod="array_size">0</arg>
            </jsonBody>
        </result>
        <result name="family_info_f2_with_members_info_kids">
            <body func="matchxpath">
                <arg name="/doc/status/value">OK</arg>
                <arg name="/doc/status/description">dontmatch</arg>
                <arg name="count(/doc/family)">1</arg>
                <arg name="/doc/family/@id">f2</arg>
                <arg name="/doc/family/admin_uid">42</arg>
                <arg name="count(/doc/family/user)">1</arg>
                <arg name="/doc/family/user[@uid='4053749013']/uid">4053749013</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/status" res_mod="key_count">1</arg>
                <arg name="/status/value">OK</arg>
                <arg name="/family" res_mod="key_count">1</arg>
                <arg name="/family/f2" res_mod="key_count">2</arg>
                <arg name="/family/f2/admin_uid">42</arg>
                <arg name="/family/f2/users" res_mod="array_size">1</arg>
                <arg name="/family/f2/users/0" res_mod="key_count">3</arg>
                <arg name="/family/f2/users/0/uid">4053749013</arg>
                <arg name="/family/f2/users/0/is_kid">true</arg>
                <arg name="/family/f2/users/0/info/uid/value">4053749013</arg>
            </jsonBody>
        </result>

        <result name="family_info_f1_with_place_with_members_info_children">
            <body func="matchxpath">
                <arg name="/doc/status/value">OK</arg>
                <arg name="/doc/status/description">dontmatch</arg>
                <arg name="count(/doc/family)">1</arg>
                <arg name="/doc/family/@id">f1</arg>
                <arg name="/doc/family/admin_uid">70500</arg>
                <arg name="count(/doc/family/user)">1</arg>
                <arg name="/doc/family/user[@place='4'][@uid='71011'][@is_child='1']/uid">71011</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/status" res_mod="key_count">1</arg>
                <arg name="/status/value">OK</arg>
                <arg name="/family" res_mod="key_count">1</arg>
                <arg name="/family/f1" res_mod="key_count">2</arg>
                <arg name="/family/f1/admin_uid">70500</arg>
                <arg name="/family/f1/users" res_mod="array_size">1</arg>
                <arg name="/family/f1/users/0" res_mod="key_count">4</arg>
                <arg name="/family/f1/users/0/uid">71011</arg>
                <arg name="/family/f1/users/0/place">4</arg>
                <arg name="/family/f1/users/0/is_child">true</arg>
                <arg name="/family/f1/users/0/info/uid/value">71011</arg>
            </jsonBody>
        </result>
        <result name="family_info_f1_with_members_info_children">
            <body func="matchxpath">
                <arg name="/doc/status/value">OK</arg>
                <arg name="/doc/status/description">dontmatch</arg>
                <arg name="count(/doc/family)">1</arg>
                <arg name="/doc/family/@id">f1</arg>
                <arg name="/doc/family/admin_uid">70500</arg>
                <arg name="count(/doc/family/user)">1</arg>
                <arg name="/doc/family/user[@uid='71011'][@is_child='1']/uid">71011</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/status" res_mod="key_count">1</arg>
                <arg name="/status/value">OK</arg>
                <arg name="/family" res_mod="key_count">1</arg>
                <arg name="/family/f1" res_mod="key_count">2</arg>
                <arg name="/family/f1/admin_uid">70500</arg>
                <arg name="/family/f1/users" res_mod="array_size">1</arg>
                <arg name="/family/f1/users/0" res_mod="key_count">3</arg>
                <arg name="/family/f1/users/0/uid">71011</arg>
                <arg name="/family/f1/users/0/is_child">true</arg>
                <arg name="/family/f1/users/0/info/uid/value">71011</arg>
            </jsonBody>
        </result>
        <result name="family_info_f2_no_users">
            <body func="matchxpath">
                <arg name="/doc/status/value">OK</arg>
                <arg name="/doc/status/description">dontmatch</arg>
                <arg name="count(/doc/family)">1</arg>
                <arg name="/doc/family/@id">f2</arg>
                <arg name="/doc/family/admin_uid">42</arg>
                <arg name="count(/doc/family/user)">0</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/status" res_mod="key_count">1</arg>
                <arg name="/status/value">OK</arg>
                <arg name="/family" res_mod="key_count">1</arg>
                <arg name="/family/f2" res_mod="key_count">2</arg>
                <arg name="/family/f2/admin_uid">42</arg>
                <arg name="/family/f2/users" res_mod="array_size">0</arg>
            </jsonBody>
        </result>

        <result name="family_info_f1_with_place_with_members_info_adults">
            <body func="matchxpath">
                <arg name="/doc/status/value">OK</arg>
                <arg name="/doc/status/description">dontmatch</arg>
                <arg name="count(/doc/family)">1</arg>
                <arg name="/doc/family/@id">f1</arg>
                <arg name="/doc/family/admin_uid">70500</arg>
                <arg name="count(/doc/family/user)">2</arg>
                <arg name="/doc/family/user[@place='1'][@uid='70500']/uid">70500</arg>
                <arg name="/doc/family/user[@place='2'][@uid='71001']/uid">71001</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/status" res_mod="key_count">1</arg>
                <arg name="/status/value">OK</arg>
                <arg name="/family" res_mod="key_count">1</arg>
                <arg name="/family/f1" res_mod="key_count">2</arg>
                <arg name="/family/f1/admin_uid">70500</arg>
                <arg name="/family/f1/users" res_mod="array_size">2</arg>
                <arg name="/family/f1/users/0" res_mod="key_count">3</arg>
                <arg name="/family/f1/users/0/uid">70500</arg>
                <arg name="/family/f1/users/0/place">1</arg>
                <arg name="/family/f1/users/0/info/uid/value">70500</arg>
                <arg name="/family/f1/users/1" res_mod="key_count">3</arg>
                <arg name="/family/f1/users/1/uid">71001</arg>
                <arg name="/family/f1/users/1/place">2</arg>
                <arg name="/family/f1/users/1/info/uid/value">71001</arg>
            </jsonBody>
        </result>
        <result name="family_info_f2_with_place_with_members_info_adults">
            <body func="matchxpath">
                <arg name="/doc/status/value">OK</arg>
                <arg name="/doc/status/description">dontmatch</arg>
                <arg name="count(/doc/family)">1</arg>
                <arg name="/doc/family/@id">f2</arg>
                <arg name="/doc/family/admin_uid">42</arg>
                <arg name="count(/doc/family/user)">1</arg>
                <arg name="/doc/family/user[@place='1'][@uid='42']/uid">42</arg>
                <arg name="/doc/family/user[@place='1']/@is_kid">dontmatch</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/status" res_mod="key_count">1</arg>
                <arg name="/status/value">OK</arg>
                <arg name="/family" res_mod="key_count">1</arg>
                <arg name="/family/f2" res_mod="key_count">2</arg>
                <arg name="/family/f2/admin_uid">42</arg>
                <arg name="/family/f2/users" res_mod="array_size">1</arg>
                <arg name="/family/f2/users/0" res_mod="key_count">3</arg>
                <arg name="/family/f2/users/0/uid">42</arg>
                <arg name="/family/f2/users/0/place">1</arg>
                <arg name="/family/f2/users/0/info/uid/value">42</arg>
            </jsonBody>
        </result>
        <result name="family_info_f1_with_members_info_adults">
            <body func="matchxpath">
                <arg name="/doc/status/value">OK</arg>
                <arg name="/doc/status/description">dontmatch</arg>
                <arg name="count(/doc/family)">1</arg>
                <arg name="/doc/family/@id">f1</arg>
                <arg name="/doc/family/admin_uid">70500</arg>
                <arg name="count(/doc/family/user)">2</arg>
                <arg name="/doc/family/user[@uid='70500']/uid">70500</arg>
                <arg name="/doc/family/user[@uid='71001']/uid">71001</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/status" res_mod="key_count">1</arg>
                <arg name="/status/value">OK</arg>
                <arg name="/family" res_mod="key_count">1</arg>
                <arg name="/family/f1" res_mod="key_count">2</arg>
                <arg name="/family/f1/admin_uid">70500</arg>
                <arg name="/family/f1/users" res_mod="array_size">2</arg>
                <arg name="/family/f1/users/0" res_mod="key_count">2</arg>
                <arg name="/family/f1/users/0/uid">70500</arg>
                <arg name="/family/f1/users/0/info/uid/value">70500</arg>
                <arg name="/family/f1/users/1" res_mod="key_count">2</arg>
                <arg name="/family/f1/users/1/uid">71001</arg>
                <arg name="/family/f1/users/1/info/uid/value">71001</arg>
            </jsonBody>
        </result>
        <result name="family_info_f2_with_members_info_adults">
            <body func="matchxpath">
                <arg name="/doc/status/value">OK</arg>
                <arg name="/doc/status/description">dontmatch</arg>
                <arg name="count(/doc/family)">1</arg>
                <arg name="/doc/family/@id">f2</arg>
                <arg name="/doc/family/admin_uid">42</arg>
                <arg name="count(/doc/family/user)">1</arg>
                <arg name="/doc/family/user[@uid='42']/uid">42</arg>
                <arg name="/doc/family/user[@uid='42']/@is_kid">dontmatch</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/status" res_mod="key_count">1</arg>
                <arg name="/status/value">OK</arg>
                <arg name="/family" res_mod="key_count">1</arg>
                <arg name="/family/f2" res_mod="key_count">2</arg>
                <arg name="/family/f2/admin_uid">42</arg>
                <arg name="/family/f2/users" res_mod="array_size">1</arg>
                <arg name="/family/f2/users/0" res_mod="key_count">2</arg>
                <arg name="/family/f2/users/0/uid">42</arg>
                <arg name="/family/f2/users/0/info/uid/value">42</arg>
            </jsonBody>
        </result>

        <result name="family_info_bad_uset_ticket__kid">
            <body func="matchxpath">
                <arg name="/doc/status/value">WRONG_USER</arg>
                <arg name="/doc/status/description">default_uid from UserTicket == '4053749013' is kid</arg>
                <arg name="count(/doc/family)">1</arg>
                <arg name="/doc/family"></arg>
                <arg name="/doc/family/@id">f2</arg>
                <arg name="/doc/family/admin_uid">dontmatch</arg>
                <arg name="/doc/family/user">dontmatch</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/status" res_mod="key_count">2</arg>
                <arg name="/status/value">WRONG_USER</arg>
                <arg name="/status/description">default_uid from UserTicket == '4053749013' is kid</arg>
                <arg name="/family" res_mod="key_count">1</arg>
                <arg name="/family/f2" res_mod="key_count">0</arg>
            </jsonBody>
        </result>
        <result name="family_info_bad_uset_ticket__non_member">
            <body func="matchxpath">
                <arg name="/doc/status/value">WRONG_USER</arg>
                <arg name="/doc/status/description">default_uid from UserTicket == '70496' does not belong to family 'f2'</arg>
                <arg name="count(/doc/family)">1</arg>
                <arg name="/doc/family"></arg>
                <arg name="/doc/family/@id">f2</arg>
                <arg name="/doc/family/admin_uid">dontmatch</arg>
                <arg name="/doc/family/user">dontmatch</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/status" res_mod="key_count">2</arg>
                <arg name="/status/value">WRONG_USER</arg>
                <arg name="/status/description">default_uid from UserTicket == '70496' does not belong to family 'f2'</arg>
                <arg name="/family" res_mod="key_count">1</arg>
                <arg name="/family/f2" res_mod="key_count">0</arg>
            </jsonBody>
        </result>
        <result name="family_info_bad_uset_ticket__bad_default_uid">
            <body func="matchxpath">
                <arg name="/doc/status/value">WRONG_USER</arg>
                <arg name="/doc/status/description" comp="starts_with">default_uid in UserTicket is '0': </arg>
                <arg name="count(/doc/family)">1</arg>
                <arg name="/doc/family"></arg>
                <arg name="/doc/family/@id">f2</arg>
                <arg name="/doc/family/admin_uid">dontmatch</arg>
                <arg name="/doc/family/user">dontmatch</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/status" res_mod="key_count">2</arg>
                <arg name="/status/value">WRONG_USER</arg>
                <arg name="/status/description" comp="starts_with">default_uid in UserTicket is '0': </arg>
                <arg name="/family" res_mod="key_count">1</arg>
                <arg name="/family/f2" res_mod="key_count">0</arg>
            </jsonBody>
        </result>
        <result name="family_info_bad_uset_ticket__invalid">
            <body func="matchxpath">
                <arg name="/doc/status/value">INVALID_USER_TICKET</arg>
                <arg name="/doc/status/description">UserTicket is invalid: Malformed ticket: 'foobar'</arg>
                <arg name="count(/doc/family)">1</arg>
                <arg name="/doc/family"></arg>
                <arg name="/doc/family/@id">f2</arg>
                <arg name="/doc/family/admin_uid">dontmatch</arg>
                <arg name="/doc/family/user">dontmatch</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/status" res_mod="key_count">2</arg>
                <arg name="/status/value">INVALID_USER_TICKET</arg>
                <arg name="/status/description">UserTicket is invalid: Malformed ticket: 'foobar'</arg>
                <arg name="/family" res_mod="key_count">1</arg>
                <arg name="/family/f2" res_mod="key_count">0</arg>
            </jsonBody>
        </result>

        <result name="family_info_with_get_allow_more_kids_true__f1">
            <body func="matchxpath">
                <arg name="/doc/status/value">OK</arg>
                <arg name="/doc/family[@id='f1']/allow_more_kids">1</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/status/value">OK</arg>
                <arg name="/family/f1/allow_more_kids">true</arg>
            </jsonBody>
        </result>
        <result name="family_info_with_get_allow_more_kids_true__f2">
            <body func="matchxpath">
                <arg name="/doc/status/value">OK</arg>
                <arg name="/doc/family[@id='f2']/allow_more_kids">1</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/status/value">OK</arg>
                <arg name="/family/f2/allow_more_kids">true</arg>
            </jsonBody>
        </result>

        <result name="family_info_with_get_allow_more_kids_false">
            <body func="matchxpath">
                <arg name="/doc/status/value">OK</arg>
                <arg name="/doc/family[@id='f120936']/allow_more_kids">0</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/status/value">OK</arg>
                <arg name="/family/f120936/allow_more_kids">false</arg>
            </jsonBody>
        </result>

        <result name="family_info_without_get_allow_more_kids">
            <body func="matchxpath">
                <arg name="/doc/status/value">OK</arg>
                <arg name="/doc/family/f2/allow_more_kids">dontmatch</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/status/value">OK</arg>
                <arg name="/family/f2/allow_more_kids">dontmatch</arg>
            </jsonBody>
        </result>

        <result name="phone_numbers_bad">
            <body func="matchxpath">
                <arg name="/doc/exception[@id='2']">INVALID_PARAMS</arg>
                <arg name="/doc/error" comp="starts_with">BlackBox error: Invalid number format: </arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/exception/value">INVALID_PARAMS</arg>
                <arg name="/exception/id">2</arg>
                <arg name="/error" comp="starts_with">BlackBox error: Invalid number format: </arg>
            </jsonBody>
        </result>
        <result name="phone_numbers_empty">
            <body func="matchxpath">
                <arg name="/doc/error">dontmatch</arg>
                <arg name="count(/doc/number)">0</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/error">dontmatch</arg>
                <arg name="" res_mod="key_count">0</arg>
            </jsonBody>
        </result>
        <result name="phone_numbers_some">
            <body func="matchxpath">
                <arg name="count(/doc/number)">4</arg>
                <arg name="count(/doc/number[@id='02']/uids/item)">0</arg>
                <arg name="count(/doc/number[@id='79032426488']/uids/item)">2</arg>
                <arg name="/doc/number[@id='79032426488']/uids/item[1]/@id">71001</arg>
                <arg name="/doc/number[@id='79032426488']/uids/item[2]/@id">4001126940</arg>
                <arg name="count(/doc/number[@id='79161111111']/uids/item)">1</arg>
                <arg name="/doc/number[@id='79161111111']/uids/item[1]/@id">70470</arg>
                <arg name="count(/doc/number[@id='79161112233']/uids/item)">1</arg>
                <arg name="/doc/number[@id='79161112233']/uids/item[1]/@id">1130000000000015</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="" res_mod="key_count">4</arg>
                <arg name="/02/uids" res_mod="array_size">0</arg>
                <arg name="/79032426488/uids" res_mod="array_size">2</arg>
                <arg name="/79032426488/uids/0">71001</arg>
                <arg name="/79032426488/uids/1">4001126940</arg>
                <arg name="/79161111111/uids" res_mod="array_size">1</arg>
                <arg name="/79161111111/uids/0">70470</arg>
                <arg name="/79161112233/uids" res_mod="array_size">1</arg>
                <arg name="/79161112233/uids/0">1130000000000015</arg>
            </jsonBody>
        </result>

        <result name="public_id_100500_v0">
            <body func="matchxpath">
                <arg name="/doc/exception">dontmatch</arg>
                <arg name="/doc/error">dontmatch</arg>
                <arg name="/doc/public_id">1y2u71atbq7103bhtwu7yfyrtn</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/exception">dontmatch</arg>
                <arg name="/error">dontmatch</arg>
                <arg name="/public_id">1y2u71atbq7103bhtwu7yfyrtn</arg>
            </jsonBody>
        </result>
        <result name="public_id_100500_v1">
            <body func="matchxpath">
                <arg name="/doc/exception">dontmatch</arg>
                <arg name="/doc/error">dontmatch</arg>
                <arg name="/doc/public_id">h2fe4c21u6kkndjbdh23ka7499</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/exception">dontmatch</arg>
                <arg name="/error">dontmatch</arg>
                <arg name="/public_id">h2fe4c21u6kkndjbdh23ka7499</arg>
            </jsonBody>
        </result>
        <result name="public_id_70502_v0">
            <body func="matchxpath">
                <arg name="/doc/exception">dontmatch</arg>
                <arg name="/doc/error">dontmatch</arg>
                <arg name="/doc/public_id">zmcnq7jeqmjtraq5b2qk60a2vn</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/exception">dontmatch</arg>
                <arg name="/error">dontmatch</arg>
                <arg name="/public_id">zmcnq7jeqmjtraq5b2qk60a2vn</arg>
            </jsonBody>
        </result>
        <result name="public_id_70502_v1">
            <body func="matchxpath">
                <arg name="/doc/exception">dontmatch</arg>
                <arg name="/doc/error">dontmatch</arg>
                <arg name="/doc/public_id">wxbwya0fe14w3bvqgg8eby481h</arg>
            </body>
            <jsonBody func="matchjsonpoint">
                <arg name="/exception">dontmatch</arg>
                <arg name="/error">dontmatch</arg>
                <arg name="/public_id">wxbwya0fe14w3bvqgg8eby481h</arg>
            </jsonBody>
        </result>

    </variables>

    <node>
        <description> blackbox passport methods test </description>
        <url>http://passdev2.yandex.ru</url>
        <!-- before test update yakey_backups backup timeout -->
        <pre-test>
        set -e
        T=`date +%s`;
        if [ -z $RECIPE_MYSQL_DIR ]; then MYSQL_HOST="cnt-dbm-test.passport.yandex.net"; else MYSQL_HOST="127.0.0.1"; fi
        MYSQL_CREDS="-h $MYSQL_HOST -P ${RECIPE_MYSQL_PORT:-3306} --protocol tcp -u $BB_PASSPORTDB_USER_RW ${BB_PASSPORTDB_PASSWD_RW:+-p$BB_PASSPORTDB_PASSWD_RW}"

        ${RECIPE_MYSQL_DIR}mysql $MYSQL_CREDS -Dpassportdbcentral -e "UPDATE yakey_backups SET updated=FROM_UNIXTIME($T-3600) WHERE phone_number=79161111111;"
        </pre-test>

        <case lastid="loginoccupation">
            <description>Testing loginoccupation method behavior</description>
            <path>blackbox</path>
            <cgi name="method">loginoccupation</cgi>
            <cgi name="logins">list1;list2;list3</cgi>
            <cgi name="ignore_stoplist" withnull="1">*</cgi>
            <cgi name="is_pdd" withnull="1">*</cgi>
            <cgi name="format">*</cgi>

            <check>
                <cgi name="ignore_stoplist">yes;one;empty</cgi>
                <cgi name="is_pdd">true;one;empty</cgi>
                <result>list_nostop_pdd</result>
            </check>

            <check>
                <cgi name="ignore_stoplist">yes;one;empty</cgi>
                <result>list_nostop_nopdd</result>
            </check>

            <check>
                <cgi name="is_pdd">true;one;empty</cgi>
                <result>list_stop_pdd</result>
            </check>

            <check>
                <result>list_stop_nopdd</result>
            </check>
        </case>

        <case lastid="phone_op">
            <description>Testing phone_operations method behavior</description>
            <path>blackbox</path>
            <cgi name="method">phone_operations</cgi>
            <cgi name="finished_before" withnull="1">*</cgi>
            <cgi name="format">*</cgi>

            <check>
                <cgi name="finished_before" withnull="1">empty</cgi>
                <result>po_exception</result>
            </check>

            <check>
                <cgi name="finished_before">with_data</cgi>
                <result>po_match</result>
            </check>
            <check>
                <cgi name="finished_before">no_data</cgi>
                <result>po_no_match</result>
            </check>
        </case>

        <case lastid="pwd">
            <description>Testing test_pwd_hashes method behavior</description>
            <path>blackbox</path>
            <cgi name="method">test_pwd_hashes</cgi>
            <cgi name="hashes" withnull="1">*</cgi>
            <cgi name="password" withnull="1">*</cgi>
            <cgi name="uid" withnull="1">junit-test;dot.user</cgi>
            <cgi name="format">*</cgi>

            <check>
                <cgi name="hashes" withnull="1">empty</cgi>
                <result>po_exception</result>
            </check>
            <check>
                <cgi name="password" withnull="1"></cgi>
                <result>po_exception</result>
            </check>

            <check>
                <cgi name="password">qwerty</cgi>
                <cgi name="hashes">qwerty1;qwerty2;qwerty12</cgi>
                <result>pwd_true</result>
            </check>
            <check>
                <cgi name="password">qwerty</cgi>
                <cgi name="hashes">qwerty1qweqwe2</cgi>
                <result>pwd_qwerty1_true_qweqwe2_false</result>
            </check>
            <check>
                <cgi name="password">qwerty</cgi>
                <cgi name="hashes">qwerty2qweqwe1</cgi>
                <result>pwd_qwerty2_true_qweqwe1_false</result>
            </check>
            <check>
                <cgi name="password">qwerty</cgi>
                <cgi name="hashes">qwerty5_junit</cgi>
                <cgi name="uid">junit-test</cgi>
                <result>pwd_true</result>
            </check>
            <check>
                <cgi name="password">qwerty</cgi>
                <cgi name="hashes">qwerty5_dotuser</cgi>
                <cgi name="uid">dot.user</cgi>
                <result>pwd_true</result>
            </check>
            <check>
                <cgi name="password">qwerty</cgi>
                <result>pwd_false</result>
            </check>

            <check>
                <cgi name="password">qweqwe</cgi>
                <cgi name="hashes">qweqwe1;qweqwe2;qweqwe12</cgi>
                <result>pwd_true</result>
            </check>
            <check>
                <cgi name="password">qweqwe</cgi>
                <cgi name="hashes">qwerty1qweqwe2</cgi>
                <result>pwd_qwerty1_false_qweqwe2_true</result>
            </check>
            <check>
                <cgi name="password">qweqwe</cgi>
                <cgi name="hashes">qwerty2qweqwe1</cgi>
                <result>pwd_qwerty2_false_qweqwe1_true</result>
            </check>
            <check>
                <cgi name="password">qweqwe</cgi>
                <cgi name="hashes">qweqwe5_junit</cgi>
                <cgi name="uid">junit-test</cgi>
                <result>pwd_true</result>
            </check>
            <check>
                <cgi name="password">qweqwe</cgi>
                <cgi name="hashes">qweqwe5_dotuser</cgi>
                <cgi name="uid">dot.user</cgi>
                <result>pwd_true</result>
            </check>
            <check>
                <cgi name="password">qweqwe</cgi>
                <result>pwd_false</result>
            </check>

        </case>

        <case lastid="track">
            <description>Testing get_track method behavior</description>
            <path>blackbox</path>
            <cgi name="method">get_track</cgi>
            <cgi name="uid">two_msgs2</cgi>
            <cgi name="track_id">*</cgi>
            <cgi name="format">*</cgi>

            <check>
                <cgi name="track_id">normal</cgi>
                <result>track_ok</result>
            </check>

            <check>
                <result>track_bad</result>
            </check>
        </case>

        <case lastid="email_bindings">
            <description>Testing email_bindings method behavior</description>
            <path>blackbox</path>
            <cgi name="method">email_bindings</cgi>
            <cgi name="email">*</cgi>
            <cgi name="format">*</cgi>

            <check>
                <cgi name="email">cerevra_yt</cgi>
                <result>email_bindings_ok</result>
            </check>

            <check>
                <result>email_bindings_bad</result>
            </check>
        </case>

        <case lastid="all_tracks">
            <description>Testing get_all_tracks method behavior</description>
            <path>blackbox</path>
            <cgi name="method">get_all_tracks</cgi>
            <cgi name="uid">junit-test;one_phone</cgi>
            <cgi name="format">*</cgi>

            <check>
                <cgi name="uid">junit-test</cgi>
                <result>all_tracks_ok</result>
            </check>

            <check>
                <result>all_tracks_bad</result>
            </check>
        </case>

        <case lastid="yakey_backup">
            <description>Testing yakey_backup method behavior</description>
            <path>blackbox</path>
            <cgi name="method">yakey_backup</cgi>
            <cgi name="phone_number" withnull="1">*</cgi>
            <cgi name="meta">*</cgi>
            <cgi name="format">*</cgi>

            <check>
                <cgi name="phone_number" withnull="1"></cgi>
                <result>yakey_missing_phone</result>
            </check>
            <check>
                <cgi name="phone_number">bad</cgi>
                <result>yakey_bad_phone</result>
            </check>


            <check>
                <cgi name="meta">false</cgi>
                <cgi name="phone_number">1</cgi>
                <result>yakey_one</result>
            </check>

            <check>
                <cgi name="meta">true</cgi>
                <cgi name="phone_number">1</cgi>
                <result>yakey_one_meta</result>
            </check>

            <check>
                <result>yakey_empty</result>
            </check>
        </case>

        <case lastid="recovery_keys">
            <description>Testing get_recovery_keys method behavior</description>
            <path>blackbox</path>
            <cgi name="method">get_recovery_keys</cgi>
            <cgi name="uid" withnull="1">*</cgi>
            <cgi name="key_id" withnull="1">*</cgi>
            <cgi name="format">*</cgi>

            <check>
                <cgi name="uid">invalid</cgi>
                <result>invalid_uid</result>
            </check>
            <check>
                <cgi name="uid" withnull="1"></cgi>
                <result>missing_uid</result>
            </check>
            <check>
                <cgi name="key_id" withnull="1"></cgi>
                <result>missing_key_id</result>
            </check>

            <check>
                <cgi name="uid">junit-test</cgi>
                <cgi name="key_id">key1; key1pad</cgi>
                <result>recovery_keys_70500_1</result>
            </check>
            <check>
                <cgi name="uid">junit-test</cgi>
                <cgi name="key_id">key2; key2pad</cgi>
                <result>recovery_keys_70500_2</result>
            </check>
            <check>
                <cgi name="uid">dot.user</cgi>
                <cgi name="key_id">key1; key1pad</cgi>
                <result>recovery_keys_70501</result>
            </check>

            <check>
                <result>recovery_keys_empty</result>
            </check>
        </case>

        <case lastid="check_has_plus">
            <description>Testing check_has_plus method behavior</description>
            <path>blackbox</path>
            <cgi name="method">check_has_plus</cgi>
            <cgi name="phone_number" withnull="1">*</cgi>
            <cgi name="format">*</cgi>

            <check>
                <cgi name="phone_number" withnull="1"></cgi>
                <result>yakey_missing_phone</result>
            </check>
            <check>
                <cgi name="phone_number">bad</cgi>
                <result>yakey_bad_phone</result>
            </check>

            <check>
                <cgi name="phone_number">has_plus</cgi>
                <result>check_has_plus_true</result>
            </check>
            <check>
                <cgi name="phone_number">pdd_has_plus</cgi>
                <result>check_has_plus_true_pdd</result>
            </check>
            <check>
                <cgi name="phone_number">sh1_blocked__sh2_ok</cgi>
                <result>check_has_plus_true_several</result>
            </check>

            <check>
                <result>check_has_plus_false</result>
            </check>
        </case>

        <case lastid="family_info">
            <description>method=family_info</description>
            <path>blackbox</path>
            <cgi name="method">family_info</cgi>
            <cgi name="family_id">f1;f2;f3</cgi>
            <cgi name="format">*</cgi>
            <cgi name="get_place" withnull="1">*</cgi>
            <cgi name="get_members_info" withnull="1">*</cgi>
            <cgi name="attributes">is_child</cgi>

            <check>
                <cgi name="get_members_info">invalid</cgi>
                <result>family_info__bad_get_members_info</result>
            </check>

            <check>
                <cgi name="family_id">f1</cgi>
                <cgi name="get_place">yes</cgi>
                <cgi name="get_members_info" withnull="1"></cgi>
                <result>family_info_f1_with_place</result>
            </check>
            <check>
                <cgi name="family_id">f2</cgi>
                <cgi name="get_place">yes</cgi>
                <cgi name="get_members_info" withnull="1"></cgi>
                <result>family_info_f2_with_place</result>
            </check>
            <check>
                <cgi name="family_id">f1</cgi>
                <cgi name="get_members_info" withnull="1"></cgi>
                <result>family_info_f1</result>
            </check>
            <check>
                <cgi name="family_id">f2</cgi>
                <cgi name="get_members_info" withnull="1"></cgi>
                <result>family_info_f2</result>
            </check>

            <check>
                <cgi name="family_id">f1</cgi>
                <cgi name="get_place">yes</cgi>
                <cgi name="get_members_info">all</cgi>
                <result>family_info_f1_with_place_with_members_info_all</result>
            </check>
            <check>
                <cgi name="family_id">f2</cgi>
                <cgi name="get_place">yes</cgi>
                <cgi name="get_members_info">all</cgi>
                <result>family_info_f2_with_place_with_members_info_all</result>
            </check>
            <check>
                <cgi name="family_id">f1</cgi>
                <cgi name="get_members_info">all</cgi>
                <result>family_info_f1_with_members_info_all</result>
            </check>
            <check>
                <cgi name="family_id">f2</cgi>
                <cgi name="get_members_info">all</cgi>
                <result>family_info_f2_with_members_info_all</result>
            </check>

            <check>
                <cgi name="family_id">f1</cgi>
                <cgi name="get_place">yes</cgi>
                <cgi name="get_members_info">kids</cgi>
                <result>family_info_f1_with_place_with_members_info_kids</result>
            </check>
            <check>
                <cgi name="family_id">f2</cgi>
                <cgi name="get_place">yes</cgi>
                <cgi name="get_members_info">kids</cgi>
                <result>family_info_f2_with_place_with_members_info_kids</result>
            </check>
            <check>
                <cgi name="family_id">f1</cgi>
                <cgi name="get_members_info">kids</cgi>
                <result>family_info_f1_with_members_info_kids</result>
            </check>
            <check>
                <cgi name="family_id">f2</cgi>
                <cgi name="get_members_info">kids</cgi>
                <result>family_info_f2_with_members_info_kids</result>
            </check>

            <check>
                <cgi name="family_id">f1</cgi>
                <cgi name="get_place">yes</cgi>
                <cgi name="get_members_info">children</cgi>
                <result>family_info_f1_with_place_with_members_info_children</result>
            </check>
            <check>
                <cgi name="family_id">f1</cgi>
                <cgi name="get_members_info">children</cgi>
                <result>family_info_f1_with_members_info_children</result>
            </check>
            <check>
                <cgi name="family_id">f2</cgi>
                <cgi name="get_place" withnull="1">yes</cgi>
                <cgi name="get_members_info">children</cgi>
                <result>family_info_f2_no_users</result>
            </check>

            <check>
                <cgi name="family_id">f1</cgi>
                <cgi name="get_place">yes</cgi>
                <cgi name="get_members_info">adults</cgi>
                <result>family_info_f1_with_place_with_members_info_adults</result>
            </check>
            <check>
                <cgi name="family_id">f2</cgi>
                <cgi name="get_place">yes</cgi>
                <cgi name="get_members_info">adults</cgi>
                <result>family_info_f2_with_place_with_members_info_adults</result>
            </check>
            <check>
                <cgi name="family_id">f1</cgi>
                <cgi name="get_members_info">adults</cgi>
                <result>family_info_f1_with_members_info_adults</result>
            </check>
            <check>
                <cgi name="family_id">f2</cgi>
                <cgi name="get_members_info">adults</cgi>
                <result>family_info_f2_with_members_info_adults</result>
            </check>

            <check>
                <result>family_info_empty</result>
            </check>
        </case>

        <case lastid="family_info">
            <description>method=family_info with user_ticket</description>
            <path>blackbox</path>
            <cgi name="method">family_info</cgi>
            <cgi name="family_id">f2</cgi>
            <cgi name="format">*</cgi>
            <cgi name="get_members_info">all;kids</cgi>
            <cgi name="user_ticket" withnull="1">*</cgi>

            <check>
                <cgi name="user_ticket">4053749013</cgi>
                <result>family_info_bad_uset_ticket__kid</result>
            </check>
            <check>
                <cgi name="user_ticket">70496</cgi>
                <result>family_info_bad_uset_ticket__non_member</result>
            </check>
            <check>
                <cgi name="user_ticket">bad_default_uid</cgi>
                <result>family_info_bad_uset_ticket__bad_default_uid</result>
            </check>
            <check>
                <cgi name="user_ticket">invalid</cgi>
                <result>family_info_bad_uset_ticket__invalid</result>
            </check>

            <check>
                <cgi name="get_members_info">all</cgi>
                <result>family_info_f2_with_members_info_all</result>
            </check>
            <check>
                <cgi name="get_members_info">kids</cgi>
                <result>family_info_f2_with_members_info_kids</result>
            </check>
        </case>

        <case lastid="family_info">
            <description>method=family_info with get_allow_more_kids</description>
            <path>blackbox</path>
            <cgi name="method">family_info</cgi>
            <cgi name="family_id">f1;f2;full_family</cgi>
            <cgi name="format">*</cgi>
            <cgi name="get_allow_more_kids" withnull="1">*</cgi>

            <check>
                <cgi name="family_id">f1</cgi>
                <cgi name="get_allow_more_kids">yes</cgi>
                <result>family_info_with_get_allow_more_kids_true__f1</result>
            </check>
            <check>
                <cgi name="family_id">f2</cgi>
                <cgi name="get_allow_more_kids">yes</cgi>
                <result>family_info_with_get_allow_more_kids_true__f2</result>
            </check>

            <check>
                <cgi name="family_id">full_family</cgi>
                <cgi name="get_allow_more_kids">yes</cgi>
                <result>family_info_with_get_allow_more_kids_false</result>
            </check>

            <check>
                <cgi name="get_allow_more_kids" withnull="1"></cgi>
                <result>family_info_without_get_allow_more_kids</result>
            </check>
        </case>

        <case lastid="find_by_phone_numbers">
            <description>method=find_by_phone_numbers</description>
            <path>blackbox</path>
            <cgi name="method">find_by_phone_numbers</cgi>
            <cgi name="numbers">*</cgi>
            <cgi name="format">*</cgi>

            <check>
                <cgi name="numbers">bad</cgi>
                <result>phone_numbers_bad</result>
            </check>

            <check>
                <cgi name="numbers">empty</cgi>
                <result>phone_numbers_empty</result>
            </check>

            <check>
                <result>phone_numbers_some</result>
            </check>
        </case>

        <case lastid="generate_public_id">
            <description>method=generate_public_id</description>
            <path>blackbox</path>
            <cgi name="method">generate_public_id</cgi>
            <cgi name="uid" withnull="1">invalid;public_id_v1;doesntexist</cgi>
            <cgi name="version" withnull="1">*</cgi>
            <cgi name="format">*</cgi>

            <check>
                <cgi name="uid">invalid</cgi>
                <result>invalid_uid</result>
            </check>
            <check>
                <cgi name="uid" withnull="1"></cgi>
                <result>missing_uid</result>
            </check>
            <check>
                <cgi name="version">bad</cgi>
                <result>invalid_version</result>
            </check>

            <check>
                <cgi name="uid">doesntexist</cgi>
                <cgi name="version" withnull="1">0</cgi>
                <result>public_id_100500_v0</result>
            </check>
            <check>
                <cgi name="uid">doesntexist</cgi>
                <cgi name="version">1</cgi>
                <result>public_id_100500_v1</result>
            </check>

            <check>
                <cgi name="uid">public_id_v1</cgi>
                <cgi name="version" withnull="1">0</cgi>
                <result>public_id_70502_v0</result>
            </check>
            <check>
                <cgi name="uid">public_id_v1</cgi>
                <cgi name="version">1</cgi>
                <result>public_id_70502_v1</result>
            </check>
        </case>
    </node>

</test>
