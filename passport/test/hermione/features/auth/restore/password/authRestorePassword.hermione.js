const pages = require('../../../../utils/passportPages');
const steps = require('../../../../helpers/api/steps');
const {commonUser, commonWithControlQuestion} = require('../../../../utils/utils');

/* TODO:
    - —É–¥–∞–ª—è—Ç—å —Å–æ–∑–¥–∞–≤–∞–µ–º—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–æ–≤
    - –ø—Ä–æ–≤–µ—Ä—è—Ç—å –ø—Ä–∏–≤—è–∑–∫—É –Ω–æ–º–µ—Ä–∞ –≤ –∫–æ–Ω—Ü–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
    - —à–∞–≥–∏ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ email'a üò±
 */

describe('/auth/restore/password', function() {
    beforeEach(async function() {
        await this.browser.url(pages.AUTH_RESTORE_PASSWORD.getUrl());
    });

    it('–ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –≤–≤–µ—Å—Ç–∏ –ª–æ–≥–∏–Ω –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ø–æ –ø—Ä—è–º–æ–π —Å—Å—ã–ª–∫–µ', async function() {
        const PO = this.PO;

        await this.browser.yaShouldHaveVisibleText(
            PO.auth.title(),
            '–í–≤–µ–¥–∏—Ç–µ ID, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø'
        );
    });

    it('–ü–æ–ø–∞–¥–∞–µ–º –Ω–∞ —ç–∫—Ä–∞–Ω –∫–∞–ø—á–∏ –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ –ª–æ–≥–∏–Ω–∞', async function() {
        const PO = this.PO;

        await this.browser.yaSetValue(PO.auth.loginInput(), commonUser.login);
        await this.browser.click(PO.submitButton());

        await this.browser.yaWaitForVisible(PO.auth.captchaImage());
        await this.browser.yaWaitForVisible(PO.auth.captchaInput());
        await this.browser.yaShouldBeAtUrl(pages.AUTH_RESTORE_PASSWORD_CAPTCHA);
    });

    it('–ü–æ–ø–∞–¥–∞–µ–º –Ω–∞ —ç–∫—Ä–∞–Ω –≤–≤–æ–¥–∞ –ö–û –ø–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∫–∞–ø—á–∏', async function() {
        const PO = this.PO;

        await this.browser.yaSetValue(PO.auth.loginInput(), commonUser.login);
        await this.browser.click(PO.submitButton());
        await this.browser.yaPassCaptcha(PO);

        await this.browser.yaShouldBeAtUrl(pages.AUTH_RESTORE_PASSWORD_METHOD);
    });

    it('–ü–æ–ª—É—á–∞–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –æ—Ç–≤–µ—Ç–µ –Ω–∞ –∫–∞–ø—á—É', async function() {
        const PO = this.PO;

        await this.browser.yaSetValue(PO.auth.loginInput(), commonUser.login);
        await this.browser.click(PO.submitButton());

        await this.browser.yaSetValue(PO.auth.captchaInput(), 'incorrect captcha');
        await this.browser.click(PO.submitButton());

        await this.browser.yaShouldHaveVisibleText(
            PO.auth.errorField(),
            '–í—ã –Ω–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–ª–∏ —Å–∏–º–≤–æ–ª—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑'
        );
    });

    it('–ü–æ–ª—É—á–∞–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –æ—Ç–≤–µ—Ç–µ –Ω–∞ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–π –≤–æ–ø—Ä–æ—Å', async function() {
        const PO = this.PO;

        await this.browser.yaSetValue(PO.auth.loginInput(), commonWithControlQuestion.login);
        await this.browser.click(PO.submitButton());
        await this.browser.yaPassCaptcha(PO);

        // question check
        await this.browser.yaSetValue(PO.auth.controlAnswerInput(), 'incorrect answer');
        await this.browser.click(PO.submitButton());

        await this.browser.yaShouldHaveVisibleText(
            PO.auth.errorField(),
            '–û—Ç–≤–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π. –í–æ–∑–º–æ–∂–Ω–æ, –≤—ã —Å–¥–µ–ª–∞–ª–∏ –æ–ø–µ—á–∞—Ç–∫—É –∏–ª–∏ –≤—ã–±—Ä–∞–ª–∏ –Ω–µ —Ç—É —Ä–∞—Å–∫–ª–∞–¥–∫—É –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.'
        );
    });

    it('–ü–æ–ø–∞–¥–∞–µ–º –Ω–∞ —ç–∫—Ä–∞–Ω –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–≤-–∫–æ', async function() {
        const PO = this.PO;

        await this.browser.yaSetValue(PO.auth.loginInput(), commonWithControlQuestion.login);
        await this.browser.click(PO.submitButton());
        await this.browser.yaPassCaptcha(PO);

        // question check
        await this.browser.yaSetValue(PO.auth.controlAnswerInput(), commonWithControlQuestion.controlAnswer);
        await this.browser.click(PO.submitButton());

        await this.browser.yaShouldBeAtUrl(pages.AUTH_RESTORE_PASSWORD_FINISH);
    });

    it('–ü–æ–ø–∞–¥–∞–µ–º –Ω–∞ —ç–∫—Ä–∞–Ω –ø—Ä–∏–≤—è–∑–∫–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è', async function() {
        const PO = this.PO;
        const user = await steps.passport.registration.createUserWithControlQuestion();

        await this.browser.yaSetValue(PO.auth.loginInput(), user.login);
        await this.browser.click(PO.submitButton());
        await this.browser.yaPassCaptcha(PO);

        // question check
        await this.browser.yaSetValue(PO.auth.controlAnswerInput(), user.controlAnswer);
        await this.browser.click(PO.submitButton());

        // password screen
        await this.browser.yaSetValue(PO.auth.passwordInput(), 'new_pwd_simple123456');
        await this.browser.yaSetValue(PO.auth.passwordConfirmInput(), 'new_pwd_simple123456');
        await this.browser.yaWaitForVisible(PO.auth.passwordEyeToggle());
        await this.browser.click(PO.submitButton());

        await this.browser.yaShouldBeAtUrl(pages.AUTH_RESTORE_PASSWORD_BIND_PHONE);
    });
});
