<?xml version="1.0"?>
<config>
    <http_daemon>
        <listen_address>localhost</listen_address>
        <port>10280</port>
        <threads>1</threads>
        <max_connections>4</max_connections>
        <max_queue_size>4</max_queue_size>
        <max_delay>1000</max_delay>
    </http_daemon>

    <component>
        <logger>
            <file>/var/log/yandex/passport-xunistater/passport-mda.log</file>
            <level>DEBUG</level>
            <print-level>yes</print-level>
            <time-format>_DEFAULT_</time-format>
        </logger>

        <parser id="parsemda" file_name="/opt/sezam-logs/nginx.mda.access.log" missingok="1">
            <http_path>/mda-access</http_path>
            <delimeter_ascii_number>32</delimeter_ascii_number>
            <ignore_parsing_errors>yes</ignore_parsing_errors>
            <ignore_processing_errors>yes</ignore_processing_errors>
            <show_error_signal>yes</show_error_signal>

            <signals>
                <signal type="hgram">
                    <column>8</column>
                    <name>upstream_answer_time</name>
                    <bounds>0,1,3,5,10,20,50,100,250,1000,3000</bounds>
                </signal>
                <signal type="regex">
                    <column>14</column>
                    <name>codes_5XX</name>
                    <regex>"5\d\d"</regex>
                </signal>
                <signal type="rps">
                    <name>rps</name>
                </signal>
                <signal type="string_set">
                    <column>14</column>
                    <prefix>code.</prefix>
                    <unquote>yes</unquote>
                    <regex_filter>
                        <expression>200</expression>
                        <select_matched>no</select_matched>
                    </regex_filter>
                </signal>
                <signal type="substring">
                    <column>7</column>
                    <name>mda0</name>
                    <value>mda="0"</value>
                </signal>

                <signal_template>
                    <name>
                        <pattern>mda.handle_{$handle}.code_{$code}.response_time</pattern>
                        <token id="code" func="as_is">
                            <column>7</column>
                            <persistent_value>503</persistent_value>
                        </token>
                        <token id="handle" func="regex_group">
                            <column>12</column>
                            <in>^/([^/]+)</in>
                            <out>api.$1</out>
                        </token>
                    </name>
                    <value type="hgram"> <!--только sum,regex,substring,rps,hgram -->
                        <column>8</column>
                    </value>
                </signal_template>
                <signal_template>
                    <name>
                        <pattern>mda.code_{$code}</pattern>
                        <token id="code" func="regex_group">
                            <column>14</column>
                            <in>"(.*)"</in>
                            <out>$1</out>
                        </token>
                    </name>
                    <value type="substring"> <!--только sum,regex,substring,rps,hgram -->
                        <column>7</column>
                        <value>yandex.ua</value>
                        <suffix>_dmmm</suffix>
                    </value>
                </signal_template>

            </signals>
        </parser>

        <parser id="parsenginx" file_name="/opt/sezam-logs/nginx.sezamapi.access.log">
            <http_path>/path4</http_path>
            <regex>.*\[[^ ]+ [-+]\d{4}\] [^ ]+ (\d+\.\d{3}) (\d+\.\d{3}) (\d+) "([^ ]+) (\/[^ ]*?) [^ ]+ \"(\d{3})\" \d+ [^ ]+ \".*?\" [^ ]+.*</regex>

            <signals>
                <signal type="rps">
                    <name>rps</name>
                </signal>
                <signal type="hgram">
                    <column>1</column>
                    <name>full_answer_time</name>
                </signal>
                <signal type="hgram">
                    <column>2</column>
                    <allow_many_values>yes</allow_many_values>
                    <name>upstream_answer_time</name>
                </signal>
                <signal type="string_set">
                    <column>5</column>
                    <prefix>path.</prefix>
                </signal>
                <signal type="string_set">
                    <column>6</column>
                    <prefix>code.</prefix>
                </signal>
                <signal type="string_set">
                    <column>4</column>
                    <prefix>method_filtered.</prefix>
                    <unquote>yes</unquote>
                    <regex_filter>
                        <expression>PO</expression>
                        <select_matched>no</select_matched>
                    </regex_filter>
                </signal>
                <signal type="sum">
                    <column>3</column>
                    <name>response_bytes</name>
                </signal>
            </signals>
        </parser>

        <tskv_parser id="parseoauth" file_name="/opt/sezam-logs/blackbox-oauth.log" missingok="1">
            <http_path>/path5</http_path>
            <ignore_parsing_errors>yes</ignore_parsing_errors>
            <ignore_processing_errors>yes</ignore_processing_errors>

            <condition_set id="alias">
                <condition>by_alias!=0 and mode==verify_token</condition>

                <signals>
                    <signal type="rps">
                        <key>mode</key>
                        <name>rps</name>
                    </signal>
                    <signal type="string_set">
                        <key>client_id</key>
                        <prefix>client_id.</prefix>
                    </signal>
                    <signal type="string_set">
                        <key>reason</key>
                        <prefix>reason.</prefix>
                    </signal>

                    <signal_template ignore_errors="1">
                        <name>
                            <pattern>oauth.clientid_{$clid}{$consumer}</pattern>
                            <token from="value" id="clid" func="as_is"> <key>client_id</key> </token>
                            <token from="value" id="consumer" func="regex_group">
                                <key missingok="1">__consumer</key>
                                <in>\d:([^:]+)(:\d)?</in>
                                <out>.consumer_$1</out>
                            </token>
                        </name>
                        <value type="rps"> <!--только sum,regex,substring,rps,hgram -->
                            <key>mode</key>
                            <suffix>_dmmm</suffix>
                        </value>
                    </signal_template>
                    <signal_template>
                        <name>
                            <pattern>oauth.consumerip_{$consumer}</pattern>
                            <token from="value" id="consumer" func="as_is">
                                <key>__consumer_ip</key>
                                <post_process func="map">
                                    <pair from="2a02:6b8:c02:500:8000:611:0:1d" to="_magic_host"/>
                                    <pair from="passport_api" to="buratino"/>
                                    <pair from="loopback" to="_localhost"/>
                                    <pair from="127.0.0.1" to="_localhost"/>
                                    <default>unknown</default>
                                </post_process>
                                <post_process func="map">
                                    <pair from="_magic_host" to="magic_host"/>
                                    <pair from="_localhost" to="localhost"/>
                                </post_process>
                            </token>
                        </name>
                        <value type="rps">
                            <key>mode</key>
                            <suffix>_dmmm</suffix>
                        </value>
                    </signal_template>
                </signals>
            </condition_set>

            <condition_set>
                <signals>
                    <signal type="rps">
                        <key>by_alias</key>
                        <name>rps</name>
                    </signal>
                    <signal type="string_set">
                        <key>reason</key>
                        <prefix>reason.</prefix>
                        <persistent_name>expired</persistent_name>
                        <persistent_name>revoked</persistent_name>
                    </signal>
                    <signal type="substring">
                        <key>needs_refresh</key>
                        <name>needs_refresh</name>
                        <value>1</value>
                    </signal>
                </signals>
            </condition_set>
        </tskv_parser>

        <mem_storage>
            <http_path>/path6</http_path>
        </mem_storage>

    </component>
</config>
