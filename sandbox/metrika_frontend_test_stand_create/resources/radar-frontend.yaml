---
labels:
  deploy_engine: "env_controller"
meta:
  account_id: "abc:service:30740"
  project_id: "radar-frontend-autobetas"
spec:
  deploy_units:
    frontend:
      coredump_config:
        NGINX-workload:
          coredump_processor:
            aggregator: {}
            count_limit: 3
            probability: 100
            total_size_limit_megabytes: 1024
            cleanup_ttl_seconds: 100
        BEM-workload:
          coredump_processor:
            aggregator: {}
            count_limit: 3
            probability: 100
            total_size_limit_megabytes: 1024
            cleanup_ttl_seconds: 100
      images_for_boxes:
        BEM:
          name: "metrika/frontend/radar-bem"
          registry_host: "registry.yandex.net"
          tag: "latest"
        NGINX:
          name: "metrika/frontend/radar-nginx"
          registry_host: "registry.yandex.net"
          tag: "latest"
      logbroker_config:
        pod_additional_resources_request:
          vcpu_guarantee: 0
          vcpu_limit: 0
      network_defaults:
        network_id: "_YMETRICTESTNETS_"
      replica_set:
        replica_set_template:
          constraints:
            antiaffinity_constraints:
              - key: "node"
                max_pods: 1
          pod_template_spec:
            spec:
              disk_volume_requests:
                - id: "radar-frontend-testing-disk-0"
                  labels:
                    used_by_infra: true
                  quota_policy:
                    bandwidth_guarantee: 5242880
                    bandwidth_limit: 10485760
                    capacity: 5368709120
                  storage_class: "hdd"
              host_infra:
                monitoring: {}
              ip6_address_requests:
                - enable_dns: true
                  network_id: "_YMETRICTESTNETS_"
                  vlan_id: "backbone"
                - enable_dns: true
                  network_id: "_YMETRICTESTNETS_"
                  vlan_id: "fastbone"
              pod_agent_payload:
                spec:
                  boxes:
                    - id: "NGINX"
                      rootfs: {}
                    - id: "BEM"
                      rootfs: {}
                      static_resources:
                        - mount_point: "/static_resources/geobase"
                          resource_ref: "geobase6"
                        - mount_point: "/static_resources/tzdata"
                          resource_ref: "geobase6-tzdata"
                  mutable_workloads:
                    - workload_ref: "NGINX-workload"
                    - workload_ref: "BEM-workload"
                  resources:
                    static_resources:
                      - id: "geobase6"
                        url: "rbtorrent:f318e8c865138fe0ebe24fbdf01ae907cd28fe82"
                        verification:
                          check_period_ms: 600000
                          checksum: "EMPTY:"
                      - id: "geobase6-tzdata"
                        url: "rbtorrent:c85b8fddf5d3bc0832350155e26be1e95e306704"
                        verification:
                          check_period_ms: 600000
                          checksum: "EMPTY:"
                  workloads:
                    - box_ref: "NGINX"
                      env:
                        - name: "APPLICATION_BEM_HTTP_PORT"
                          value:
                            literal_env:
                              value: "8081"
                        - name: "APPLICATION_HTTP_PORT"
                          value:
                            literal_env:
                              value: "8080"
                        - name: "APPLICATION_NGINX_PORT"
                          value:
                            literal_env:
                              value: "80"
                        - name: "NGINX_PID_FILE"
                          value:
                            literal_env:
                              value: "/var/run/nginx.pid"
                      id: "NGINX-workload"
                      readiness_check:
                        tcp_check:
                          port: 80
                      start: {}
                      stop_policy:
                        container:
                          command_line: "/bin/bash -c '[ ! -e $NGINX_PID_FILE ] || { sleep 80; kill -s QUIT $(cat $NGINX_PID_FILE); while [[ -e $NGINX_PID_FILE ]]; do sleep 3; done; }'"
                          time_limit:
                            min_restart_period_ms: 30000
                            max_restart_period_ms: 30000
                            max_execution_time_ms: 230000
                        max_tries: 3
                      transmit_logs: true
                    - box_ref: "BEM"
                      env:
                        - name: "APPLICATION_HTTP_PORT"
                          value:
                            literal_env:
                              value: "8081"
                        - name: "BISHOP_ENVIRONMENT_NAME"
                          value:
                            literal_env:
                              value: "metrika.deploy.frontend.radar-bem.testing.development"
                        - name: "BISHOP_PROGRAM_NAME"
                          value:
                            literal_env:
                              value: "radar-bem-frontend"
                        - name: "CONFIG_ENV"
                          value:
                            literal_env:
                              value: "development"
                        - name: "NODE_ENV"
                          value:
                            literal_env:
                              value: "development"
                        - name: "NODE_PID_FILE"
                          value:
                            literal_env:
                              value: "/var/run/radar-bem.pid"
                        - name: "BISHOP_OAUTH_TOKEN"
                          value:
                            secret_env:
                              alias: "robot-metrika-test"
                              id: "bishop-token"
                        - name: "YAV_OAUTH_TOKEN"
                          value:
                            secret_env:
                              alias: "robot-metrika-test"
                              id: "yav-token"
                      id: "BEM-workload"
                      init:
                        - command_line: '/app/setupGeobase.sh'
                      liveness_check:
                        http_get:
                          expected_answer: "OK"
                          path: "/healthchecks/liveness"
                          port: 8081
                      readiness_check:
                        http_get:
                          expected_answer: "OK"
                          path: "/healthchecks/readiness"
                          port: 8081
                      start: {}
                      stop_policy:
                        container:
                          command_line: '/app/stopNodeWorkload.sh'
                          time_limit:
                            min_restart_period_ms: 30000
                            max_restart_period_ms: 30000
                            max_execution_time_ms: 230000
                        max_tries: 3
                      transmit_logs: true
              resource_requests:
                memory_guarantee: 1073741824
                memory_limit: 1073741824
                vcpu_guarantee: 300
                vcpu_limit: 300
              secret_refs:
                robot-metrika-test:
                  secret_id: "sec-01cq6h5rtj649gg8h94zwqshc8"
                  secret_version: "ver-01f8z3028462mxthpb8rtjpeef"
                radar-frontend-testing:
                  secret_id: "sec-01dd1d65ndgzb13xs3q69pst3e"
                  secret_version: "ver-01dpqt7ddeg1sps090ea4zjfay"
      tvm_config:
        blackbox_environment: "Prod"
        client_port: 4
        clients:
          - destinations:
              - abc_service_id: "1892"
                alias: "globalApi"
                app_id: 2002860
              - abc_service_id: "1892"
                alias: "topsitesApi"
                app_id: 2002862
              - abc_service_id: "14"
                alias: "blackbox"
                app_id: 239
            secret_selector:
              alias: "radar-frontend-testing"
              id: "tvmSecret"
            source:
              abc_service_id: "1892"
              alias: "radarFrontend"
              app_id: 2002856
        mode: "enabled"
  revision_info: {}
