{
    "headers": {
        "diff_data": {
            "$encoding": "base64",
            "$data": "TGFzdC1Nb2RpZmllZDogPFBBSU5URUQ+CkV4cGlyZXM6IDxQQUlOVEVEPgpDYWNoZS1Db250cm9sOiBwcml2YXRlLCBuby1jYWNoZSwgbm8tc3RvcmUsIG11c3QtcmV2YWxpZGF0ZSwgbWF4LWFnZT0wClByYWdtYTogbm8tY2FjaGUK"
        },
        "diff_method": "text_diff"
    },
    "response_data": {
        "diff_data": {
            "$encoding": "base64",
            "$data": ""
        },
        "diff_method": "text_diff"
    },
    "logs_data": {
        "diff_data": {
            "event": [
                {
                    "ClientTimestamp": 123,
                    "GeoCoefRegionSource": "undefined",
                    "LogID": 88888888,
                    "Options": [
                        "picture",
                        "commerce",
                        "flat-page",
                        "stationary-connection",
                        "autobudget",
                        "extended-relevance-match",
                        "greedy-direct-limit",
                        "one_more_option"
                    ],
                    "___MD5___": "843570f4bd6edbbe4321c86da40cd709"
                },
                {
                    "___MD5___": "843570f4bd6edbbe4321c86da40cd709"
                }
            ]
        },
        "diff_method": "log_diff"
    },
    "code": {
        "diff_data": {
            "$encoding": "plain",
            "$data": "200"
        },
        "diff_method": "text_diff"
    },
    "request": {
        "diff_data": {
            "$encoding": "base64",
            "$data": "R0VUIC9jb3VudC9XRTRlaklfek82MDBsR08wVDBiX3YtS0x2U0h2RzBLME8wNG5jLUVjTm0wMDAwMHVqQmVXWTA5YWFlb2lXMEJtMUc2V2pqMGJmbHpBRjVCSDFsVHI3OTYyLXRVN01tMDAwQWE3ZTJ6X1VNSkRTV1dTZ1dpRzY4YTEwMDAwMEYwQjItMERXZTIwRzlXRWpnNk5pVmhWYWZ2SXUweTFsLWRwMlVhSWRoQU85SmZTYTlKTzVTNkF6a29aWnhweU9fMzk1bDBfV0hVZTVtY1A2RDBPOFZXT1cxY202UldQNTAxZ1JGbXAxT0Uya29lUTlqNGpHYTljTzlTajV5aVNlNXFwWTRBRlVhNkVJZDNGSnptNHhGMDBreTBRR1FBUUFET2F1bVllNS04VzRTdXViV1MwfjE9V1dtZWpJX3pPN2ExNUgwMEQxamZWczV3VUdCQW1nTk1oMWMwMFI2cWc5UzFZMDZOc2dRUUd2MDF2OXc2aEpNTzBTWWx5a3V3ZTA2b3NDd2lEUVcxbkFfb3haZ3UwUUo5WmdDVHMwN3VmQldRdTA2Q3pSQzh3MDdBZTBCVXZpZUVXMEZLemd3dTBlVzN4RUU0c1d3TzB3ckZlMENBaTBGcjZlVzVjZldNYTBNMnJIUW0xT2xJMVJXNW5rNDVtME1TLXJoODFQQUc1LTA1RmdXNl9BUzFrMFVxMWw0NzAwMldYQS1wZkdVa1B2bm1xQlZIRnlhQU9ZZkJGTkoxcWxXQVdCS09zR2tXQnR6dlBDcm8yRVdCY2ZXTVkwcHNlRHctMFFhQ2xGZ1NKT2Jzd2hfZTM5eTJjMHQ3ekF1d1cxM1EtejBMbUE4SWVRUjQzU3JMS3ppX3dIQVVpZldiRWJvR2I5V0oxQVdKa2Vkbnlmc0F6bDRMdTFGNnVHTTA1ODBXZTFKNnVHTWU1OEJMNWkwS1dCM1pCU1dLMUQwS3hQN09FeldLbUNnc18wTmU1MHA4NVZvcVlDODRxMU4wb2hSeTFUV0xtT2hzeEFFRmxGblplMVJHWnkzdzFSME1sR0Y5NWowTXpnM1VsVzYxNW0zbUZ2V05fODB4bTFTcnMxVjBYM3RXNXdKZGJWTzV3MVNCLTFWeVpfWngxUGFPZTFXMWkxWkdfQlZ5MVJXTzJfV096QzNNZUVGeHF2UDhXMWM5NlNtMmExYTFlMWR5Zm02dTZWX19fbTRQMEZfNEc1ODdhR3ZiUTJhWVM1anM2TkFmMWNCM2I4RzdMV2pJR3lXd1UxTTI2RzQxbTZrb0xNNjlMYk8wRWk1WTA4azdHOEJCWTg2NXBsY2lXcXotLUtoZng4UUFaYVlDY3NtNzNXMDB+MSBIVFRQLzEuMQ0KY29va2llOiB6bT1tLXdoaXRlX2JlbmRlcl96ZW4tc3NyLmdlbi53ZWJwLmNzcy1odHRwcyUyNTNBczNob21lLXN0YXRpY18ydHVHRC1lUVJmNlJURjlFbjdhNDhQQ0lLelUlMjUzQWw7IGN5Y2FkYT1aJTJGUVJrU1M2dVdGOVolMkZoWkRzQVZFYVVXS2phWVdZVUlOSWolMkZLRmJ2OUJBJTNEOyBtZGE9MDsgaXNfZ2Rwcj0wOyBpPWhHbiUyRnhrTE50Y1hxdWZQWGhFb3RYZVlSNEM1T0NtdmhpOEZzN3l6bUpUM2Z6Y3ExQVo5dHpIWVp3eXpCejl1NXNlMFVwNyUyQnBYYWs5aURjV2RSMGs5RSUyQiUyQlNzNCUzRDsgeWFuZGV4X2dpZD0xMDc1MDsgeWFuZGV4dWlkPTU5MjU2OTM2NzE1NzczNDIxMzQ7IF95bV92aXNvcmNfNTAzNzc1MTk9YjsgeWFicy1mcmVxdWVuY3k9JTJGNSUyRjRHMHAwQi13Zkx6eFJlclYlMkZvR0RwUzlHMDAwM2lGTTVILWQ5bWIwMDAwRW16R013QVNkMkswMDAweDNxWDljd21TOUswMDAzakZJMEUlMkY7IHl1aWRzcz01OTI1NjkzNjcxNTc3MzQyMTM0OyBfeW1fdmlzb3JjXzI4NjU3Mz13OyB5bWV4PTE1ODk4NzAzMDcub3l1LjI1Njk1MjUzMTU4NzExMDEyNCUyMzE4OTYyNDUyNjcueXJ0cy4xNTgwODg1MjY3JTIzMTkwMjYzODMwNy55cnRzaS4xNTg3Mjc4MzA3OyBfeW1fZD0xNjA0NzcyMDY4OyBpc19nZHByX2I9Q0tqd2R4Q29BeWdDOyB5cD0xNjE4ODE0MzEzLmNsZC4yMjcwNDUyJTIzMTYxODgxNDMxMy5icmQuNjMwMTAwMDAwMCUyMzE2MjA1MDE4Nzguc3ptLjElM0ExMjgweDEwMjQlM0ExMjE1eDkwNiUyMzE2MzYyNjk5MzEucF9zdy4xNjA0NzMzOTMwJTIzMTYxMzc0NzkwMi5zdGx0cC5zZXJwX2JrLW1hcF8xXzE1ODIyMTE5MDIlMjMxNjE4NDA2ODc1LnlndS4xJTIzMTg5OTcxNDc0NS5zYWQuMTU4MzkxMjYxOSUzQTE1ODQzNTQ3NDUlM0EyJTIzMTYwNjA0NzU2MC5jc2MuMiUyMzE2MDgwNTUxMDQuaGtzLjAlMjMxNjA1MDMxMjY3LmNsaC4yMTc1NjYxJTIzMTYwNTMwMTU3My56bWJsdC4xNzcxJTIzMTYwNTMwMTU3My56bWJici55YW5kZXhicm93c2VyJTNBMjBfOV8zXzEzNiUyMzE2MDQ3Nzk4NTkuZ3BhdXRvLjU1XzU2NzMyNiUzQTM4XzIyNTg0MiUzQTEwMDAwMCUzQTMlM0ExNjA0NzcyNjU5OyBfeW1faXNhZD0yOyBQSXdzZlpldT0xOyB5cz15YnpjYy5ydSUyM3N2dC4xJTIzZGVmX2Jyby4xJTIzbWNsaWQuMjE3NTY2MTsgbXk9WXdBJTNEOyBfeW1fdWlkPTE1NzczNDIxNDA2NDQzNDUwMTg7IGdkcHI9MDsgeWFicy1leHAtc2lkPThkZmRkMmM3MTIzNDU2NzgNCmFjY2VwdDogYXBwbGljYXRpb24vanNvbg0KYWNjZXB0LWVuY29kaW5nOiBnemlwLGRlZmxhdGUNCmNvbnRlbnQtZW5jb2Rpbmc6IGd6aXANCmNvbnRlbnQtdHlwZTogYXBwbGljYXRpb24vanNvbg0KaG9zdDogYW4ueWFuZGV4LnJ1DQp1c2VyLWFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzg1LjAuNDE4My4xMDIgWWFCcm93c2VyLzIwLjkuMy4xMzYgWW93c2VyLzIuNSBTYWZhcmkvNTM3LjM2DQp4LWZvcndhcmRlZC1mb3I6IDkzLjE4NS4yMDIuMjAwLCAyYTAyOjZiODpjMGY6MWE4NzoxMGU6ZmFmOTowOjFlOTgsIDJhMDI6NmI4OmMwMDozZTk2OjA6MTQ2NDoyMTFhOjAsIDJhMDI6NmI4OmMyMzoxYjE5OjEwZTpmYWY4OjA6NWU5NywgMmEwMjo2Yjg6YzEyOjI3ODY6MDoxNDUyOjdjYzk6NzIzNA0KeC1mb3J3YXJkZWQtcHJvdG86IGh0dHBzDQp4LWZvcndhcmRlZC1wcm90by12ZXJzaW9uOiBIVFRQLzEuMQ0KeC1yZWFsLWlwOiA5My4xODUuMjAyLjIwMA0KeC1yZWFsLXBvcnQ6IDUyODQ2DQp4LXJlcXVlc3Qtb3JpZ2luLWlwOiAyYTAyOjZiODpjMTI6NDU4NzowOjE0NTI6OWZlYTpiNWQzDQp4LXlhYnMtYmFsYW5jZXItc2Ftb2dvbi1rZXk6IDINCngteWFicy1kZWJ1Zy1vcHRpb25zLWpzb246IHsibG9ncyI6IHRydWUsICJidXNpbmVzcyI6IGZhbHNlLCAibXhfemVyb19mZWF0dXJlcyI6IGZhbHNlLCAiZmlsdGVyX2xvZyI6IGZhbHNlLCAidHJhZmFyZXQiOiBmYWxzZSwgImRlYnVnX2xvZyI6IGZhbHNlLCAia2V5d29yZHMiOiBmYWxzZSwgImV4dHMiOiB0cnVlLCAidHJhY2UiOiBmYWxzZSwgImZvcmNlX2V2ZW50X2xvZyI6IGZhbHNlLCAibWF0Y2hfbG9nIjogZmFsc2UsICJleHRfaHR0cF9lbnRpdGllcyI6IGZhbHNlLCAibXgiOiBmYWxzZX0NCngteWFicy1kZWJ1Zy1vdXRwdXQ6IHByb3RvLWJpbmFyeQ0KeC15YWJzLWRlYnVnLXRva2VuOiA4ZGZkZDJjNzEyMzQ1Njc4DQp4LXlhYnMtZGV0ZXJtaW5pc3RpYy1yZXF1ZXN0LWlkOiAxDQp4LXlhYnMtcHJlc2V0cy1mcm9tLWJhbGFuY2VyOiBXMTA9DQp4LXlhYnMtdGVzdC1yYW5kb206IDE3MTQxNzc0NDINCngteWFicy10ZXN0LXRpbWU6IDE2MDQ3NzI3NjMNCngteWFicy1yZXF1ZXN0LWlkOiAxODkxODAwMDY3NTA0DQpDb25uZWN0aW9uOiBDbG9zZQ0KDQo="
        },
        "diff_method": "no_diff"
    },
    "handler": {
        "diff_data": {
            "$encoding": "plain",
            "$data": "count"
        },
        "diff_method": "no_diff"
    }
}